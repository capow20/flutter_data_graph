{"version":3,"file":"index.js","sources":["../../../data_graph/node_modules/dygraphs/src/dygraph-tickers.js","../../../data_graph/node_modules/dygraphs/src/dygraph-utils.js","../../../data_graph/node_modules/dygraphs/src/dygraph-layout.js","../../../data_graph/node_modules/dygraphs/src/dygraph-canvas.js","../../../data_graph/node_modules/dygraphs/src/dygraph-interaction-model.js","../../../data_graph/node_modules/dygraphs/src/dygraph-default-attrs.js","../../../data_graph/node_modules/dygraphs/src/dygraph-options.js","../../../data_graph/node_modules/dygraphs/src/iframe-tarp.js","../../../data_graph/node_modules/dygraphs/src/datahandler/datahandler.js","../../../data_graph/node_modules/dygraphs/src/datahandler/default.js","../../../data_graph/node_modules/dygraphs/src/datahandler/bars.js","../../../data_graph/node_modules/dygraphs/src/datahandler/bars-error.js","../../../data_graph/node_modules/dygraphs/src/datahandler/bars-custom.js","../../../data_graph/node_modules/dygraphs/src/datahandler/default-fractions.js","../../../data_graph/node_modules/dygraphs/src/datahandler/bars-fractions.js","../../../data_graph/node_modules/dygraphs/src/plugins/annotations.js","../../../data_graph/node_modules/dygraphs/src/plugins/axes.js","../../../data_graph/node_modules/dygraphs/src/plugins/chart-labels.js","../../../data_graph/node_modules/dygraphs/src/plugins/grid.js","../../../data_graph/node_modules/dygraphs/src/plugins/legend.js","../../../data_graph/node_modules/dygraphs/src/plugins/range-selector.js","../../../data_graph/node_modules/dygraphs/src/dygraph-gviz.js","../../../data_graph/node_modules/dygraphs/src/dygraph.js","../../../data_graph/node_modules/fontfaceobserver/fontfaceobserver.standalone.js","../../../data_graph/src/utils/tag_utils.js","../../../data_graph/src/utils/extra_line_utils.js","../../../data_graph/src/utils/circle_utils.js","../../../data_graph/src/main.js"],"sourcesContent":["/**\n * @license\n * Copyright 2011 Dan Vanderkam (danvdk@gmail.com)\n * MIT-licenced: https://opensource.org/licenses/MIT\n */\n\n/**\n * @fileoverview Description of this file.\n * @author danvk@google.com (Dan Vanderkam)\n */\n\n/*\n * A ticker is a function with the following interface:\n *\n * function(a, b, pixels, options_view, dygraph, forced_values);\n * -> [ { v: tick1_v, label: tick1_label[, label_v: label_v1] },\n *      { v: tick2_v, label: tick2_label[, label_v: label_v2] },\n *      ...\n *    ]\n *\n * The returned value is called a \"tick list\".\n *\n * Arguments\n * ---------\n *\n * [a, b] is the range of the axis for which ticks are being generated. For a\n * numeric axis, these will simply be numbers. For a date axis, these will be\n * millis since epoch (convertable to Date objects using \"new Date(a)\" and \"new\n * Date(b)\").\n *\n * opts provides access to chart- and axis-specific options. It can be used to\n * access number/date formatting code/options, check for a log scale, etc.\n *\n * pixels is the length of the axis in pixels. opts('pixelsPerLabel') is the\n * minimum amount of space to be allotted to each label. For instance, if\n * pixels=400 and opts('pixelsPerLabel')=40 then the ticker should return\n * between zero and ten (400/40) ticks.\n *\n * dygraph is the Dygraph object for which an axis is being constructed.\n *\n * forced_values is used for secondary y-axes. The tick positions are typically\n * set by the primary y-axis, so the secondary y-axis has no choice in where to\n * put these. It simply has to generate labels for these data values.\n *\n * Tick lists\n * ----------\n * Typically a tick will have both a grid/tick line and a label at one end of\n * that line (at the bottom for an x-axis, at left or right for the y-axis).\n *\n * A tick may be missing one of these two components:\n * - If \"label_v\" is specified instead of \"v\", then there will be no tick or\n *   gridline, just a label.\n * - Similarly, if \"label\" is not specified, then there will be a gridline\n *   without a label.\n *\n * This flexibility is useful in a few situations:\n * - For log scales, some of the tick lines may be too close to all have labels.\n * - For date scales where years are being displayed, it is desirable to display\n *   tick marks at the beginnings of years but labels (e.g. \"2006\") in the\n *   middle of the years.\n */\n\n/*jshint sub:true */\n/*global Dygraph:false */\n\"use strict\";\n\nimport * as utils from './dygraph-utils';\n\n/** @typedef {Array.<{v:number, label:string, label_v:(string|undefined)}>} */\nvar TickList = undefined;  // the ' = undefined' keeps jshint happy.\n\n/** @typedef {function(\n *    number,\n *    number,\n *    number,\n *    function(string):*,\n *    Dygraph=,\n *    Array.<number>=\n *  ): TickList}\n */\nvar Ticker = undefined;  // the ' = undefined' keeps jshint happy.\n\n/** @type {Ticker} */\nexport var numericLinearTicks = function(a, b, pixels, opts, dygraph, vals) {\n  var nonLogscaleOpts = function(opt) {\n    if (opt === 'logscale') return false;\n    return opts(opt);\n  };\n  return numericTicks(a, b, pixels, nonLogscaleOpts, dygraph, vals);\n};\n\n/** @type {Ticker} */\nexport var numericTicks = function(a, b, pixels, opts, dygraph, vals) {\n  var pixels_per_tick = /** @type{number} */(opts('pixelsPerLabel'));\n  var ticks = [];\n  var i, j, tickV, nTicks;\n  if (vals) {\n    for (i = 0; i < vals.length; i++) {\n      ticks.push({v: vals[i]});\n    }\n  } else {\n    // TODO(danvk): factor this log-scale block out into a separate function.\n    if (opts(\"logscale\")) {\n      nTicks  = Math.floor(pixels / pixels_per_tick);\n      var minIdx = utils.binarySearch(a, PREFERRED_LOG_TICK_VALUES, 1);\n      var maxIdx = utils.binarySearch(b, PREFERRED_LOG_TICK_VALUES, -1);\n      if (minIdx == -1) {\n        minIdx = 0;\n      }\n      if (maxIdx == -1) {\n        maxIdx = PREFERRED_LOG_TICK_VALUES.length - 1;\n      }\n      // Count the number of tick values would appear, if we can get at least\n      // nTicks / 4 accept them.\n      var lastDisplayed = null;\n      if (maxIdx - minIdx >= nTicks / 4) {\n        for (var idx = maxIdx; idx >= minIdx; idx--) {\n          var tickValue = PREFERRED_LOG_TICK_VALUES[idx];\n          var pixel_coord = Math.log(tickValue / a) / Math.log(b / a) * pixels;\n          var tick = { v: tickValue };\n          if (lastDisplayed === null) {\n            lastDisplayed = {\n              tickValue : tickValue,\n              pixel_coord : pixel_coord\n            };\n          } else {\n            if (Math.abs(pixel_coord - lastDisplayed.pixel_coord) >= pixels_per_tick) {\n              lastDisplayed = {\n                tickValue : tickValue,\n                pixel_coord : pixel_coord\n              };\n            } else {\n              tick.label = \"\";\n            }\n          }\n          ticks.push(tick);\n        }\n        // Since we went in backwards order.\n        ticks.reverse();\n      }\n    }\n\n    // ticks.length won't be 0 if the log scale function finds values to insert.\n    if (ticks.length === 0) {\n      // Basic idea:\n      // Try labels every 1, 2, 5, 10, 20, 50, 100, etc.\n      // Calculate the resulting tick spacing (i.e. this.height_ / nTicks).\n      // The first spacing greater than pixelsPerYLabel is what we use.\n      // TODO(danvk): version that works on a log scale.\n      var kmg2 = opts(\"labelsKMG2\");\n      var mults, base;\n      if (kmg2) {\n        mults = [1, 2, 4, 8, 16, 32, 64, 128, 256];\n        base = 16;\n      } else {\n        mults = [1, 2, 5, 10, 20, 50, 100];\n        base = 10;\n      }\n\n      // Get the maximum number of permitted ticks based on the\n      // graph's pixel size and pixels_per_tick setting.\n      var max_ticks = Math.ceil(pixels / pixels_per_tick);\n\n      // Now calculate the data unit equivalent of this tick spacing.\n      // Use abs() since graphs may have a reversed Y axis.\n      var units_per_tick = Math.abs(b - a) / max_ticks;\n\n      // Based on this, get a starting scale which is the largest\n      // integer power of the chosen base (10 or 16) that still remains\n      // below the requested pixels_per_tick spacing.\n      var base_power = Math.floor(Math.log(units_per_tick) / Math.log(base));\n      var base_scale = Math.pow(base, base_power);\n\n      // Now try multiples of the starting scale until we find one\n      // that results in tick marks spaced sufficiently far apart.\n      // The \"mults\" array should cover the range 1 .. base^2 to\n      // adjust for rounding and edge effects.\n      var scale, low_val, high_val, spacing;\n      for (j = 0; j < mults.length; j++) {\n        scale = base_scale * mults[j];\n        low_val = Math.floor(a / scale) * scale;\n        high_val = Math.ceil(b / scale) * scale;\n        nTicks = Math.abs(high_val - low_val) / scale;\n        spacing = pixels / nTicks;\n        if (spacing > pixels_per_tick) break;\n      }\n\n      // Construct the set of ticks.\n      // Allow reverse y-axis if it's explicitly requested.\n      if (low_val > high_val) scale *= -1;\n      for (i = 0; i <= nTicks; i++) {\n        tickV = low_val + i * scale;\n        ticks.push( {v: tickV} );\n      }\n    }\n  }\n\n  var formatter = /**@type{AxisLabelFormatter}*/(opts('axisLabelFormatter'));\n\n  // Add labels to the ticks.\n  for (i = 0; i < ticks.length; i++) {\n    if (ticks[i].label !== undefined) continue;  // Use current label.\n    // TODO(danvk): set granularity to something appropriate here.\n    ticks[i].label = formatter.call(dygraph, ticks[i].v, 0, opts, dygraph);\n  }\n\n  return ticks;\n};\n\n/** @type {Ticker} */\nexport var dateTicker = function(a, b, pixels, opts, dygraph, vals) {\n  var chosen = pickDateTickGranularity(a, b, pixels, opts);\n\n  if (chosen >= 0) {\n    return getDateAxis(a, b, chosen, opts, dygraph);\n  } else {\n    // this can happen if self.width_ is zero.\n    return [];\n  }\n};\n\n// Time granularity enumeration\nexport var Granularity = {\n  MILLISECONDLY: 0,\n  TWO_MILLISECONDLY: 1,\n  FIVE_MILLISECONDLY: 2,\n  TEN_MILLISECONDLY: 3,\n  FIFTY_MILLISECONDLY: 4,\n  HUNDRED_MILLISECONDLY: 5,\n  FIVE_HUNDRED_MILLISECONDLY: 6,\n  SECONDLY: 7,\n  TWO_SECONDLY: 8,\n  FIVE_SECONDLY: 9,\n  TEN_SECONDLY: 10,\n  THIRTY_SECONDLY: 11,\n  MINUTELY: 12,\n  TWO_MINUTELY: 13,\n  FIVE_MINUTELY: 14,\n  TEN_MINUTELY: 15,\n  THIRTY_MINUTELY: 16,\n  HOURLY: 17,\n  TWO_HOURLY: 18,\n  SIX_HOURLY: 19,\n  DAILY: 20,\n  TWO_DAILY: 21,\n  WEEKLY: 22,\n  MONTHLY: 23,\n  QUARTERLY: 24,\n  BIANNUAL: 25,\n  ANNUAL: 26,\n  DECADAL: 27,\n  CENTENNIAL: 28,\n  NUM_GRANULARITIES: 29\n}\n\n// Date components enumeration (in the order of the arguments in Date)\n// TODO: make this an @enum\nvar DateField = {\n  DATEFIELD_Y: 0,\n  DATEFIELD_M: 1,\n  DATEFIELD_D: 2,\n  DATEFIELD_HH: 3,\n  DATEFIELD_MM: 4,\n  DATEFIELD_SS: 5,\n  DATEFIELD_MS: 6,\n  NUM_DATEFIELDS: 7\n};\n\n/**\n * The value of datefield will start at an even multiple of \"step\", i.e.\n *   if datefield=SS and step=5 then the first tick will be on a multiple of 5s.\n *\n * For granularities <= HOURLY, ticks are generated every `spacing` ms.\n *\n * At coarser granularities, ticks are generated by incrementing `datefield` by\n *   `step`. In this case, the `spacing` value is only used to estimate the\n *   number of ticks. It should roughly correspond to the spacing between\n *   adjacent ticks.\n *\n * @type {Array.<{datefield:number, step:number, spacing:number}>}\n */\nvar TICK_PLACEMENT = [];\nTICK_PLACEMENT[Granularity.MILLISECONDLY]               = {datefield: DateField.DATEFIELD_MS, step:   1, spacing: 1};\nTICK_PLACEMENT[Granularity.TWO_MILLISECONDLY]           = {datefield: DateField.DATEFIELD_MS, step:   2, spacing: 2};\nTICK_PLACEMENT[Granularity.FIVE_MILLISECONDLY]          = {datefield: DateField.DATEFIELD_MS, step:   5, spacing: 5};\nTICK_PLACEMENT[Granularity.TEN_MILLISECONDLY]           = {datefield: DateField.DATEFIELD_MS, step:  10, spacing: 10};\nTICK_PLACEMENT[Granularity.FIFTY_MILLISECONDLY]         = {datefield: DateField.DATEFIELD_MS, step:  50, spacing: 50};\nTICK_PLACEMENT[Granularity.HUNDRED_MILLISECONDLY]       = {datefield: DateField.DATEFIELD_MS, step: 100, spacing: 100};\nTICK_PLACEMENT[Granularity.FIVE_HUNDRED_MILLISECONDLY]  = {datefield: DateField.DATEFIELD_MS, step: 500, spacing: 500};\nTICK_PLACEMENT[Granularity.SECONDLY]        = {datefield: DateField.DATEFIELD_SS, step:   1, spacing: 1000 * 1};\nTICK_PLACEMENT[Granularity.TWO_SECONDLY]    = {datefield: DateField.DATEFIELD_SS, step:   2, spacing: 1000 * 2};\nTICK_PLACEMENT[Granularity.FIVE_SECONDLY]   = {datefield: DateField.DATEFIELD_SS, step:   5, spacing: 1000 * 5};\nTICK_PLACEMENT[Granularity.TEN_SECONDLY]    = {datefield: DateField.DATEFIELD_SS, step:  10, spacing: 1000 * 10};\nTICK_PLACEMENT[Granularity.THIRTY_SECONDLY] = {datefield: DateField.DATEFIELD_SS, step:  30, spacing: 1000 * 30};\nTICK_PLACEMENT[Granularity.MINUTELY]        = {datefield: DateField.DATEFIELD_MM, step:   1, spacing: 1000 * 60};\nTICK_PLACEMENT[Granularity.TWO_MINUTELY]    = {datefield: DateField.DATEFIELD_MM, step:   2, spacing: 1000 * 60 * 2};\nTICK_PLACEMENT[Granularity.FIVE_MINUTELY]   = {datefield: DateField.DATEFIELD_MM, step:   5, spacing: 1000 * 60 * 5};\nTICK_PLACEMENT[Granularity.TEN_MINUTELY]    = {datefield: DateField.DATEFIELD_MM, step:  10, spacing: 1000 * 60 * 10};\nTICK_PLACEMENT[Granularity.THIRTY_MINUTELY] = {datefield: DateField.DATEFIELD_MM, step:  30, spacing: 1000 * 60 * 30};\nTICK_PLACEMENT[Granularity.HOURLY]          = {datefield: DateField.DATEFIELD_HH, step:   1, spacing: 1000 * 3600};\nTICK_PLACEMENT[Granularity.TWO_HOURLY]      = {datefield: DateField.DATEFIELD_HH, step:   2, spacing: 1000 * 3600 * 2};\nTICK_PLACEMENT[Granularity.SIX_HOURLY]      = {datefield: DateField.DATEFIELD_HH, step:   6, spacing: 1000 * 3600 * 6};\nTICK_PLACEMENT[Granularity.DAILY]           = {datefield: DateField.DATEFIELD_D,  step:   1, spacing: 1000 * 86400};\nTICK_PLACEMENT[Granularity.TWO_DAILY]       = {datefield: DateField.DATEFIELD_D,  step:   2, spacing: 1000 * 86400 * 2};\nTICK_PLACEMENT[Granularity.WEEKLY]          = {datefield: DateField.DATEFIELD_D,  step:   7, spacing: 1000 * 604800};\nTICK_PLACEMENT[Granularity.MONTHLY]         = {datefield: DateField.DATEFIELD_M,  step:   1, spacing: 1000 * 7200  * 365.2425}; // 1e3 * 60 * 60 * 24 * 365.2425 / 12\nTICK_PLACEMENT[Granularity.QUARTERLY]       = {datefield: DateField.DATEFIELD_M,  step:   3, spacing: 1000 * 21600 * 365.2425}; // 1e3 * 60 * 60 * 24 * 365.2425 / 4\nTICK_PLACEMENT[Granularity.BIANNUAL]        = {datefield: DateField.DATEFIELD_M,  step:   6, spacing: 1000 * 43200 * 365.2425}; // 1e3 * 60 * 60 * 24 * 365.2425 / 2\nTICK_PLACEMENT[Granularity.ANNUAL]          = {datefield: DateField.DATEFIELD_Y,  step:   1, spacing: 1000 * 86400   * 365.2425}; // 1e3 * 60 * 60 * 24 * 365.2425 * 1\nTICK_PLACEMENT[Granularity.DECADAL]         = {datefield: DateField.DATEFIELD_Y,  step:  10, spacing: 1000 * 864000  * 365.2425}; // 1e3 * 60 * 60 * 24 * 365.2425 * 10\nTICK_PLACEMENT[Granularity.CENTENNIAL]      = {datefield: DateField.DATEFIELD_Y,  step: 100, spacing: 1000 * 8640000 * 365.2425}; // 1e3 * 60 * 60 * 24 * 365.2425 * 100\n\n/**\n * This is a list of human-friendly values at which to show tick marks on a log\n * scale. It is k * 10^n, where k=1..9 and n=-39..+39, so:\n * ..., 1, 2, 3, 4, 5, ..., 9, 10, 20, 30, ..., 90, 100, 200, 300, ...\n * NOTE: this assumes that utils.LOG_SCALE = 10.\n * @type {Array.<number>}\n */\nvar PREFERRED_LOG_TICK_VALUES = (function() {\n  var vals = [];\n  for (var power = -39; power <= 39; power++) {\n    var range = Math.pow(10, power);\n    for (var mult = 1; mult <= 9; mult++) {\n      var val = range * mult;\n      vals.push(val);\n    }\n  }\n  return vals;\n})();\n\n/**\n * Determine the correct granularity of ticks on a date axis.\n *\n * @param {number} a Left edge of the chart (ms)\n * @param {number} b Right edge of the chart (ms)\n * @param {number} pixels Size of the chart in the relevant dimension (width).\n * @param {function(string):*} opts Function mapping from option name -&gt; value.\n * @return {number} The appropriate axis granularity for this chart. See the\n *     enumeration of possible values in dygraph-tickers.js.\n */\nexport var pickDateTickGranularity = function(a, b, pixels, opts) {\n  var pixels_per_tick = /** @type{number} */(opts('pixelsPerLabel'));\n  for (var i = 0; i < Granularity.NUM_GRANULARITIES; i++) {\n    var num_ticks = numDateTicks(a, b, i);\n    if (pixels / num_ticks >= pixels_per_tick) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n/**\n * Compute the number of ticks on a date axis for a given granularity.\n * @param {number} start_time\n * @param {number} end_time\n * @param {number} granularity (one of the granularities enumerated above)\n * @return {number} (Approximate) number of ticks that would result.\n */\nvar numDateTicks = function(start_time, end_time, granularity) {\n  var spacing = TICK_PLACEMENT[granularity].spacing;\n  return Math.round(1.0 * (end_time - start_time) / spacing);\n};\n\n/**\n * Compute the positions and labels of ticks on a date axis for a given granularity.\n * @param {number} start_time\n * @param {number} end_time\n * @param {number} granularity (one of the granularities enumerated above)\n * @param {function(string):*} opts Function mapping from option name -&gt; value.\n * @param {Dygraph=} dg\n * @return {!TickList}\n */\nexport var getDateAxis = function(start_time, end_time, granularity, opts, dg) {\n  var formatter = /** @type{AxisLabelFormatter} */(\n      opts(\"axisLabelFormatter\"));\n  var utc = opts(\"labelsUTC\");\n  var accessors = utc ? utils.DateAccessorsUTC : utils.DateAccessorsLocal;\n\n  var datefield = TICK_PLACEMENT[granularity].datefield;\n  var step = TICK_PLACEMENT[granularity].step;\n  var spacing = TICK_PLACEMENT[granularity].spacing;\n\n  // Choose a nice tick position before the initial instant.\n  // Currently, this code deals properly with the existent daily granularities:\n  // DAILY (with step of 1) and WEEKLY (with step of 7 but specially handled).\n  // Other daily granularities (say TWO_DAILY) should also be handled specially\n  // by setting the start_date_offset to 0.\n  var start_date = new Date(start_time);\n  var date_array = [];\n  date_array[DateField.DATEFIELD_Y]  = accessors.getFullYear(start_date);\n  date_array[DateField.DATEFIELD_M]  = accessors.getMonth(start_date);\n  date_array[DateField.DATEFIELD_D]  = accessors.getDate(start_date);\n  date_array[DateField.DATEFIELD_HH] = accessors.getHours(start_date);\n  date_array[DateField.DATEFIELD_MM] = accessors.getMinutes(start_date);\n  date_array[DateField.DATEFIELD_SS] = accessors.getSeconds(start_date);\n  date_array[DateField.DATEFIELD_MS] = accessors.getMilliseconds(start_date);\n\n  var start_date_offset = date_array[datefield] % step;\n  if (granularity == Granularity.WEEKLY) {\n    // This will put the ticks on Sundays.\n    start_date_offset = accessors.getDay(start_date);\n  }\n\n  date_array[datefield] -= start_date_offset;\n  for (var df = datefield + 1; df < DateField.NUM_DATEFIELDS; df++) {\n    // The minimum value is 1 for the day of month, and 0 for all other fields.\n    date_array[df] = (df === DateField.DATEFIELD_D) ? 1 : 0;\n  }\n\n  // Generate the ticks.\n  // For granularities not coarser than HOURLY we use the fact that:\n  //   the number of milliseconds between ticks is constant\n  //   and equal to the defined spacing.\n  // Otherwise we rely on the 'roll over' property of the Date functions:\n  //   when some date field is set to a value outside of its logical range,\n  //   the excess 'rolls over' the next (more significant) field.\n  // However, when using local time with DST transitions,\n  // there are dates that do not represent any time value at all\n  // (those in the hour skipped at the 'spring forward'),\n  // and the JavaScript engines usually return an equivalent value.\n  // Hence we have to check that the date is properly increased at each step,\n  // returning a date at a nice tick position.\n  var ticks = [];\n  var tick_date = accessors.makeDate.apply(null, date_array);\n  var tick_time = tick_date.getTime();\n  if (granularity <= Granularity.HOURLY) {\n    if (tick_time < start_time) {\n      tick_time += spacing;\n      tick_date = new Date(tick_time);\n    }\n    while (tick_time <= end_time) {\n      ticks.push({ v: tick_time,\n                   label: formatter.call(dg, tick_date, granularity, opts, dg)\n                 });\n      tick_time += spacing;\n      tick_date = new Date(tick_time);\n    }\n  } else {\n    if (tick_time < start_time) {\n      date_array[datefield] += step;\n      tick_date = accessors.makeDate.apply(null, date_array);\n      tick_time = tick_date.getTime();\n    }\n    while (tick_time <= end_time) {\n      if (granularity >= Granularity.DAILY ||\n          accessors.getHours(tick_date) % step === 0) {\n        ticks.push({ v: tick_time,\n                     label: formatter.call(dg, tick_date, granularity, opts, dg)\n                   });\n      }\n      date_array[datefield] += step;\n      tick_date = accessors.makeDate.apply(null, date_array);\n      tick_time = tick_date.getTime();\n    }\n  }\n  return ticks;\n};\n","/**\n * @license\n * Copyright 2011 Dan Vanderkam (danvdk@gmail.com)\n * MIT-licenced: https://opensource.org/licenses/MIT\n */\n\n/**\n * @fileoverview This file contains utility functions used by dygraphs. These\n * are typically static (i.e. not related to any particular dygraph). Examples\n * include date/time formatting functions, basic algorithms (e.g. binary\n * search) and generic DOM-manipulation functions.\n */\n\n/*global Dygraph:false, Node:false */\n\"use strict\";\n\nimport * as DygraphTickers from './dygraph-tickers';\n\n/**\n * @param {*} o\n * @return {string}\n * @private\n */\nexport function type(o) {\n  return (o === null ? 'null' : typeof(o));\n}\n\nexport var LOG_SCALE = 10;\nexport var LN_TEN = Math.log(LOG_SCALE);\n\n/**\n * @private\n * @param {number} x\n * @return {number}\n */\nexport var log10 = function(x) {\n  return Math.log(x) / LN_TEN;\n};\n\n/**\n * @private\n * @param {number} r0\n * @param {number} r1\n * @param {number} pct\n * @return {number}\n */\nexport var logRangeFraction = function(r0, r1, pct) {\n  // Computing the inverse of toPercentXCoord. The function was arrived at with\n  // the following steps:\n  //\n  // Original calcuation:\n  // pct = (log(x) - log(xRange[0])) / (log(xRange[1]) - log(xRange[0]));\n  //\n  // Multiply both sides by the right-side denominator.\n  // pct * (log(xRange[1] - log(xRange[0]))) = log(x) - log(xRange[0])\n  //\n  // add log(xRange[0]) to both sides\n  // log(xRange[0]) + (pct * (log(xRange[1]) - log(xRange[0]))) = log(x);\n  //\n  // Swap both sides of the equation,\n  // log(x) = log(xRange[0]) + (pct * (log(xRange[1]) - log(xRange[0])))\n  //\n  // Use both sides as the exponent in 10^exp and we're done.\n  // x = 10 ^ (log(xRange[0]) + (pct * (log(xRange[1]) - log(xRange[0]))))\n\n  var logr0 = log10(r0);\n  var logr1 = log10(r1);\n  var exponent = logr0 + (pct * (logr1 - logr0));\n  var value = Math.pow(LOG_SCALE, exponent);\n  return value;\n};\n\n/** A dotted line stroke pattern. */\nexport var DOTTED_LINE = [2, 2];\n/** A dashed line stroke pattern. */\nexport var DASHED_LINE = [7, 3];\n/** A dot dash stroke pattern. */\nexport var DOT_DASH_LINE = [7, 2, 2, 2];\n\n// Directions for panning and zooming. Use bit operations when combined\n// values are possible.\nexport var HORIZONTAL = 1;\nexport var VERTICAL = 2;\n\n/**\n * Return the 2d context for a dygraph canvas.\n *\n * This method is only exposed for the sake of replacing the function in\n * automated tests.\n *\n * @param {!HTMLCanvasElement} canvas\n * @return {!CanvasRenderingContext2D}\n * @private\n */\nexport var getContext = function(canvas) {\n  return /** @type{!CanvasRenderingContext2D}*/(canvas.getContext(\"2d\"));\n};\n\n/**\n * Add an event handler.\n * @param {!Node} elem The element to add the event to.\n * @param {string} type The type of the event, e.g. 'click' or 'mousemove'.\n * @param {function(Event):(boolean|undefined)} fn The function to call\n *     on the event. The function takes one parameter: the event object.\n * @private\n */\nexport var addEvent = function addEvent(elem, type, fn) {\n  elem.addEventListener(type, fn, false);\n};\n\n/**\n * Remove an event handler.\n * @param {!Node} elem The element to remove the event from.\n * @param {string} type The type of the event, e.g. 'click' or 'mousemove'.\n * @param {function(Event):(boolean|undefined)} fn The function to call\n *     on the event. The function takes one parameter: the event object.\n */\nexport function removeEvent(elem, type, fn) {\n  elem.removeEventListener(type, fn, false);\n}\n\n/**\n * Cancels further processing of an event. This is useful to prevent default\n * browser actions, e.g. highlighting text on a double-click.\n * Based on the article at\n * http://www.switchonthecode.com/tutorials/javascript-tutorial-the-scroll-wheel\n * @param {!Event} e The event whose normal behavior should be canceled.\n * @private\n */\nexport function cancelEvent(e) {\n  e = e ? e : window.event;\n  if (e.stopPropagation) {\n    e.stopPropagation();\n  }\n  if (e.preventDefault) {\n    e.preventDefault();\n  }\n  e.cancelBubble = true;\n  e.cancel = true;\n  e.returnValue = false;\n  return false;\n}\n\n/**\n * Convert hsv values to an rgb(r,g,b) string. Taken from MochiKit.Color. This\n * is used to generate default series colors which are evenly spaced on the\n * color wheel.\n * @param {number} hue Range is 0.0-1.0.\n * @param {number} saturation Range is 0.0-1.0.\n * @param {number} value Range is 0.0-1.0.\n * @return {string} \"rgb(r,g,b)\" where r, g and b range from 0-255.\n * @private\n */\nexport function hsvToRGB(hue, saturation, value) {\n  var red;\n  var green;\n  var blue;\n  if (saturation === 0) {\n    red = value;\n    green = value;\n    blue = value;\n  } else {\n    var i = Math.floor(hue * 6);\n    var f = (hue * 6) - i;\n    var p = value * (1 - saturation);\n    var q = value * (1 - (saturation * f));\n    var t = value * (1 - (saturation * (1 - f)));\n    switch (i) {\n      case 1: red = q; green = value; blue = p; break;\n      case 2: red = p; green = value; blue = t; break;\n      case 3: red = p; green = q; blue = value; break;\n      case 4: red = t; green = p; blue = value; break;\n      case 5: red = value; green = p; blue = q; break;\n      case 6: // fall through\n      case 0: red = value; green = t; blue = p; break;\n    }\n  }\n  red = Math.floor(255 * red + 0.5);\n  green = Math.floor(255 * green + 0.5);\n  blue = Math.floor(255 * blue + 0.5);\n  return 'rgb(' + red + ',' + green + ',' + blue + ')';\n}\n\n/**\n * Find the coordinates of an object relative to the top left of the page.\n *\n * @param {Node} obj\n * @return {{x:number,y:number}}\n * @private\n */\nexport function findPos(obj) {\n  var p = obj.getBoundingClientRect(),\n      w = window,\n      d = document.documentElement;\n\n  return {\n    x: p.left + (w.pageXOffset || d.scrollLeft),\n    y: p.top  + (w.pageYOffset || d.scrollTop)\n  }\n}\n\n/**\n * Returns the x-coordinate of the event in a coordinate system where the\n * top-left corner of the page (not the window) is (0,0).\n * Taken from MochiKit.Signal\n * @param {!Event} e\n * @return {number}\n * @private\n */\nexport function pageX(e) {\n  return (!e.pageX || e.pageX < 0) ? 0 : e.pageX;\n}\n\n/**\n * Returns the y-coordinate of the event in a coordinate system where the\n * top-left corner of the page (not the window) is (0,0).\n * Taken from MochiKit.Signal\n * @param {!Event} e\n * @return {number}\n * @private\n */\nexport function pageY(e) {\n  return (!e.pageY || e.pageY < 0) ? 0 : e.pageY;\n}\n\n/**\n * Converts page the x-coordinate of the event to pixel x-coordinates on the\n * canvas (i.e. DOM Coords).\n * @param {!Event} e Drag event.\n * @param {!DygraphInteractionContext} context Interaction context object.\n * @return {number} The amount by which the drag has moved to the right.\n */\nexport function dragGetX_(e, context) {\n  return pageX(e) - context.px;\n}\n\n/**\n * Converts page the y-coordinate of the event to pixel y-coordinates on the\n * canvas (i.e. DOM Coords).\n * @param {!Event} e Drag event.\n * @param {!DygraphInteractionContext} context Interaction context object.\n * @return {number} The amount by which the drag has moved down.\n */\nexport function dragGetY_(e, context) {\n  return pageY(e) - context.py;\n}\n\n/**\n * This returns true unless the parameter is 0, null, undefined or NaN.\n * TODO(danvk): rename this function to something like 'isNonZeroNan'.\n *\n * @param {number} x The number to consider.\n * @return {boolean} Whether the number is zero or NaN.\n * @private\n */\nexport function isOK(x) {\n  return !!x && !isNaN(x);\n}\n\n/**\n * @param {{x:?number,y:?number,yval:?number}} p The point to consider, valid\n *     points are {x, y} objects\n * @param {boolean=} opt_allowNaNY Treat point with y=NaN as valid\n * @return {boolean} Whether the point has numeric x and y.\n * @private\n */\nexport function isValidPoint(p, opt_allowNaNY) {\n  if (!p) return false;  // null or undefined object\n  if (p.yval === null) return false;  // missing point\n  if (p.x === null || p.x === undefined) return false;\n  if (p.y === null || p.y === undefined) return false;\n  if (isNaN(p.x) || (!opt_allowNaNY && isNaN(p.y))) return false;\n  return true;\n}\n\n/**\n * Number formatting function which mimics the behavior of %g in printf, i.e.\n * either exponential or fixed format (without trailing 0s) is used depending on\n * the length of the generated string.  The advantage of this format is that\n * there is a predictable upper bound on the resulting string length,\n * significant figures are not dropped, and normal numbers are not displayed in\n * exponential notation.\n *\n * NOTE: JavaScript's native toPrecision() is NOT a drop-in replacement for %g.\n * It creates strings which are too long for absolute values between 10^-4 and\n * 10^-6, e.g. '0.00001' instead of '1e-5'. See tests/number-format.html for\n * output examples.\n *\n * @param {number} x The number to format\n * @param {number=} opt_precision The precision to use, default 2.\n * @return {string} A string formatted like %g in printf.  The max generated\n *                  string length should be precision + 6 (e.g 1.123e+300).\n */\nexport function floatFormat(x, opt_precision) {\n  // Avoid invalid precision values; [1, 21] is the valid range.\n  var p = Math.min(Math.max(1, opt_precision || 2), 21);\n\n  // This is deceptively simple.  The actual algorithm comes from:\n  //\n  // Max allowed length = p + 4\n  // where 4 comes from 'e+n' and '.'.\n  //\n  // Length of fixed format = 2 + y + p\n  // where 2 comes from '0.' and y = # of leading zeroes.\n  //\n  // Equating the two and solving for y yields y = 2, or 0.00xxxx which is\n  // 1.0e-3.\n  //\n  // Since the behavior of toPrecision() is identical for larger numbers, we\n  // don't have to worry about the other bound.\n  //\n  // Finally, the argument for toExponential() is the number of trailing digits,\n  // so we take off 1 for the value before the '.'.\n  return (Math.abs(x) < 1.0e-3 && x !== 0.0) ?\n      x.toExponential(p - 1) : x.toPrecision(p);\n}\n\n/**\n * Converts '9' to '09' (useful for dates)\n * @param {number} x\n * @return {string}\n * @private\n */\nexport function zeropad(x) {\n  if (x < 10) return \"0\" + x; else return \"\" + x;\n}\n\n/**\n * Date accessors to get the parts of a calendar date (year, month,\n * day, hour, minute, second and millisecond) according to local time,\n * and factory method to call the Date constructor with an array of arguments.\n */\nexport var DateAccessorsLocal = {\n  getFullYear:     d => d.getFullYear(),\n  getMonth:        d => d.getMonth(),\n  getDate:         d => d.getDate(),\n  getHours:        d => d.getHours(),\n  getMinutes:      d => d.getMinutes(),\n  getSeconds:      d => d.getSeconds(),\n  getMilliseconds: d => d.getMilliseconds(),\n  getDay:          d => d.getDay(),\n  makeDate:        function(y, m, d, hh, mm, ss, ms) {\n    return new Date(y, m, d, hh, mm, ss, ms);\n  }\n};\n\n/**\n * Date accessors to get the parts of a calendar date (year, month,\n * day of month, hour, minute, second and millisecond) according to UTC time,\n * and factory method to call the Date constructor with an array of arguments.\n */\nexport var DateAccessorsUTC = {\n  getFullYear:     d => d.getUTCFullYear(),\n  getMonth:        d => d.getUTCMonth(),\n  getDate:         d => d.getUTCDate(),\n  getHours:        d => d.getUTCHours(),\n  getMinutes:      d => d.getUTCMinutes(),\n  getSeconds:      d => d.getUTCSeconds(),\n  getMilliseconds: d => d.getUTCMilliseconds(),\n  getDay:          d => d.getUTCDay(),\n  makeDate:        function(y, m, d, hh, mm, ss, ms) {\n    return new Date(Date.UTC(y, m, d, hh, mm, ss, ms));\n  }\n};\n\n/**\n * Return a string version of the hours, minutes and seconds portion of a date.\n * @param {number} hh The hours (from 0-23)\n * @param {number} mm The minutes (from 0-59)\n * @param {number} ss The seconds (from 0-59)\n * @return {string} A time of the form \"HH:MM\" or \"HH:MM:SS\"\n * @private\n */\nexport function hmsString_(hh, mm, ss, ms) {\n  var ret = zeropad(hh) + \":\" + zeropad(mm);\n  if (ss) {\n    ret += \":\" + zeropad(ss);\n    if (ms) {\n      var str = \"\" + ms;\n      ret += \".\" + ('000'+str).substring(str.length);\n    }\n  }\n  return ret;\n}\n\n/**\n * Convert a JS date (millis since epoch) to a formatted string.\n * @param {number} time The JavaScript time value (ms since epoch)\n * @param {boolean} utc Whether output UTC or local time\n * @return {string} A date of one of these forms:\n *     \"YYYY/MM/DD\", \"YYYY/MM/DD HH:MM\" or \"YYYY/MM/DD HH:MM:SS\"\n * @private\n */\nexport function dateString_(time, utc) {\n  var accessors = utc ? DateAccessorsUTC : DateAccessorsLocal;\n  var date = new Date(time);\n  var y = accessors.getFullYear(date);\n  var m = accessors.getMonth(date);\n  var d = accessors.getDate(date);\n  var hh = accessors.getHours(date);\n  var mm = accessors.getMinutes(date);\n  var ss = accessors.getSeconds(date);\n  var ms = accessors.getMilliseconds(date);\n  // Get a year string:\n  var year = \"\" + y;\n  // Get a 0 padded month string\n  var month = zeropad(m + 1);  //months are 0-offset, sigh\n  // Get a 0 padded day string\n  var day = zeropad(d);\n  var frac = hh * 3600 + mm * 60 + ss + 1e-3 * ms;\n  var ret = year + \"/\" + month + \"/\" + day;\n  if (frac) {\n    ret += \" \" + hmsString_(hh, mm, ss, ms);\n  }\n  return ret;\n}\n\n/**\n * Round a number to the specified number of digits past the decimal point.\n * @param {number} num The number to round\n * @param {number} places The number of decimals to which to round\n * @return {number} The rounded number\n * @private\n */\nexport function round_(num, places) {\n  var shift = Math.pow(10, places);\n  return Math.round(num * shift)/shift;\n}\n\n/**\n * Implementation of binary search over an array.\n * Currently does not work when val is outside the range of arry's values.\n * @param {number} val the value to search for\n * @param {Array.<number>} arry is the value over which to search\n * @param {number} abs If abs > 0, find the lowest entry greater than val\n *     If abs < 0, find the highest entry less than val.\n *     If abs == 0, find the entry that equals val.\n * @param {number=} low The first index in arry to consider (optional)\n * @param {number=} high The last index in arry to consider (optional)\n * @return {number} Index of the element, or -1 if it isn't found.\n * @private\n */\nexport function binarySearch(val, arry, abs, low, high) {\n  if (low === null || low === undefined ||\n      high === null || high === undefined) {\n    low = 0;\n    high = arry.length - 1;\n  }\n  if (low > high) {\n    return -1;\n  }\n  if (abs === null || abs === undefined) {\n    abs = 0;\n  }\n  var validIndex = function(idx) {\n    return idx >= 0 && idx < arry.length;\n  };\n  var mid = parseInt((low + high) / 2, 10);\n  var element = arry[mid];\n  var idx;\n  if (element == val) {\n    return mid;\n  } else if (element > val) {\n    if (abs > 0) {\n      // Accept if element > val, but also if prior element < val.\n      idx = mid - 1;\n      if (validIndex(idx) && arry[idx] < val) {\n        return mid;\n      }\n    }\n    return binarySearch(val, arry, abs, low, mid - 1);\n  } else if (element < val) {\n    if (abs < 0) {\n      // Accept if element < val, but also if prior element > val.\n      idx = mid + 1;\n      if (validIndex(idx) && arry[idx] > val) {\n        return mid;\n      }\n    }\n    return binarySearch(val, arry, abs, mid + 1, high);\n  }\n  return -1;  // can't actually happen, but makes closure compiler happy\n}\n\n/**\n * Parses a date, returning the number of milliseconds since epoch. This can be\n * passed in as an xValueParser in the Dygraph constructor.\n * TODO(danvk): enumerate formats that this understands.\n *\n * @param {string} dateStr A date in a variety of possible string formats.\n * @return {number} Milliseconds since epoch.\n * @private\n */\nexport function dateParser(dateStr) {\n  var dateStrSlashed;\n  var d;\n\n  // Let the system try the format first, with one caveat:\n  // YYYY-MM-DD[ HH:MM:SS] is interpreted as UTC by a variety of browsers.\n  // dygraphs displays dates in local time, so this will result in surprising\n  // inconsistencies. But if you specify \"T\" or \"Z\" (i.e. YYYY-MM-DDTHH:MM:SS),\n  // then you probably know what you're doing, so we'll let you go ahead.\n  // Issue: http://code.google.com/p/dygraphs/issues/detail?id=255\n  if (dateStr.search(\"-\") == -1 ||\n      dateStr.search(\"T\") != -1 || dateStr.search(\"Z\") != -1) {\n    d = dateStrToMillis(dateStr);\n    if (d && !isNaN(d)) return d;\n  }\n\n  if (dateStr.search(\"-\") != -1) {  // e.g. '2009-7-12' or '2009-07-12'\n    dateStrSlashed = dateStr.replace(\"-\", \"/\", \"g\");\n    while (dateStrSlashed.search(\"-\") != -1) {\n      dateStrSlashed = dateStrSlashed.replace(\"-\", \"/\");\n    }\n    d = dateStrToMillis(dateStrSlashed);\n  } else {\n    // Any format that Date.parse will accept, e.g. \"2009/07/12\" or\n    // \"2009/07/12 12:34:56\"\n    d = dateStrToMillis(dateStr);\n  }\n\n  if (!d || isNaN(d)) {\n    console.error(\"Couldn't parse \" + dateStr + \" as a date\");\n  }\n  return d;\n}\n\n/**\n * This is identical to JavaScript's built-in Date.parse() method, except that\n * it doesn't get replaced with an incompatible method by aggressive JS\n * libraries like MooTools or Joomla.\n * @param {string} str The date string, e.g. \"2011/05/06\"\n * @return {number} millis since epoch\n * @private\n */\nexport function dateStrToMillis(str) {\n  return new Date(str).getTime();\n}\n\n// These functions are all based on MochiKit.\n/**\n * Copies all the properties from o to self.\n *\n * @param {!Object} self\n * @param {!Object} o\n * @return {!Object}\n */\nexport function update(self, o) {\n  if (typeof(o) != 'undefined' && o !== null) {\n    for (var k in o) {\n      if (o.hasOwnProperty(k)) {\n        self[k] = o[k];\n      }\n    }\n  }\n  return self;\n}\n\n// internal: check if o is a DOM node, and we know it’s not null\nvar _isNode = (typeof(Node) !== 'undefined' &&\n               Node !== null && typeof(Node) === 'object') ?\n  function _isNode(o) {\n    return (o instanceof Node);\n  } : function _isNode(o) {\n    return (typeof(o) === 'object' &&\n            typeof(o.nodeType) === 'number' &&\n            typeof(o.nodeName) === 'string');\n};\n\n/**\n * Copies all the properties from o to self.\n *\n * @param {!Object} self\n * @param {!Object} o\n * @return {!Object}\n * @private\n */\nexport function updateDeep(self, o) {\n  if (typeof(o) != 'undefined' && o !== null) {\n    for (var k in o) {\n      if (o.hasOwnProperty(k)) {\n        const v = o[k];\n        if (v === null) {\n          self[k] = null;\n        } else if (isArrayLike(v)) {\n          self[k] = v.slice();\n        } else if (_isNode(v)) {\n          // DOM objects are shallowly-copied.\n          self[k] = v;\n        } else if (typeof(v) == 'object') {\n          if (typeof(self[k]) != 'object' || self[k] === null) {\n            self[k] = {};\n          }\n          updateDeep(self[k], v);\n        } else {\n          self[k] = v;\n        }\n      }\n    }\n  }\n  return self;\n}\n\n/**\n * @param {*} o\n * @return {string}\n * @private\n */\nexport function typeArrayLike(o) {\n  if (o === null)\n    return 'null';\n  const t = typeof(o);\n  if ((t === 'object' ||\n       (t === 'function' && typeof(o.item) === 'function')) &&\n      typeof(o.length) === 'number' &&\n      o.nodeType !== 3 && o.nodeType !== 4)\n    return 'array';\n  return t;\n}\n\n/**\n * @param {*} o\n * @return {boolean}\n * @private\n */\nexport function isArrayLike(o) {\n  const t = typeof(o);\n  return (o !== null &&\n          (t === 'object' ||\n           (t === 'function' && typeof(o.item) === 'function')) &&\n          typeof(o.length) === 'number' &&\n          o.nodeType !== 3 && o.nodeType !== 4);\n}\n\n/**\n * @param {Object} o\n * @return {boolean}\n * @private\n */\nexport function isDateLike(o) {\n  return (o !== null && typeof(o) === 'object' &&\n          typeof(o.getTime) === 'function');\n}\n\n/**\n * Note: this only seems to work for arrays.\n * @param {!Array} o\n * @return {!Array}\n * @private\n */\nexport function clone(o) {\n  // TODO(danvk): figure out how MochiKit's version works\n  var r = [];\n  for (var i = 0; i < o.length; i++) {\n    if (isArrayLike(o[i])) {\n      r.push(clone(o[i]));\n    } else {\n      r.push(o[i]);\n    }\n  }\n  return r;\n}\n\n/**\n * Create a new canvas element.\n *\n * @return {!HTMLCanvasElement}\n * @private\n */\nexport function createCanvas() {\n  return document.createElement('canvas');\n}\n\n/**\n * Returns the context's pixel ratio, which is the ratio between the device\n * pixel ratio and the backing store ratio. Typically this is 1 for conventional\n * displays, and > 1 for HiDPI displays (such as the Retina MBP).\n * See http://www.html5rocks.com/en/tutorials/canvas/hidpi/ for more details.\n *\n * @param {!CanvasRenderingContext2D} context The canvas's 2d context.\n * @return {number} The ratio of the device pixel ratio and the backing store\n * ratio for the specified context.\n */\nexport function getContextPixelRatio(context) {\n  try {\n    var devicePixelRatio = window.devicePixelRatio;\n    var backingStoreRatio = context.webkitBackingStorePixelRatio ||\n                            context.mozBackingStorePixelRatio ||\n                            context.msBackingStorePixelRatio ||\n                            context.oBackingStorePixelRatio ||\n                            context.backingStorePixelRatio || 1;\n    if (devicePixelRatio !== undefined) {\n      return devicePixelRatio / backingStoreRatio;\n    } else {\n      // At least devicePixelRatio must be defined for this ratio to make sense.\n      // We default backingStoreRatio to 1: this does not exist on some browsers\n      // (i.e. desktop Chrome).\n      return 1;\n    }\n  } catch (e) {\n    return 1;\n  }\n}\n\n/**\n * TODO(danvk): use @template here when it's better supported for classes.\n * @param {!Array} array\n * @param {number} start\n * @param {number} length\n * @param {function(!Array,?):boolean=} predicate\n * @constructor\n */\nexport function Iterator(array, start, length, predicate) {\n  start = start || 0;\n  length = length || array.length;\n  this.hasNext = true; // Use to identify if there's another element.\n  this.peek = null; // Use for look-ahead\n  this.start_ = start;\n  this.array_ = array;\n  this.predicate_ = predicate;\n  this.end_ = Math.min(array.length, start + length);\n  this.nextIdx_ = start - 1; // use -1 so initial advance works.\n  this.next(); // ignoring result.\n}\n\n/**\n * @return {Object}\n */\nIterator.prototype.next = function() {\n  if (!this.hasNext) {\n    return null;\n  }\n  var obj = this.peek;\n\n  var nextIdx = this.nextIdx_ + 1;\n  var found = false;\n  while (nextIdx < this.end_) {\n    if (!this.predicate_ || this.predicate_(this.array_, nextIdx)) {\n      this.peek = this.array_[nextIdx];\n      found = true;\n      break;\n    }\n    nextIdx++;\n  }\n  this.nextIdx_ = nextIdx;\n  if (!found) {\n    this.hasNext = false;\n    this.peek = null;\n  }\n  return obj;\n};\n\n/**\n * Returns a new iterator over array, between indexes start and\n * start + length, and only returns entries that pass the accept function\n *\n * @param {!Array} array the array to iterate over.\n * @param {number} start the first index to iterate over, 0 if absent.\n * @param {number} length the number of elements in the array to iterate over.\n *     This, along with start, defines a slice of the array, and so length\n *     doesn't imply the number of elements in the iterator when accept doesn't\n *     always accept all values. array.length when absent.\n * @param {function(?):boolean=} opt_predicate a function that takes\n *     parameters array and idx, which returns true when the element should be\n *     returned.  If omitted, all elements are accepted.\n * @private\n */\nexport function createIterator(array, start, length, opt_predicate) {\n  return new Iterator(array, start, length, opt_predicate);\n}\n\n// Shim layer with setTimeout fallback.\n// From: http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n// Should be called with the window context:\n//   Dygraph.requestAnimFrame.call(window, function() {})\nexport var requestAnimFrame = (function() {\n  return window.requestAnimationFrame       ||\n          window.webkitRequestAnimationFrame ||\n          window.mozRequestAnimationFrame    ||\n          window.oRequestAnimationFrame      ||\n          window.msRequestAnimationFrame     ||\n          function (callback) {\n            window.setTimeout(callback, 1000 / 60);\n          };\n})();\n\n/**\n * Call a function at most maxFrames times at an attempted interval of\n * framePeriodInMillis, then call a cleanup function once. repeatFn is called\n * once immediately, then at most (maxFrames - 1) times asynchronously. If\n * maxFrames==1, then cleanup_fn() is also called synchronously.  This function\n * is used to sequence animation.\n * @param {function(number)} repeatFn Called repeatedly -- takes the frame\n *     number (from 0 to maxFrames-1) as an argument.\n * @param {number} maxFrames The max number of times to call repeatFn\n * @param {number} framePeriodInMillis Max requested time between frames.\n * @param {function()} cleanupFn A function to call after all repeatFn calls.\n * @private\n */\nexport function repeatAndCleanup(repeatFn, maxFrames, framePeriodInMillis,\n    cleanupFn) {\n  var frameNumber = 0;\n  var previousFrameNumber;\n  var startTime = new Date().getTime();\n  repeatFn(frameNumber);\n  if (maxFrames == 1) {\n    cleanupFn();\n    return;\n  }\n  var maxFrameArg = maxFrames - 1;\n\n  (function loop() {\n    if (frameNumber >= maxFrames) return;\n    requestAnimFrame.call(window, function() {\n      // Determine which frame to draw based on the delay so far.  Will skip\n      // frames if necessary.\n      var currentTime = new Date().getTime();\n      var delayInMillis = currentTime - startTime;\n      previousFrameNumber = frameNumber;\n      frameNumber = Math.floor(delayInMillis / framePeriodInMillis);\n      var frameDelta = frameNumber - previousFrameNumber;\n      // If we predict that the subsequent repeatFn call will overshoot our\n      // total frame target, so our last call will cause a stutter, then jump to\n      // the last call immediately.  If we're going to cause a stutter, better\n      // to do it faster than slower.\n      var predictOvershootStutter = (frameNumber + frameDelta) > maxFrameArg;\n      if (predictOvershootStutter || (frameNumber >= maxFrameArg)) {\n        repeatFn(maxFrameArg);  // Ensure final call with maxFrameArg.\n        cleanupFn();\n      } else {\n        if (frameDelta !== 0) {  // Don't call repeatFn with duplicate frames.\n          repeatFn(frameNumber);\n        }\n        loop();\n      }\n    });\n  })();\n}\n\n// A whitelist of options that do not change pixel positions.\nvar pixelSafeOptions = {\n  'annotationClickHandler': true,\n  'annotationDblClickHandler': true,\n  'annotationMouseOutHandler': true,\n  'annotationMouseOverHandler': true,\n  'axisLineColor': true,\n  'axisLineWidth': true,\n  'clickCallback': true,\n  'drawCallback': true,\n  'drawHighlightPointCallback': true,\n  'drawPoints': true,\n  'drawPointCallback': true,\n  'drawGrid': true,\n  'fillAlpha': true,\n  'gridLineColor': true,\n  'gridLineWidth': true,\n  'hideOverlayOnMouseOut': true,\n  'highlightCallback': true,\n  'highlightCircleSize': true,\n  'interactionModel': true,\n  'labelsDiv': true,\n  'labelsKMB': true,\n  'labelsKMG2': true,\n  'labelsSeparateLines': true,\n  'labelsShowZeroValues': true,\n  'legend': true,\n  'panEdgeFraction': true,\n  'pixelsPerYLabel': true,\n  'pointClickCallback': true,\n  'pointSize': true,\n  'rangeSelectorPlotFillColor': true,\n  'rangeSelectorPlotFillGradientColor': true,\n  'rangeSelectorPlotStrokeColor': true,\n  'rangeSelectorBackgroundStrokeColor': true,\n  'rangeSelectorBackgroundLineWidth': true,\n  'rangeSelectorPlotLineWidth': true,\n  'rangeSelectorForegroundStrokeColor': true,\n  'rangeSelectorForegroundLineWidth': true,\n  'rangeSelectorAlpha': true,\n  'showLabelsOnHighlight': true,\n  'showRoller': true,\n  'strokeWidth': true,\n  'underlayCallback': true,\n  'unhighlightCallback': true,\n  'zoomCallback': true\n};\n\n/**\n * This function will scan the option list and determine if they\n * require us to recalculate the pixel positions of each point.\n * TODO: move this into dygraph-options.js\n * @param {!Array.<string>} labels a list of options to check.\n * @param {!Object} attrs\n * @return {boolean} true if the graph needs new points else false.\n * @private\n */\nexport function isPixelChangingOptionList(labels, attrs) {\n  // Assume that we do not require new points.\n  // This will change to true if we actually do need new points.\n\n  // Create a dictionary of series names for faster lookup.\n  // If there are no labels, then the dictionary stays empty.\n  var seriesNamesDictionary = { };\n  if (labels) {\n    for (var i = 1; i < labels.length; i++) {\n      seriesNamesDictionary[labels[i]] = true;\n    }\n  }\n\n  // Scan through a flat (i.e. non-nested) object of options.\n  // Returns true/false depending on whether new points are needed.\n  var scanFlatOptions = function(options) {\n    for (var property in options) {\n      if (options.hasOwnProperty(property) &&\n          !pixelSafeOptions[property]) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  // Iterate through the list of updated options.\n  for (var property in attrs) {\n    if (!attrs.hasOwnProperty(property)) continue;\n\n    // Find out of this field is actually a series specific options list.\n    if (property == 'highlightSeriesOpts' ||\n        (seriesNamesDictionary[property] && !attrs.series)) {\n      // This property value is a list of options for this series.\n      if (scanFlatOptions(attrs[property])) return true;\n    } else if (property == 'series' || property == 'axes') {\n      // This is twice-nested options list.\n      var perSeries = attrs[property];\n      for (var series in perSeries) {\n        if (perSeries.hasOwnProperty(series) &&\n            scanFlatOptions(perSeries[series])) {\n          return true;\n        }\n      }\n    } else {\n      // If this was not a series specific option list,\n      // check if it's a pixel-changing property.\n      if (!pixelSafeOptions[property]) return true;\n    }\n  }\n\n  return false;\n}\n\nexport var Circles = {\n  DEFAULT : function(g, name, ctx, canvasx, canvasy, color, radius) {\n    ctx.beginPath();\n    ctx.fillStyle = color;\n    ctx.arc(canvasx, canvasy, radius, 0, 2 * Math.PI, false);\n    ctx.fill();\n  }\n  // For more shapes, include extras/shapes.js\n};\n\n/**\n * Determine whether |data| is delimited by CR, CRLF, LF, LFCR.\n * @param {string} data\n * @return {?string} the delimiter that was detected (or null on failure).\n */\nexport function detectLineDelimiter(data) {\n  for (var i = 0; i < data.length; i++) {\n    var code = data.charAt(i);\n    if (code === '\\r') {\n      // Might actually be \"\\r\\n\".\n      if (((i + 1) < data.length) && (data.charAt(i + 1) === '\\n')) {\n        return '\\r\\n';\n      }\n      return code;\n    }\n    if (code === '\\n') {\n      // Might actually be \"\\n\\r\".\n      if (((i + 1) < data.length) && (data.charAt(i + 1) === '\\r')) {\n        return '\\n\\r';\n      }\n      return code;\n    }\n  }\n\n  return null;\n}\n\n/**\n * Is one node contained by another?\n * @param {Node} containee The contained node.\n * @param {Node} container The container node.\n * @return {boolean} Whether containee is inside (or equal to) container.\n * @private\n */\nexport function isNodeContainedBy(containee, container) {\n  if (container === null || containee === null) {\n    return false;\n  }\n  var containeeNode = /** @type {Node} */ (containee);\n  while (containeeNode && containeeNode !== container) {\n    containeeNode = containeeNode.parentNode;\n  }\n  return (containeeNode === container);\n}\n\n// This masks some numeric issues in older versions of Firefox,\n// where 1.0/Math.pow(10,2) != Math.pow(10,-2).\n/** @type {function(number,number):number} */\nexport function pow(base, exp) {\n  if (exp < 0) {\n    return 1.0 / Math.pow(base, -exp);\n  }\n  return Math.pow(base, exp);\n}\n\nvar RGBAxRE = /^#([0-9A-Fa-f]{2})([0-9A-Fa-f]{2})([0-9A-Fa-f]{2})([0-9A-Fa-f]{2})?$/;\nvar RGBA_RE = /^rgba?\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})(?:,\\s*([01](?:\\.\\d+)?))?\\)$/;\n\n/**\n * Helper for toRGB_ which parses strings of the form:\n * #RRGGBB (hex)\n * #RRGGBBAA (hex)\n * rgb(123, 45, 67)\n * rgba(123, 45, 67, 0.5)\n * @return parsed {r,g,b,a?} tuple or null.\n */\nfunction parseRGBA(rgbStr) {\n  var bits, r, g, b, a = null;\n  if ((bits = RGBAxRE.exec(rgbStr))) {\n    r = parseInt(bits[1], 16);\n    g = parseInt(bits[2], 16);\n    b = parseInt(bits[3], 16);\n    if (bits[4])\n      a = parseInt(bits[4], 16);\n  } else if ((bits = RGBA_RE.exec(rgbStr))) {\n    r = parseInt(bits[1], 10);\n    g = parseInt(bits[2], 10);\n    b = parseInt(bits[3], 10);\n    if (bits[4])\n      a = parseFloat(bits[4]);\n  } else\n    return null;\n  if (a !== null)\n    return { \"r\": r, \"g\": g, \"b\": b, \"a\": a };\n  return { \"r\": r, \"g\": g, \"b\": b };\n}\n\n/**\n * Converts any valid CSS color (hex, rgb(), named color) to an RGB tuple.\n *\n * @param {!string} colorStr Any valid CSS color string.\n * @return {{r:number,g:number,b:number,a:number?}} Parsed RGB tuple.\n * @private\n */\nexport function toRGB_(colorStr) {\n  // Strategy: First try to parse colorStr directly. This is fast & avoids DOM\n  // manipulation.  If that fails (e.g. for named colors like 'red'), then\n  // create a hidden DOM element and parse its computed color.\n  var rgb = parseRGBA(colorStr);\n  if (rgb) return rgb;\n\n  var div = document.createElement('div');\n  div.style.backgroundColor = colorStr;\n  div.style.visibility = 'hidden';\n  document.body.appendChild(div);\n  var rgbStr = window.getComputedStyle(div, null).backgroundColor;\n  document.body.removeChild(div);\n  return parseRGBA(rgbStr);\n}\n\n/**\n * Checks whether the browser supports the &lt;canvas&gt; tag.\n * @param {HTMLCanvasElement=} opt_canvasElement Pass a canvas element as an\n *     optimization if you have one.\n * @return {boolean} Whether the browser supports canvas.\n */\nexport function isCanvasSupported(opt_canvasElement) {\n  try {\n    var canvas = opt_canvasElement || document.createElement(\"canvas\");\n    canvas.getContext(\"2d\");\n  } catch (e) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Parses the value as a floating point number. This is like the parseFloat()\n * built-in, but with a few differences:\n * - the empty string is parsed as null, rather than NaN.\n * - if the string cannot be parsed at all, an error is logged.\n * If the string can't be parsed, this method returns null.\n * @param {string} x The string to be parsed\n * @param {number=} opt_line_no The line number from which the string comes.\n * @param {string=} opt_line The text of the line from which the string comes.\n */\nexport function parseFloat_(x, opt_line_no, opt_line) {\n  var val = parseFloat(x);\n  if (!isNaN(val)) return val;\n\n  // Try to figure out what happeend.\n  // If the value is the empty string, parse it as null.\n  if (/^ *$/.test(x)) return null;\n\n  // If it was actually \"NaN\", return it as NaN.\n  if (/^ *nan *$/i.test(x)) return NaN;\n\n  // Looks like a parsing error.\n  var msg = \"Unable to parse '\" + x + \"' as a number\";\n  if (opt_line !== undefined && opt_line_no !== undefined) {\n    msg += \" on line \" + (1+(opt_line_no||0)) + \" ('\" + opt_line + \"') of CSV.\";\n  }\n  console.error(msg);\n\n  return null;\n}\n\n// Label constants for the labelsKMB and labelsKMG2 options.\n// (i.e. '100000' -> '100k')\nvar KMB_LABELS_LARGE = [ 'k', 'M', 'G', 'T', 'P', 'E', 'Z', 'Y' ];\nvar KMB_LABELS_SMALL = [ 'm', 'µ', 'n', 'p', 'f', 'a', 'z', 'y' ];\nvar KMG2_LABELS_LARGE = [ 'Ki', 'Mi', 'Gi', 'Ti', 'Pi', 'Ei', 'Zi', 'Yi' ];\nvar KMG2_LABELS_SMALL = [ 'p-10', 'p-20', 'p-30', 'p-40', 'p-50', 'p-60', 'p-70', 'p-80' ];\n/* if both are given (legacy/deprecated use only) */\nvar KMB2_LABELS_LARGE = [ 'K', 'M', 'G', 'T', 'P', 'E', 'Z', 'Y' ];\nvar KMB2_LABELS_SMALL = KMB_LABELS_SMALL;\n\n/**\n * @private\n * Return a string version of a number. This respects the digitsAfterDecimal\n * and maxNumberWidth options.\n * @param {number} x The number to be formatted\n * @param {Dygraph} opts An options view\n */\nexport function numberValueFormatter(x, opts) {\n  var sigFigs = opts('sigFigs');\n\n  if (sigFigs !== null) {\n    // User has opted for a fixed number of significant figures.\n    return floatFormat(x, sigFigs);\n  }\n\n  // shortcut 0 so later code does not need to worry about it\n  if (x === 0.0)\n    return '0';\n\n  var digits = opts('digitsAfterDecimal');\n  var maxNumberWidth = opts('maxNumberWidth');\n\n  var kmb = opts('labelsKMB');\n  var kmg2 = opts('labelsKMG2');\n\n  var label;\n  var absx = Math.abs(x);\n\n  if (kmb || kmg2) {\n    var k;\n    var k_labels = [];\n    var m_labels = [];\n    if (kmb) {\n      k = 1000;\n      k_labels = KMB_LABELS_LARGE;\n      m_labels = KMB_LABELS_SMALL;\n    }\n    if (kmg2) {\n      k = 1024;\n      k_labels = KMG2_LABELS_LARGE;\n      m_labels = KMG2_LABELS_SMALL;\n      if (kmb) {\n        k_labels = KMB2_LABELS_LARGE;\n        m_labels = KMB2_LABELS_SMALL;\n      }\n    }\n\n    var n;\n    var j;\n    if (absx >= k) {\n      j = k_labels.length;\n      while (j > 0) {\n        n = pow(k, j);\n        --j;\n        if (absx >= n) {\n          // guaranteed to hit because absx >= k (pow(k, 1))\n          // if immensely large still switch to scientific notation\n          if ((absx / n) >= Math.pow(10, maxNumberWidth))\n            label = x.toExponential(digits);\n          else\n            label = round_(x / n, digits) + k_labels[j];\n          return label;\n        }\n      }\n      // not reached, fall through safely though should it ever be\n    } else if ((absx < 1) /* && (m_labels.length > 0) */) {\n      j = 0;\n      while (j < m_labels.length) {\n        ++j;\n        n = pow(k, j);\n        if ((absx * n) >= 1)\n          break;\n      }\n      // if _still_ too small, switch to scientific notation instead\n      if ((absx * n) < Math.pow(10, -digits))\n        label = x.toExponential(digits);\n      else\n        label = round_(x * n, digits) + m_labels[j - 1];\n      return label;\n    }\n    // else fall through\n  }\n\n  if (absx >= Math.pow(10, maxNumberWidth) ||\n      absx < Math.pow(10, -digits)) {\n    // switch to scientific notation if we underflow or overflow fixed display\n    label = x.toExponential(digits);\n  } else {\n    label = '' + round_(x, digits);\n  }\n\n  return label;\n}\n\n/**\n * variant for use as an axisLabelFormatter.\n * @private\n */\nexport function numberAxisLabelFormatter(x, granularity, opts) {\n  return numberValueFormatter.call(this, x, opts);\n}\n\n/**\n * @type {!Array.<string>}\n * @private\n * @constant\n */\nvar SHORT_MONTH_NAMES_ = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\n/**\n * Convert a JS date to a string appropriate to display on an axis that\n * is displaying values at the stated granularity. This respects the\n * labelsUTC option.\n * @param {Date} date The date to format\n * @param {number} granularity One of the Dygraph granularity constants\n * @param {Dygraph} opts An options view\n * @return {string} The date formatted as local time\n * @private\n */\nexport function dateAxisLabelFormatter(date, granularity, opts) {\n  var utc = opts('labelsUTC');\n  var accessors = utc ? DateAccessorsUTC : DateAccessorsLocal;\n\n  var year = accessors.getFullYear(date),\n      month = accessors.getMonth(date),\n      day = accessors.getDate(date),\n      hours = accessors.getHours(date),\n      mins = accessors.getMinutes(date),\n      secs = accessors.getSeconds(date),\n      millis = accessors.getMilliseconds(date);\n\n  if (granularity >= DygraphTickers.Granularity.DECADAL) {\n    return '' + year;\n  } else if (granularity >= DygraphTickers.Granularity.MONTHLY) {\n    return SHORT_MONTH_NAMES_[month] + '&#160;' + year;\n  } else {\n    var frac = hours * 3600 + mins * 60 + secs + 1e-3 * millis;\n    if (frac === 0 || granularity >= DygraphTickers.Granularity.DAILY) {\n      // e.g. '21 Jan' (%d%b)\n      return zeropad(day) + '&#160;' + SHORT_MONTH_NAMES_[month];\n    } else if (granularity < DygraphTickers.Granularity.SECONDLY) {\n      // e.g. 40.310 (meaning 40 seconds and 310 milliseconds)\n      var str = \"\" + millis;\n      return zeropad(secs) + \".\" + ('000'+str).substring(str.length);\n    } else if (granularity > DygraphTickers.Granularity.MINUTELY) {\n      return hmsString_(hours, mins, secs, 0);\n    } else {\n      return hmsString_(hours, mins, secs, millis);\n    }\n  }\n}\n\n/**\n * Return a string version of a JS date for a value label. This respects the\n * labelsUTC option.\n * @param {Date} date The date to be formatted\n * @param {Dygraph} opts An options view\n * @private\n */\nexport function dateValueFormatter(d, opts) {\n  return dateString_(d, opts('labelsUTC'));\n}\n\n// stuff for simple onDOMready implementation\nvar deferDOM_callbacks = [];\nvar deferDOM_handlerCalled = false;\n\n// onDOMready once DOM is ready\n/**\n * Simple onDOMready implementation\n * @param {function()} cb The callback to run once the DOM is ready.\n * @return {boolean} whether the DOM is currently ready\n */\nfunction deferDOM_ready(cb) {\n  if (typeof(cb) === \"function\")\n    cb();\n  return (true);\n}\n\n/**\n * Setup a simple onDOMready implementation on the given objct.\n * @param {*} self the object to update .onDOMready on\n * @private\n */\nexport function setupDOMready_(self) {\n  // only attach if there’s a DOM\n  if (typeof(document) !== \"undefined\") {\n    // called by browser\n    const handler = function deferDOM_handler() {\n      /* execute only once */\n      if (deferDOM_handlerCalled)\n        return;\n      deferDOM_handlerCalled = true;\n      /* subsequent calls must not enqueue */\n      self.onDOMready = deferDOM_ready;\n      /* clear event handlers */\n      document.removeEventListener(\"DOMContentLoaded\", handler, false);\n      window.removeEventListener(\"load\", handler, false);\n      /* run user callbacks */\n      for (let i = 0; i < deferDOM_callbacks.length; ++i)\n        deferDOM_callbacks[i]();\n      deferDOM_callbacks = null; //gc\n    };\n\n    // make callable (mutating, do not copy)\n    self.onDOMready = function deferDOM_initial(cb) {\n      /* if possible, skip all that */\n      if (document.readyState === \"complete\") {\n        self.onDOMready = deferDOM_ready;\n        return (deferDOM_ready(cb));\n      }\n      // onDOMready, after setup, before DOM is ready\n      const enqfn = function deferDOM_enqueue(cb) {\n        if (typeof(cb) === \"function\")\n          deferDOM_callbacks.push(cb);\n        return (false);\n      };\n      /* subsequent calls will enqueue */\n      self.onDOMready = enqfn;\n      /* set up handler */\n      document.addEventListener(\"DOMContentLoaded\", handler, false);\n      /* last resort: always works, but later than possible */\n      window.addEventListener(\"load\", handler, false);\n      /* except if DOM got ready in the meantime */\n      if (document.readyState === \"complete\") {\n        /* undo all that attaching */\n        handler();\n        /* goto finish */\n        self.onDOMready = deferDOM_ready;\n        return (deferDOM_ready(cb));\n      }\n      /* just enqueue that */\n      return (enqfn(cb));\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2011 Dan Vanderkam (danvdk@gmail.com)\n * MIT-licenced: https://opensource.org/licenses/MIT\n */\n\n/**\n * @fileoverview Based on PlotKitLayout, but modified to meet the needs of\n * dygraphs.\n */\n\n/*global Dygraph:false */\n\"use strict\";\n\nimport * as utils from './dygraph-utils';\n\n/**\n * Creates a new DygraphLayout object.\n *\n * This class contains all the data to be charted.\n * It uses data coordinates, but also records the chart range (in data\n * coordinates) and hence is able to calculate percentage positions ('In this\n * view, Point A lies 25% down the x-axis.')\n *\n * Two things that it does not do are:\n * 1. Record pixel coordinates for anything.\n * 2. (oddly) determine anything about the layout of chart elements.\n *\n * The naming is a vestige of Dygraph's original PlotKit roots.\n *\n * @constructor\n */\nvar DygraphLayout = function(dygraph) {\n  this.dygraph_ = dygraph;\n  /**\n   * Array of points for each series.\n   *\n   * [series index][row index in series] = |Point| structure,\n   * where series index refers to visible series only, and the\n   * point index is for the reduced set of points for the current\n   * zoom region (including one point just outside the window).\n   * All points in the same row index share the same X value.\n   *\n   * @type {Array.<Array.<Dygraph.PointType>>}\n   */\n  this.points = [];\n  this.setNames = [];\n  this.annotations = [];\n  this.yAxes_ = null;\n\n  // TODO(danvk): it's odd that xTicks_ and yTicks_ are inputs,\n  // but xticks and yticks are outputs. Clean this up.\n  this.xTicks_ = null;\n  this.yTicks_ = null;\n};\n\n/**\n * Add points for a single series.\n *\n * @param {string} setname Name of the series.\n * @param {Array.<Dygraph.PointType>} set_xy Points for the series.\n */\nDygraphLayout.prototype.addDataset = function(setname, set_xy) {\n  this.points.push(set_xy);\n  this.setNames.push(setname);\n};\n\n/**\n * Returns the box which the chart should be drawn in. This is the canvas's\n * box, less space needed for the axis and chart labels.\n *\n * @return {{x: number, y: number, w: number, h: number}}\n */\nDygraphLayout.prototype.getPlotArea = function() {\n  return this.area_;\n};\n\n// Compute the box which the chart should be drawn in. This is the canvas's\n// box, less space needed for axis, chart labels, and other plug-ins.\n// NOTE: This should only be called by Dygraph.predraw_().\nDygraphLayout.prototype.computePlotArea = function() {\n  var area = {\n    // TODO(danvk): per-axis setting.\n    x: 0,\n    y: 0\n  };\n\n  area.w = this.dygraph_.width_ - area.x - this.dygraph_.getOption('rightGap');\n  area.h = this.dygraph_.height_;\n\n  // Let plugins reserve space.\n  var e = {\n    chart_div: this.dygraph_.graphDiv,\n    reserveSpaceLeft: function(px) {\n      var r = {\n        x: area.x,\n        y: area.y,\n        w: px,\n        h: area.h\n      };\n      area.x += px;\n      area.w -= px;\n      return r;\n    },\n    reserveSpaceRight: function(px) {\n      var r = {\n        x: area.x + area.w - px,\n        y: area.y,\n        w: px,\n        h: area.h\n      };\n      area.w -= px;\n      return r;\n    },\n    reserveSpaceTop: function(px) {\n      var r = {\n        x: area.x,\n        y: area.y,\n        w: area.w,\n        h: px\n      };\n      area.y += px;\n      area.h -= px;\n      return r;\n    },\n    reserveSpaceBottom: function(px) {\n      var r = {\n        x: area.x,\n        y: area.y + area.h - px,\n        w: area.w,\n        h: px\n      };\n      area.h -= px;\n      return r;\n    },\n    chartRect: function() {\n      return {x:area.x, y:area.y, w:area.w, h:area.h};\n    }\n  };\n  this.dygraph_.cascadeEvents_('layout', e);\n\n  this.area_ = area;\n};\n\nDygraphLayout.prototype.setAnnotations = function(ann) {\n  // The Dygraph object's annotations aren't parsed. We parse them here and\n  // save a copy. If there is no parser, then the user must be using raw format.\n  this.annotations = [];\n  var parse = this.dygraph_.getOption('xValueParser') || function(x) { return x; };\n  for (var i = 0; i < ann.length; i++) {\n    var a = {};\n    if (!ann[i].xval && ann[i].x === undefined) {\n      console.error(\"Annotations must have an 'x' property\");\n      return;\n    }\n    if (ann[i].icon &&\n        !(ann[i].hasOwnProperty('width') &&\n          ann[i].hasOwnProperty('height'))) {\n      console.error(\"Must set width and height when setting \" +\n                    \"annotation.icon property\");\n      return;\n    }\n    utils.update(a, ann[i]);\n    if (!a.xval) a.xval = parse(a.x);\n    this.annotations.push(a);\n  }\n};\n\nDygraphLayout.prototype.setXTicks = function(xTicks) {\n  this.xTicks_ = xTicks;\n};\n\n// TODO(danvk): add this to the Dygraph object's API or move it into Layout.\nDygraphLayout.prototype.setYAxes = function (yAxes) {\n  this.yAxes_ = yAxes;\n};\n\nDygraphLayout.prototype.evaluate = function() {\n  this._xAxis = {};\n  this._evaluateLimits();\n  this._evaluateLineCharts();\n  this._evaluateLineTicks();\n  this._evaluateAnnotations();\n};\n\nDygraphLayout.prototype._evaluateLimits = function() {\n  var xlimits = this.dygraph_.xAxisRange();\n  this._xAxis.minval = xlimits[0];\n  this._xAxis.maxval = xlimits[1];\n  var xrange = xlimits[1] - xlimits[0];\n  this._xAxis.scale = (xrange !== 0 ? 1 / xrange : 1.0);\n\n  if (this.dygraph_.getOptionForAxis(\"logscale\", 'x')) {\n    this._xAxis.xlogrange = utils.log10(this._xAxis.maxval) - utils.log10(this._xAxis.minval);\n    this._xAxis.xlogscale = (this._xAxis.xlogrange !== 0 ? 1.0 / this._xAxis.xlogrange : 1.0);\n  }\n  for (var i = 0; i < this.yAxes_.length; i++) {\n    var axis = this.yAxes_[i];\n    axis.minyval = axis.computedValueRange[0];\n    axis.maxyval = axis.computedValueRange[1];\n    axis.yrange = axis.maxyval - axis.minyval;\n    axis.yscale = (axis.yrange !== 0 ? 1.0 / axis.yrange : 1.0);\n\n    if (this.dygraph_.getOption(\"logscale\") || axis.logscale) {\n      axis.ylogrange = utils.log10(axis.maxyval) - utils.log10(axis.minyval);\n      axis.ylogscale = (axis.ylogrange !== 0 ? 1.0 / axis.ylogrange : 1.0);\n      if (!isFinite(axis.ylogrange) || isNaN(axis.ylogrange)) {\n        console.error('axis ' + i + ' of graph at ' + axis.g +\n                      ' can\\'t be displayed in log scale for range [' +\n                      axis.minyval + ' - ' + axis.maxyval + ']');\n      }\n    }\n  }\n};\n\nDygraphLayout.calcXNormal_ = function(value, xAxis, logscale) {\n  if (logscale) {\n    return ((utils.log10(value) - utils.log10(xAxis.minval)) * xAxis.xlogscale);\n  } else {\n    return (value - xAxis.minval) * xAxis.scale;\n  }\n};\n\n/**\n * @param {DygraphAxisType} axis\n * @param {number} value\n * @param {boolean} logscale\n * @return {number}\n */\nDygraphLayout.calcYNormal_ = function(axis, value, logscale) {\n  if (logscale) {\n    var x = 1.0 - ((utils.log10(value) - utils.log10(axis.minyval)) * axis.ylogscale);\n    return isFinite(x) ? x : NaN;  // shim for v8 issue; see pull request 276\n  } else {\n    return 1.0 - ((value - axis.minyval) * axis.yscale);\n  }\n};\n\nDygraphLayout.prototype._evaluateLineCharts = function() {\n  var isStacked = this.dygraph_.getOption(\"stackedGraph\");\n  var isLogscaleForX = this.dygraph_.getOptionForAxis(\"logscale\", 'x');\n\n  for (var setIdx = 0; setIdx < this.points.length; setIdx++) {\n    var points = this.points[setIdx];\n    var setName = this.setNames[setIdx];\n    var connectSeparated = this.dygraph_.getOption('connectSeparatedPoints', setName);\n    var axis = this.dygraph_.axisPropertiesForSeries(setName);\n    // TODO (konigsberg): use optionsForAxis instead.\n    var logscale = this.dygraph_.attributes_.getForSeries(\"logscale\", setName);\n\n    for (var j = 0; j < points.length; j++) {\n      var point = points[j];\n\n      // Range from 0-1 where 0 represents left and 1 represents right.\n      point.x = DygraphLayout.calcXNormal_(point.xval, this._xAxis, isLogscaleForX);\n      // Range from 0-1 where 0 represents top and 1 represents bottom\n      var yval = point.yval;\n      if (isStacked) {\n        point.y_stacked = DygraphLayout.calcYNormal_(\n            axis, point.yval_stacked, logscale);\n        if (yval !== null && !isNaN(yval)) {\n          yval = point.yval_stacked;\n        }\n      }\n      if (yval === null) {\n        yval = NaN;\n        if (!connectSeparated) {\n          point.yval = NaN;\n        }\n      }\n      point.y = DygraphLayout.calcYNormal_(axis, yval, logscale);\n    }\n\n    this.dygraph_.dataHandler_.onLineEvaluated(points, axis, logscale);\n  }\n};\n\nDygraphLayout.prototype._evaluateLineTicks = function() {\n  var i, tick, label, pos, v, has_tick;\n  this.xticks = [];\n  for (i = 0; i < this.xTicks_.length; i++) {\n    tick = this.xTicks_[i];\n    label = tick.label;\n    has_tick = !('label_v' in tick);\n    v = has_tick ? tick.v : tick.label_v;\n    pos = this.dygraph_.toPercentXCoord(v);\n    if ((pos >= 0.0) && (pos < 1.0)) {\n      this.xticks.push({pos, label, has_tick});\n    }\n  }\n\n  this.yticks = [];\n  for (i = 0; i < this.yAxes_.length; i++ ) {\n    var axis = this.yAxes_[i];\n    for (var j = 0; j < axis.ticks.length; j++) {\n      tick = axis.ticks[j];\n      label = tick.label;\n      has_tick = !('label_v' in tick);\n      v = has_tick ? tick.v : tick.label_v;\n      pos = this.dygraph_.toPercentYCoord(v, i);\n      if ((pos > 0.0) && (pos <= 1.0)) {\n        this.yticks.push({axis: i, pos, label, has_tick});\n      }\n    }\n  }\n};\n\nDygraphLayout.prototype._evaluateAnnotations = function() {\n  // Add the annotations to the point to which they belong.\n  // Make a map from (setName, xval) to annotation for quick lookups.\n  var i;\n  var annotations = {};\n  for (i = 0; i < this.annotations.length; i++) {\n    var a = this.annotations[i];\n    annotations[a.xval + \",\" + a.series] = a;\n  }\n\n  this.annotated_points = [];\n\n  // Exit the function early if there are no annotations.\n  if (!this.annotations || !this.annotations.length) {\n    return;\n  }\n\n  // TODO(antrob): loop through annotations not points.\n  for (var setIdx = 0; setIdx < this.points.length; setIdx++) {\n    var points = this.points[setIdx];\n    for (i = 0; i < points.length; i++) {\n      var p = points[i];\n      var k = p.xval + \",\" + p.name;\n      if (k in annotations) {\n        p.annotation = annotations[k];\n        this.annotated_points.push(p);\n        //if there are multiple same x-valued points, the annotation would be rendered multiple times\n        //remove already rendered annotation\n        delete annotations[k];\n      }\n    }\n  }\n};\n\n/**\n * Convenience function to remove all the data sets from a graph\n */\nDygraphLayout.prototype.removeAllDatasets = function() {\n  delete this.points;\n  delete this.setNames;\n  delete this.setPointsLengths;\n  delete this.setPointsOffsets;\n  this.points = [];\n  this.setNames = [];\n  this.setPointsLengths = [];\n  this.setPointsOffsets = [];\n};\n\nexport default DygraphLayout;\n","/**\n * @license\n * Copyright 2006 Dan Vanderkam (danvdk@gmail.com)\n * MIT-licenced: https://opensource.org/licenses/MIT\n */\n\n/**\n * @fileoverview Based on PlotKit.CanvasRenderer, but modified to meet the\n * needs of dygraphs.\n *\n * In particular, support for:\n * - grid overlays\n * - high/low bands\n * - dygraphs attribute system\n */\n\n/**\n * The DygraphCanvasRenderer class does the actual rendering of the chart onto\n * a canvas. It's based on PlotKit.CanvasRenderer.\n * @param {Object} element The canvas to attach to\n * @param {Object} elementContext The 2d context of the canvas (injected so it\n * can be mocked for testing.)\n * @param {Layout} layout The DygraphLayout object for this graph.\n * @constructor\n */\n\n/*global Dygraph:false */\n\"use strict\";\n\nimport * as utils from './dygraph-utils';\nimport Dygraph from './dygraph';\n\n/**\n * @constructor\n *\n * This gets called when there are \"new points\" to chart. This is generally the\n * case when the underlying data being charted has changed. It is _not_ called\n * in the common case that the user has zoomed or is panning the view.\n *\n * The chart canvas has already been created by the Dygraph object. The\n * renderer simply gets a drawing context.\n *\n * @param {Dygraph} dygraph The chart to which this renderer belongs.\n * @param {HTMLCanvasElement} element The &lt;canvas&gt; DOM element on which to draw.\n * @param {CanvasRenderingContext2D} elementContext The drawing context.\n * @param {DygraphLayout} layout The chart's DygraphLayout object.\n *\n * TODO(danvk): remove the elementContext property.\n */\nvar DygraphCanvasRenderer = function(dygraph, element, elementContext, layout) {\n  this.dygraph_ = dygraph;\n\n  this.layout = layout;\n  this.element = element;\n  this.elementContext = elementContext;\n\n  this.height = dygraph.height_;\n  this.width = dygraph.width_;\n\n  // --- check whether everything is ok before we return\n  if (!utils.isCanvasSupported(this.element)) {\n    throw \"Canvas is not supported.\";\n  }\n\n  // internal state\n  this.area = layout.getPlotArea();\n\n  // Set up a clipping area for the canvas (and the interaction canvas).\n  // This ensures that we don't overdraw.\n  var ctx = this.dygraph_.canvas_ctx_;\n  ctx.beginPath();\n  ctx.rect(this.area.x, this.area.y, this.area.w, this.area.h);\n  ctx.clip();\n\n  ctx = this.dygraph_.hidden_ctx_;\n  ctx.beginPath();\n  ctx.rect(this.area.x, this.area.y, this.area.w, this.area.h);\n  ctx.clip();\n};\n\n/**\n * Clears out all chart content and DOM elements.\n * This is called immediately before render() on every frame, including\n * during zooms and pans.\n * @private\n */\nDygraphCanvasRenderer.prototype.clear = function() {\n  this.elementContext.clearRect(0, 0, this.width, this.height);\n};\n\n/**\n * This method is responsible for drawing everything on the chart, including\n * lines, high/low bands, fills and axes.\n * It is called immediately after clear() on every frame, including during pans\n * and zooms.\n * @private\n */\nDygraphCanvasRenderer.prototype.render = function() {\n  // attaches point.canvas{x,y}\n  this._updatePoints();\n\n  // actually draws the chart.\n  this._renderLineChart();\n};\n\n/**\n * Returns a predicate to be used with an iterator, which will\n * iterate over points appropriately, depending on whether\n * connectSeparatedPoints is true. When it's false, the predicate will\n * skip over points with missing yVals.\n */\nDygraphCanvasRenderer._getIteratorPredicate = function(connectSeparatedPoints) {\n  return connectSeparatedPoints ?\n      DygraphCanvasRenderer._predicateThatSkipsEmptyPoints :\n      null;\n};\n\nDygraphCanvasRenderer._predicateThatSkipsEmptyPoints =\n    function(array, idx) {\n  return array[idx].yval !== null;\n};\n\n/**\n * Draws a line with the styles passed in and calls all the drawPointCallbacks.\n * @param {Object} e The dictionary passed to the plotter function.\n * @private\n */\nDygraphCanvasRenderer._drawStyledLine = function(e,\n    color, strokeWidth, strokePattern, drawPoints,\n    drawPointCallback, pointSize) {\n  var g = e.dygraph;\n  // TODO(konigsberg): Compute attributes outside this method call.\n  var stepPlot = g.getBooleanOption(\"stepPlot\", e.setName);\n\n  if (!utils.isArrayLike(strokePattern)) {\n    strokePattern = null;\n  }\n\n  var drawGapPoints = g.getBooleanOption('drawGapEdgePoints', e.setName);\n\n  var points = e.points;\n  var setName = e.setName;\n  var iter = utils.createIterator(points, 0, points.length,\n      DygraphCanvasRenderer._getIteratorPredicate(\n          g.getBooleanOption(\"connectSeparatedPoints\", setName)));\n\n  var stroking = strokePattern && (strokePattern.length >= 2);\n\n  var ctx = e.drawingContext;\n  ctx.save();\n  if (stroking) {\n    if (ctx.setLineDash) ctx.setLineDash(strokePattern);\n  }\n\n  var pointsOnLine = DygraphCanvasRenderer._drawSeries(\n      e, iter, strokeWidth, pointSize, drawPoints, drawGapPoints, stepPlot, color);\n  DygraphCanvasRenderer._drawPointsOnLine(\n      e, pointsOnLine, drawPointCallback, color, pointSize);\n\n  if (stroking) {\n    if (ctx.setLineDash) ctx.setLineDash([]);\n  }\n\n  ctx.restore();\n};\n\n/**\n * This does the actual drawing of lines on the canvas, for just one series.\n * Returns a list of [canvasx, canvasy] pairs for points for which a\n * drawPointCallback should be fired.  These include isolated points, or all\n * points if drawPoints=true.\n * @param {Object} e The dictionary passed to the plotter function.\n * @private\n */\nDygraphCanvasRenderer._drawSeries = function(e,\n    iter, strokeWidth, pointSize, drawPoints, drawGapPoints, stepPlot, color) {\n\n  var prevCanvasX = null;\n  var prevCanvasY = null;\n  var nextCanvasY = null;\n  var isIsolated; // true if this point is isolated (no line segments)\n  var point; // the point being processed in the while loop\n  var pointsOnLine = []; // Array of [canvasx, canvasy] pairs.\n  var first = true; // the first cycle through the while loop\n\n  var ctx = e.drawingContext;\n  ctx.beginPath();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = strokeWidth;\n\n  // NOTE: we break the iterator's encapsulation here for about a 25% speedup.\n  var arr = iter.array_;\n  var limit = iter.end_;\n  var predicate = iter.predicate_;\n\n  for (var i = iter.start_; i < limit; i++) {\n    point = arr[i];\n    if (predicate) {\n      while (i < limit && !predicate(arr, i)) {\n        i++;\n      }\n      if (i == limit) break;\n      point = arr[i];\n    }\n\n    // FIXME: The 'canvasy != canvasy' test here catches NaN values but the test\n    // doesn't catch Infinity values. Could change this to\n    // !isFinite(point.canvasy), but I assume it avoids isNaN for performance?\n    if (point.canvasy === null || point.canvasy != point.canvasy) {\n      if (stepPlot && prevCanvasX !== null) {\n        // Draw a horizontal line to the start of the missing data\n        ctx.moveTo(prevCanvasX, prevCanvasY);\n        ctx.lineTo(point.canvasx, prevCanvasY);\n      }\n      prevCanvasX = prevCanvasY = null;\n    } else {\n      isIsolated = false;\n      if (drawGapPoints || prevCanvasX === null) {\n        iter.nextIdx_ = i;\n        iter.next();\n        nextCanvasY = iter.hasNext ? iter.peek.canvasy : null;\n\n        var isNextCanvasYNullOrNaN = nextCanvasY === null ||\n            nextCanvasY != nextCanvasY;\n        isIsolated = (prevCanvasX === null && isNextCanvasYNullOrNaN);\n        if (drawGapPoints) {\n          // Also consider a point to be \"isolated\" if it's adjacent to a\n          // null point, excluding the graph edges.\n          if ((!first && prevCanvasX === null) ||\n              (iter.hasNext && isNextCanvasYNullOrNaN)) {\n            isIsolated = true;\n          }\n        }\n      }\n\n      if (prevCanvasX !== null) {\n        if (strokeWidth) {\n          if (stepPlot) {\n            ctx.moveTo(prevCanvasX, prevCanvasY);\n            ctx.lineTo(point.canvasx, prevCanvasY);\n          }\n\n          ctx.lineTo(point.canvasx, point.canvasy);\n        }\n      } else {\n        ctx.moveTo(point.canvasx, point.canvasy);\n      }\n      if (drawPoints || isIsolated) {\n        pointsOnLine.push([point.canvasx, point.canvasy, point.idx]);\n      }\n      prevCanvasX = point.canvasx;\n      prevCanvasY = point.canvasy;\n    }\n    first = false;\n  }\n  ctx.stroke();\n  return pointsOnLine;\n};\n\n/**\n * This fires the drawPointCallback functions, which draw dots on the points by\n * default. This gets used when the \"drawPoints\" option is set, or when there\n * are isolated points.\n * @param {Object} e The dictionary passed to the plotter function.\n * @private\n */\nDygraphCanvasRenderer._drawPointsOnLine = function(\n    e, pointsOnLine, drawPointCallback, color, pointSize) {\n  var ctx = e.drawingContext;\n  for (var idx = 0; idx < pointsOnLine.length; idx++) {\n    var cb = pointsOnLine[idx];\n    ctx.save();\n    drawPointCallback.call(e.dygraph,\n        e.dygraph, e.setName, ctx, cb[0], cb[1], color, pointSize, cb[2]);\n    ctx.restore();\n  }\n};\n\n/**\n * Attaches canvas coordinates to the points array.\n * @private\n */\nDygraphCanvasRenderer.prototype._updatePoints = function() {\n  // Update Points\n  // TODO(danvk): here\n  //\n  // TODO(bhs): this loop is a hot-spot for high-point-count charts. These\n  // transformations can be pushed into the canvas via linear transformation\n  // matrices.\n  // NOTE(danvk): this is trickier than it sounds at first. The transformation\n  // needs to be done before the .moveTo() and .lineTo() calls, but must be\n  // undone before the .stroke() call to ensure that the stroke width is\n  // unaffected.  An alternative is to reduce the stroke width in the\n  // transformed coordinate space, but you can't specify different values for\n  // each dimension (as you can with .scale()). The speedup here is ~12%.\n  var sets = this.layout.points;\n  for (var i = sets.length; i--;) {\n    var points = sets[i];\n    for (var j = points.length; j--;) {\n      var point = points[j];\n      point.canvasx = this.area.w * point.x + this.area.x;\n      point.canvasy = this.area.h * point.y + this.area.y;\n    }\n  }\n};\n\n/**\n * Add canvas Actually draw the lines chart, including high/low bands.\n *\n * This function can only be called if DygraphLayout's points array has been\n * updated with canvas{x,y} attributes, i.e. by\n * DygraphCanvasRenderer._updatePoints.\n *\n * @param {string=} opt_seriesName when specified, only that series will\n *     be drawn. (This is used for expedited redrawing with highlightSeriesOpts)\n * @param {CanvasRenderingContext2D} opt_ctx when specified, the drawing\n *     context.  However, lines are typically drawn on the object's\n *     elementContext.\n * @private\n */\nDygraphCanvasRenderer.prototype._renderLineChart = function(opt_seriesName, opt_ctx) {\n  var ctx = opt_ctx || this.elementContext;\n  var i;\n\n  var sets = this.layout.points;\n  var setNames = this.layout.setNames;\n  var setName;\n\n  this.colors = this.dygraph_.colorsMap_;\n\n  // Determine which series have specialized plotters.\n  var plotter_attr = this.dygraph_.getOption(\"plotter\");\n  var plotters = plotter_attr;\n  if (!utils.isArrayLike(plotters)) {\n    plotters = [plotters];\n  }\n\n  var setPlotters = {};  // series name -> plotter fn.\n  for (i = 0; i < setNames.length; i++) {\n    setName = setNames[i];\n    var setPlotter = this.dygraph_.getOption(\"plotter\", setName);\n    if (setPlotter == plotter_attr) continue;  // not specialized.\n\n    setPlotters[setName] = setPlotter;\n  }\n\n  for (i = 0; i < plotters.length; i++) {\n    var plotter = plotters[i];\n    var is_last = (i == plotters.length - 1);\n\n    for (var j = 0; j < sets.length; j++) {\n      setName = setNames[j];\n      if (opt_seriesName && setName != opt_seriesName) continue;\n\n      var points = sets[j];\n\n      // Only throw in the specialized plotters on the last iteration.\n      var p = plotter;\n      if (setName in setPlotters) {\n        if (is_last) {\n          p = setPlotters[setName];\n        } else {\n          // Don't use the standard plotters in this case.\n          continue;\n        }\n      }\n\n      var color = this.colors[setName];\n      var strokeWidth = this.dygraph_.getOption(\"strokeWidth\", setName);\n\n      ctx.save();\n      ctx.strokeStyle = color;\n      ctx.lineWidth = strokeWidth;\n      p({\n        points: points,\n        setName: setName,\n        drawingContext: ctx,\n        color: color,\n        strokeWidth: strokeWidth,\n        dygraph: this.dygraph_,\n        axis: this.dygraph_.axisPropertiesForSeries(setName),\n        plotArea: this.area,\n        seriesIndex: j,\n        seriesCount: sets.length,\n        singleSeriesName: opt_seriesName,\n        allSeriesPoints: sets\n      });\n      ctx.restore();\n    }\n  }\n};\n\n/**\n * Standard plotters. These may be used by clients via Dygraph.Plotters.\n * See comments there for more details.\n */\nDygraphCanvasRenderer._Plotters = {\n  linePlotter: function(e) {\n    DygraphCanvasRenderer._linePlotter(e);\n  },\n\n  fillPlotter: function(e) {\n    DygraphCanvasRenderer._fillPlotter(e);\n  },\n\n  errorPlotter: function(e) {\n    DygraphCanvasRenderer._errorPlotter(e);\n  }\n};\n\n/**\n * Plotter which draws the central lines for a series.\n * @private\n */\nDygraphCanvasRenderer._linePlotter = function(e) {\n  var g = e.dygraph;\n  var setName = e.setName;\n  var strokeWidth = e.strokeWidth;\n\n  // TODO(danvk): Check if there's any performance impact of just calling\n  // getOption() inside of _drawStyledLine. Passing in so many parameters makes\n  // this code a bit nasty.\n  var borderWidth = g.getNumericOption(\"strokeBorderWidth\", setName);\n  var drawPointCallback = g.getOption(\"drawPointCallback\", setName) ||\n      utils.Circles.DEFAULT;\n  var strokePattern = g.getOption(\"strokePattern\", setName);\n  var drawPoints = g.getBooleanOption(\"drawPoints\", setName);\n  var pointSize = g.getNumericOption(\"pointSize\", setName);\n\n  if (borderWidth && strokeWidth) {\n    DygraphCanvasRenderer._drawStyledLine(e,\n        g.getOption(\"strokeBorderColor\", setName),\n        strokeWidth + 2 * borderWidth,\n        strokePattern,\n        drawPoints,\n        drawPointCallback,\n        pointSize\n        );\n  }\n\n  DygraphCanvasRenderer._drawStyledLine(e,\n      e.color,\n      strokeWidth,\n      strokePattern,\n      drawPoints,\n      drawPointCallback,\n      pointSize\n  );\n};\n\n/**\n * Draws the shaded high/low bands (confidence intervals) for each series.\n * This happens before the center lines are drawn, since the center lines\n * need to be drawn on top of the high/low bands for all series.\n * @private\n */\nDygraphCanvasRenderer._errorPlotter = function(e) {\n  var g = e.dygraph;\n  var setName = e.setName;\n  var errorBars = g.getBooleanOption(\"errorBars\") ||\n      g.getBooleanOption(\"customBars\");\n  if (!errorBars) return;\n\n  var fillGraph = g.getBooleanOption(\"fillGraph\", setName);\n  if (fillGraph) {\n    console.warn(\"Can't use fillGraph option with customBars or errorBars option\");\n  }\n\n  var ctx = e.drawingContext;\n  var color = e.color;\n  var fillAlpha = g.getNumericOption('fillAlpha', setName);\n  var stepPlot = g.getBooleanOption(\"stepPlot\", setName);\n  var points = e.points;\n\n  var iter = utils.createIterator(points, 0, points.length,\n      DygraphCanvasRenderer._getIteratorPredicate(\n          g.getBooleanOption(\"connectSeparatedPoints\", setName)));\n\n  var newYs;\n\n  // setup graphics context\n  var prevX = NaN;\n  var prevY = NaN;\n  var prevYs = [-1, -1];\n  // should be same color as the lines but only 15% opaque.\n  var rgb = utils.toRGB_(color);\n  var err_color =\n      'rgba(' + rgb.r + ',' + rgb.g + ',' + rgb.b + ',' + fillAlpha + ')';\n  ctx.fillStyle = err_color;\n  ctx.beginPath();\n\n  var isNullUndefinedOrNaN = function(x) {\n    return (x === null ||\n            x === undefined ||\n            isNaN(x));\n  };\n\n  while (iter.hasNext) {\n    var point = iter.next();\n    if ((!stepPlot && isNullUndefinedOrNaN(point.y)) ||\n        (stepPlot && !isNaN(prevY) && isNullUndefinedOrNaN(prevY))) {\n      prevX = NaN;\n      continue;\n    }\n\n    newYs = [ point.y_bottom, point.y_top ];\n    if (stepPlot) {\n      prevY = point.y;\n    }\n\n    // The documentation specifically disallows nulls inside the point arrays,\n    // but in case it happens we should do something sensible.\n    if (isNaN(newYs[0])) newYs[0] = point.y;\n    if (isNaN(newYs[1])) newYs[1] = point.y;\n\n    newYs[0] = e.plotArea.h * newYs[0] + e.plotArea.y;\n    newYs[1] = e.plotArea.h * newYs[1] + e.plotArea.y;\n    if (!isNaN(prevX)) {\n      if (stepPlot) {\n        ctx.moveTo(prevX, prevYs[0]);\n        ctx.lineTo(point.canvasx, prevYs[0]);\n        ctx.lineTo(point.canvasx, prevYs[1]);\n      } else {\n        ctx.moveTo(prevX, prevYs[0]);\n        ctx.lineTo(point.canvasx, newYs[0]);\n        ctx.lineTo(point.canvasx, newYs[1]);\n      }\n      ctx.lineTo(prevX, prevYs[1]);\n      ctx.closePath();\n    }\n    prevYs = newYs;\n    prevX = point.canvasx;\n  }\n  ctx.fill();\n};\n\n/**\n * Proxy for CanvasRenderingContext2D which drops moveTo/lineTo calls which are\n * superfluous. It accumulates all movements which haven't changed the x-value\n * and only applies the two with the most extreme y-values.\n *\n * Calls to lineTo/moveTo must have non-decreasing x-values.\n */\nDygraphCanvasRenderer._fastCanvasProxy = function(context) {\n  var pendingActions = [];  // array of [type, x, y] tuples\n  var lastRoundedX = null;\n  var lastFlushedX = null;\n\n  var LINE_TO = 1,\n      MOVE_TO = 2;\n\n  var actionCount = 0;  // number of moveTos and lineTos passed to context.\n\n  // Drop superfluous motions\n  // Assumes all pendingActions have the same (rounded) x-value.\n  var compressActions = function(opt_losslessOnly) {\n    if (pendingActions.length <= 1) return;\n\n    // Lossless compression: drop inconsequential moveTos.\n    for (var i = pendingActions.length - 1; i > 0; i--) {\n      var action = pendingActions[i];\n      if (action[0] == MOVE_TO) {\n        var prevAction = pendingActions[i - 1];\n        if (prevAction[1] == action[1] && prevAction[2] == action[2]) {\n          pendingActions.splice(i, 1);\n        }\n      }\n    }\n\n    // Lossless compression: ... drop consecutive moveTos ...\n    for (var i = 0; i < pendingActions.length - 1; /* incremented internally */) {\n      var action = pendingActions[i];\n      if (action[0] == MOVE_TO && pendingActions[i + 1][0] == MOVE_TO) {\n        pendingActions.splice(i, 1);\n      } else {\n        i++;\n      }\n    }\n\n    // Lossy compression: ... drop all but the extreme y-values ...\n    if (pendingActions.length > 2 && !opt_losslessOnly) {\n      // keep an initial moveTo, but drop all others.\n      var startIdx = 0;\n      if (pendingActions[0][0] == MOVE_TO) startIdx++;\n      var minIdx = null, maxIdx = null;\n      for (var i = startIdx; i < pendingActions.length; i++) {\n        var action = pendingActions[i];\n        if (action[0] != LINE_TO) continue;\n        if (minIdx === null && maxIdx === null) {\n          minIdx = i;\n          maxIdx = i;\n        } else {\n          var y = action[2];\n          if (y < pendingActions[minIdx][2]) {\n            minIdx = i;\n          } else if (y > pendingActions[maxIdx][2]) {\n            maxIdx = i;\n          }\n        }\n      }\n      var minAction = pendingActions[minIdx],\n          maxAction = pendingActions[maxIdx];\n      pendingActions.splice(startIdx, pendingActions.length - startIdx);\n      if (minIdx < maxIdx) {\n        pendingActions.push(minAction);\n        pendingActions.push(maxAction);\n      } else if (minIdx > maxIdx) {\n        pendingActions.push(maxAction);\n        pendingActions.push(minAction);\n      } else {\n        pendingActions.push(minAction);\n      }\n    }\n  };\n\n  var flushActions = function(opt_noLossyCompression) {\n    compressActions(opt_noLossyCompression);\n    for (var i = 0, len = pendingActions.length; i < len; i++) {\n      var action = pendingActions[i];\n      if (action[0] == LINE_TO) {\n        context.lineTo(action[1], action[2]);\n      } else if (action[0] == MOVE_TO) {\n        context.moveTo(action[1], action[2]);\n      }\n    }\n    if (pendingActions.length) {\n      lastFlushedX = pendingActions[pendingActions.length - 1][1];\n    }\n    actionCount += pendingActions.length;\n    pendingActions = [];\n  };\n\n  var addAction = function(action, x, y) {\n    var rx = Math.round(x);\n    if (lastRoundedX === null || rx != lastRoundedX) {\n      // if there are large gaps on the x-axis, it's essential to keep the\n      // first and last point as well.\n      var hasGapOnLeft = (lastRoundedX - lastFlushedX > 1),\n          hasGapOnRight = (rx - lastRoundedX > 1),\n          hasGap = hasGapOnLeft || hasGapOnRight;\n      flushActions(hasGap);\n      lastRoundedX = rx;\n    }\n    pendingActions.push([action, x, y]);\n  };\n\n  return {\n    moveTo: function(x, y) {\n      addAction(MOVE_TO, x, y);\n    },\n    lineTo: function(x, y) {\n      addAction(LINE_TO, x, y);\n    },\n\n    // for major operations like stroke/fill, we skip compression to ensure\n    // that there are no artifacts at the right edge.\n    stroke:    function() { flushActions(true); context.stroke(); },\n    fill:      function() { flushActions(true); context.fill(); },\n    beginPath: function() { flushActions(true); context.beginPath(); },\n    closePath: function() { flushActions(true); context.closePath(); },\n\n    _count: function() { return actionCount; }\n  };\n};\n\n/**\n * Draws the shaded regions when \"fillGraph\" is set.\n * Not to be confused with high/low bands (historically misnamed errorBars).\n *\n * For stacked charts, it's more convenient to handle all the series\n * simultaneously. So this plotter plots all the points on the first series\n * it's asked to draw, then ignores all the other series.\n *\n * @private\n */\nDygraphCanvasRenderer._fillPlotter = function(e) {\n  // Skip if we're drawing a single series for interactive highlight overlay.\n  if (e.singleSeriesName) return;\n\n  // We'll handle all the series at once, not one-by-one.\n  if (e.seriesIndex !== 0) return;\n\n  var g = e.dygraph;\n  var setNames = g.getLabels().slice(1);  // remove x-axis\n\n  // getLabels() includes names for invisible series, which are not included in\n  // allSeriesPoints. We remove those to make the two match.\n  // TODO(danvk): provide a simpler way to get this information.\n  for (var i = setNames.length; i >= 0; i--) {\n    if (!g.visibility()[i]) setNames.splice(i, 1);\n  }\n\n  var anySeriesFilled = (function() {\n    for (var i = 0; i < setNames.length; i++) {\n      if (g.getBooleanOption(\"fillGraph\", setNames[i])) return true;\n    }\n    return false;\n  })();\n\n  if (!anySeriesFilled) return;\n\n  var area = e.plotArea;\n  var sets = e.allSeriesPoints;\n  var setCount = sets.length;\n\n  var stackedGraph = g.getBooleanOption(\"stackedGraph\");\n  var colors = g.getColors();\n\n  // For stacked graphs, track the baseline for filling.\n  //\n  // The filled areas below graph lines are trapezoids with two\n  // vertical edges. The top edge is the line segment being drawn, and\n  // the baseline is the bottom edge. Each baseline corresponds to the\n  // top line segment from the previous stacked line. In the case of\n  // step plots, the trapezoids are rectangles.\n  var baseline = {};\n  var currBaseline;\n  var prevStepPlot;  // for different line drawing modes (line/step) per series\n\n  // Helper function to trace a line back along the baseline.\n  var traceBackPath = function(ctx, baselineX, baselineY, pathBack) {\n    ctx.lineTo(baselineX, baselineY);\n    if (stackedGraph) {\n      for (var i = pathBack.length - 1; i >= 0; i--) {\n        var pt = pathBack[i];\n        ctx.lineTo(pt[0], pt[1]);\n      }\n    }\n  };\n\n  // process sets in reverse order (needed for stacked graphs)\n  for (var setIdx = setCount - 1; setIdx >= 0; setIdx--) {\n    var ctx = e.drawingContext;\n    var setName = setNames[setIdx];\n    if (!g.getBooleanOption('fillGraph', setName)) continue;\n\n    var fillAlpha = g.getNumericOption('fillAlpha', setName);\n    var stepPlot = g.getBooleanOption('stepPlot', setName);\n    var color = colors[setIdx];\n    var axis = g.axisPropertiesForSeries(setName);\n    var axisY = 1.0 + axis.minyval * axis.yscale;\n    if (axisY < 0.0) axisY = 0.0;\n    else if (axisY > 1.0) axisY = 1.0;\n    axisY = area.h * axisY + area.y;\n\n    var points = sets[setIdx];\n    var iter = utils.createIterator(points, 0, points.length,\n        DygraphCanvasRenderer._getIteratorPredicate(\n            g.getBooleanOption(\"connectSeparatedPoints\", setName)));\n\n    // setup graphics context\n    var prevX = NaN;\n    var prevYs = [-1, -1];\n    var newYs;\n    // should be same color as the lines but only 15% opaque.\n    var rgb = utils.toRGB_(color);\n    var err_color =\n        'rgba(' + rgb.r + ',' + rgb.g + ',' + rgb.b + ',' + fillAlpha + ')';\n    ctx.fillStyle = err_color;\n    ctx.beginPath();\n    var last_x, is_first = true;\n\n    // If the point density is high enough, dropping segments on their way to\n    // the canvas justifies the overhead of doing so.\n    if (points.length > 2 * g.width_ || Dygraph.FORCE_FAST_PROXY) {\n      ctx = DygraphCanvasRenderer._fastCanvasProxy(ctx);\n    }\n\n    // For filled charts, we draw points from left to right, then back along\n    // the x-axis to complete a shape for filling.\n    // For stacked plots, this \"back path\" is a more complex shape. This array\n    // stores the [x, y] values needed to trace that shape.\n    var pathBack = [];\n\n    // TODO(danvk): there are a lot of options at play in this loop.\n    //     The logic would be much clearer if some (e.g. stackGraph and\n    //     stepPlot) were split off into separate sub-plotters.\n    var point;\n    while (iter.hasNext) {\n      point = iter.next();\n      if (!utils.isOK(point.y) && !stepPlot) {\n        traceBackPath(ctx, prevX, prevYs[1], pathBack);\n        pathBack = [];\n        prevX = NaN;\n        if (point.y_stacked !== null && !isNaN(point.y_stacked)) {\n          baseline[point.canvasx] = area.h * point.y_stacked + area.y;\n        }\n        continue;\n      }\n      if (stackedGraph) {\n        if (!is_first && last_x == point.xval) {\n          continue;\n        } else {\n          is_first = false;\n          last_x = point.xval;\n        }\n\n        currBaseline = baseline[point.canvasx];\n        var lastY;\n        if (currBaseline === undefined) {\n          lastY = axisY;\n        } else {\n          if(prevStepPlot) {\n            lastY = currBaseline[0];\n          } else {\n            lastY = currBaseline;\n          }\n        }\n        newYs = [ point.canvasy, lastY ];\n\n        if (stepPlot) {\n          // Step plots must keep track of the top and bottom of\n          // the baseline at each point.\n          if (prevYs[0] === -1) {\n            baseline[point.canvasx] = [ point.canvasy, axisY ];\n          } else {\n            baseline[point.canvasx] = [ point.canvasy, prevYs[0] ];\n          }\n        } else {\n          baseline[point.canvasx] = point.canvasy;\n        }\n\n      } else {\n        if (isNaN(point.canvasy) && stepPlot) {\n          newYs = [ area.y + area.h, axisY ];\n        } else {\n          newYs = [ point.canvasy, axisY ];\n        }\n      }\n      if (!isNaN(prevX)) {\n        // Move to top fill point\n        if (stepPlot) {\n          ctx.lineTo(point.canvasx, prevYs[0]);\n          ctx.lineTo(point.canvasx, newYs[0]);\n        } else {\n          ctx.lineTo(point.canvasx, newYs[0]);\n        }\n\n        // Record the baseline for the reverse path.\n        if (stackedGraph) {\n          pathBack.push([prevX, prevYs[1]]);\n          if (prevStepPlot && currBaseline) {\n            // Draw to the bottom of the baseline\n            pathBack.push([point.canvasx, currBaseline[1]]);\n          } else {\n            pathBack.push([point.canvasx, newYs[1]]);\n          }\n        }\n      } else {\n        ctx.moveTo(point.canvasx, newYs[1]);\n        ctx.lineTo(point.canvasx, newYs[0]);\n      }\n      prevYs = newYs;\n      prevX = point.canvasx;\n    }\n    prevStepPlot = stepPlot;\n    if (newYs && point) {\n      traceBackPath(ctx, point.canvasx, newYs[1], pathBack);\n      pathBack = [];\n    }\n    ctx.fill();\n  }\n};\n\nexport default DygraphCanvasRenderer;\n","/**\n * @license\n * Copyright 2011 Robert Konigsberg (konigsberg@google.com)\n * MIT-licenced: https://opensource.org/licenses/MIT\n */\n\n/**\n * @fileoverview The default interaction model for Dygraphs. This is kept out\n * of dygraph.js for better navigability.\n * @author Robert Konigsberg (konigsberg@google.com)\n */\n\n/*global Dygraph:false */\n\"use strict\";\n\nimport * as utils from './dygraph-utils';\n\n/**\n * You can drag this many pixels past the edge of the chart and still have it\n * be considered a zoom. This makes it easier to zoom to the exact edge of the\n * chart, a fairly common operation.\n */\nvar DRAG_EDGE_MARGIN = 100;\n\n/**\n * A collection of functions to facilitate build custom interaction models.\n * @class\n */\nvar DygraphInteraction = {};\n\n/**\n * Checks whether the beginning & ending of an event were close enough that it\n * should be considered a click. If it should, dispatch appropriate events.\n * Returns true if the event was treated as a click.\n *\n * @param {Event} event\n * @param {Dygraph} g\n * @param {Object} context\n */\nDygraphInteraction.maybeTreatMouseOpAsClick = function(event, g, context) {\n  context.dragEndX = utils.dragGetX_(event, context);\n  context.dragEndY = utils.dragGetY_(event, context);\n  var regionWidth = Math.abs(context.dragEndX - context.dragStartX);\n  var regionHeight = Math.abs(context.dragEndY - context.dragStartY);\n\n  if (regionWidth < 2 && regionHeight < 2 &&\n      g.lastx_ !== undefined && g.lastx_ !== null) {\n    DygraphInteraction.treatMouseOpAsClick(g, event, context);\n  }\n\n  context.regionWidth = regionWidth;\n  context.regionHeight = regionHeight;\n};\n\n/**\n * Called in response to an interaction model operation that\n * should start the default panning behavior.\n *\n * It's used in the default callback for \"mousedown\" operations.\n * Custom interaction model builders can use it to provide the default\n * panning behavior.\n *\n * @param {Event} event the event object which led to the startPan call.\n * @param {Dygraph} g The dygraph on which to act.\n * @param {Object} context The dragging context object (with\n *     dragStartX/dragStartY/etc. properties). This function modifies the\n *     context.\n */\nDygraphInteraction.startPan = function(event, g, context) {\n  var i, axis;\n  context.isPanning = true;\n  var xRange = g.xAxisRange();\n\n  if (g.getOptionForAxis(\"logscale\", \"x\")) {\n    context.initialLeftmostDate = utils.log10(xRange[0]);\n    context.dateRange = utils.log10(xRange[1]) - utils.log10(xRange[0]);\n  } else {\n    context.initialLeftmostDate = xRange[0];\n    context.dateRange = xRange[1] - xRange[0];\n  }\n  context.xUnitsPerPixel = context.dateRange / (g.plotter_.area.w - 1);\n\n  if (g.getNumericOption(\"panEdgeFraction\")) {\n    var maxXPixelsToDraw = g.width_ * g.getNumericOption(\"panEdgeFraction\");\n    var xExtremes = g.xAxisExtremes(); // I REALLY WANT TO CALL THIS xTremes!\n\n    var boundedLeftX = g.toDomXCoord(xExtremes[0]) - maxXPixelsToDraw;\n    var boundedRightX = g.toDomXCoord(xExtremes[1]) + maxXPixelsToDraw;\n\n    var boundedLeftDate = g.toDataXCoord(boundedLeftX);\n    var boundedRightDate = g.toDataXCoord(boundedRightX);\n    context.boundedDates = [boundedLeftDate, boundedRightDate];\n\n    var boundedValues = [];\n    var maxYPixelsToDraw = g.height_ * g.getNumericOption(\"panEdgeFraction\");\n\n    for (i = 0; i < g.axes_.length; i++) {\n      axis = g.axes_[i];\n      var yExtremes = axis.extremeRange;\n\n      var boundedTopY = g.toDomYCoord(yExtremes[0], i) + maxYPixelsToDraw;\n      var boundedBottomY = g.toDomYCoord(yExtremes[1], i) - maxYPixelsToDraw;\n\n      var boundedTopValue = g.toDataYCoord(boundedTopY, i);\n      var boundedBottomValue = g.toDataYCoord(boundedBottomY, i);\n\n      boundedValues[i] = [boundedTopValue, boundedBottomValue];\n    }\n    context.boundedValues = boundedValues;\n  } else {\n    // undo effect if it was once set\n    context.boundedDates = null;\n    context.boundedValues = null;\n  }\n\n  // Record the range of each y-axis at the start of the drag.\n  // If any axis has a valueRange, then we want a 2D pan.\n  // We can't store data directly in g.axes_, because it does not belong to us\n  // and could change out from under us during a pan (say if there's a data\n  // update).\n  context.is2DPan = false;\n  context.axes = [];\n  for (i = 0; i < g.axes_.length; i++) {\n    axis = g.axes_[i];\n    var axis_data = {};\n    var yRange = g.yAxisRange(i);\n    // TODO(konigsberg): These values should be in |context|.\n    // In log scale, initialTopValue, dragValueRange and unitsPerPixel are log scale.\n    var logscale = g.attributes_.getForAxis(\"logscale\", i);\n    if (logscale) {\n      axis_data.initialTopValue = utils.log10(yRange[1]);\n      axis_data.dragValueRange = utils.log10(yRange[1]) - utils.log10(yRange[0]);\n    } else {\n      axis_data.initialTopValue = yRange[1];\n      axis_data.dragValueRange = yRange[1] - yRange[0];\n    }\n    axis_data.unitsPerPixel = axis_data.dragValueRange / (g.plotter_.area.h - 1);\n    context.axes.push(axis_data);\n\n    // While calculating axes, set 2dpan.\n    if (axis.valueRange) context.is2DPan = true;\n  }\n};\n\n/**\n * Called in response to an interaction model operation that\n * responds to an event that pans the view.\n *\n * It's used in the default callback for \"mousemove\" operations.\n * Custom interaction model builders can use it to provide the default\n * panning behavior.\n *\n * @param {Event} event the event object which led to the movePan call.\n * @param {Dygraph} g The dygraph on which to act.\n * @param {Object} context The dragging context object (with\n *     dragStartX/dragStartY/etc. properties). This function modifies the\n *     context.\n */\nDygraphInteraction.movePan = function(event, g, context) {\n  context.dragEndX = utils.dragGetX_(event, context);\n  context.dragEndY = utils.dragGetY_(event, context);\n\n  var minDate = context.initialLeftmostDate -\n    (context.dragEndX - context.dragStartX) * context.xUnitsPerPixel;\n  if (context.boundedDates) {\n    minDate = Math.max(minDate, context.boundedDates[0]);\n  }\n  var maxDate = minDate + context.dateRange;\n  if (context.boundedDates) {\n    if (maxDate > context.boundedDates[1]) {\n      // Adjust minDate, and recompute maxDate.\n      minDate = minDate - (maxDate - context.boundedDates[1]);\n      maxDate = minDate + context.dateRange;\n    }\n  }\n\n  if (g.getOptionForAxis(\"logscale\", \"x\")) {\n    g.dateWindow_ = [ Math.pow(utils.LOG_SCALE, minDate),\n                      Math.pow(utils.LOG_SCALE, maxDate) ];\n  } else {\n    g.dateWindow_ = [minDate, maxDate];\n  }\n\n  // y-axis scaling is automatic unless this is a full 2D pan.\n  if (context.is2DPan) {\n\n    var pixelsDragged = context.dragEndY - context.dragStartY;\n\n    // Adjust each axis appropriately.\n    for (var i = 0; i < g.axes_.length; i++) {\n      var axis = g.axes_[i];\n      var axis_data = context.axes[i];\n      var unitsDragged = pixelsDragged * axis_data.unitsPerPixel;\n\n      var boundedValue = context.boundedValues ? context.boundedValues[i] : null;\n\n      // In log scale, maxValue and minValue are the logs of those values.\n      var maxValue = axis_data.initialTopValue + unitsDragged;\n      if (boundedValue) {\n        maxValue = Math.min(maxValue, boundedValue[1]);\n      }\n      var minValue = maxValue - axis_data.dragValueRange;\n      if (boundedValue) {\n        if (minValue < boundedValue[0]) {\n          // Adjust maxValue, and recompute minValue.\n          maxValue = maxValue - (minValue - boundedValue[0]);\n          minValue = maxValue - axis_data.dragValueRange;\n        }\n      }\n      if (g.attributes_.getForAxis(\"logscale\", i)) {\n        axis.valueRange = [ Math.pow(utils.LOG_SCALE, minValue),\n                            Math.pow(utils.LOG_SCALE, maxValue) ];\n      } else {\n        axis.valueRange = [ minValue, maxValue ];\n      }\n    }\n  }\n\n  g.drawGraph_(false);\n};\n\n/**\n * Called in response to an interaction model operation that\n * responds to an event that ends panning.\n *\n * It's used in the default callback for \"mouseup\" operations.\n * Custom interaction model builders can use it to provide the default\n * panning behavior.\n *\n * @param {Event} event the event object which led to the endPan call.\n * @param {Dygraph} g The dygraph on which to act.\n * @param {Object} context The dragging context object (with\n *     dragStartX/dragStartY/etc. properties). This function modifies the\n *     context.\n */\nDygraphInteraction.endPan = DygraphInteraction.maybeTreatMouseOpAsClick;\n\n/**\n * Called in response to an interaction model operation that\n * responds to an event that starts zooming.\n *\n * It's used in the default callback for \"mousedown\" operations.\n * Custom interaction model builders can use it to provide the default\n * zooming behavior.\n *\n * @param {Event} event the event object which led to the startZoom call.\n * @param {Dygraph} g The dygraph on which to act.\n * @param {Object} context The dragging context object (with\n *     dragStartX/dragStartY/etc. properties). This function modifies the\n *     context.\n */\nDygraphInteraction.startZoom = function(event, g, context) {\n  context.isZooming = true;\n  context.zoomMoved = false;\n};\n\n/**\n * Called in response to an interaction model operation that\n * responds to an event that defines zoom boundaries.\n *\n * It's used in the default callback for \"mousemove\" operations.\n * Custom interaction model builders can use it to provide the default\n * zooming behavior.\n *\n * @param {Event} event the event object which led to the moveZoom call.\n * @param {Dygraph} g The dygraph on which to act.\n * @param {Object} context The dragging context object (with\n *     dragStartX/dragStartY/etc. properties). This function modifies the\n *     context.\n */\nDygraphInteraction.moveZoom = function(event, g, context) {\n  context.zoomMoved = true;\n  context.dragEndX = utils.dragGetX_(event, context);\n  context.dragEndY = utils.dragGetY_(event, context);\n\n  var xDelta = Math.abs(context.dragStartX - context.dragEndX);\n  var yDelta = Math.abs(context.dragStartY - context.dragEndY);\n\n  // drag direction threshold for y axis is twice as large as x axis\n  context.dragDirection = (xDelta < yDelta / 2) ? utils.VERTICAL : utils.HORIZONTAL;\n\n  g.drawZoomRect_(\n      context.dragDirection,\n      context.dragStartX,\n      context.dragEndX,\n      context.dragStartY,\n      context.dragEndY,\n      context.prevDragDirection,\n      context.prevEndX,\n      context.prevEndY);\n\n  context.prevEndX = context.dragEndX;\n  context.prevEndY = context.dragEndY;\n  context.prevDragDirection = context.dragDirection;\n};\n\n/**\n * TODO(danvk): move this logic into dygraph.js\n * @param {Dygraph} g\n * @param {Event} event\n * @param {Object} context\n */\nDygraphInteraction.treatMouseOpAsClick = function(g, event, context) {\n  var clickCallback = g.getFunctionOption('clickCallback');\n  var pointClickCallback = g.getFunctionOption('pointClickCallback');\n\n  var selectedPoint = null;\n\n  // Find out if the click occurs on a point.\n  var closestIdx = -1;\n  var closestDistance = Number.MAX_VALUE;\n\n  // check if the click was on a particular point.\n  for (var i = 0; i < g.selPoints_.length; i++) {\n    var p = g.selPoints_[i];\n    var distance = Math.pow(p.canvasx - context.dragEndX, 2) +\n                   Math.pow(p.canvasy - context.dragEndY, 2);\n    if (!isNaN(distance) &&\n        (closestIdx == -1 || distance < closestDistance)) {\n      closestDistance = distance;\n      closestIdx = i;\n    }\n  }\n\n  // Allow any click within two pixels of the dot.\n  var radius = g.getNumericOption('highlightCircleSize') + 2;\n  if (closestDistance <= radius * radius) {\n    selectedPoint = g.selPoints_[closestIdx];\n  }\n\n  if (selectedPoint) {\n    var e = {\n      cancelable: true,\n      point: selectedPoint,\n      canvasx: context.dragEndX,\n      canvasy: context.dragEndY\n    };\n    var defaultPrevented = g.cascadeEvents_('pointClick', e);\n    if (defaultPrevented) {\n      // Note: this also prevents click / clickCallback from firing.\n      return;\n    }\n    if (pointClickCallback) {\n      pointClickCallback.call(g, event, selectedPoint);\n    }\n  }\n\n  var e = {\n    cancelable: true,\n    xval: g.lastx_,  // closest point by x value\n    pts: g.selPoints_,\n    canvasx: context.dragEndX,\n    canvasy: context.dragEndY\n  };\n  if (!g.cascadeEvents_('click', e)) {\n    if (clickCallback) {\n      // TODO(danvk): pass along more info about the points, e.g. 'x'\n      clickCallback.call(g, event, g.lastx_, g.selPoints_);\n    }\n  }\n};\n\n/**\n * Called in response to an interaction model operation that\n * responds to an event that performs a zoom based on previously defined\n * bounds..\n *\n * It's used in the default callback for \"mouseup\" operations.\n * Custom interaction model builders can use it to provide the default\n * zooming behavior.\n *\n * @param {Event} event the event object which led to the endZoom call.\n * @param {Dygraph} g The dygraph on which to end the zoom.\n * @param {Object} context The dragging context object (with\n *     dragStartX/dragStartY/etc. properties). This function modifies the\n *     context.\n */\nDygraphInteraction.endZoom = function(event, g, context) {\n  g.clearZoomRect_();\n  context.isZooming = false;\n  DygraphInteraction.maybeTreatMouseOpAsClick(event, g, context);\n\n  // The zoom rectangle is visibly clipped to the plot area, so its behavior\n  // should be as well.\n  // See http://code.google.com/p/dygraphs/issues/detail?id=280\n  var plotArea = g.getArea();\n  if (context.regionWidth >= 10 &&\n      context.dragDirection == utils.HORIZONTAL) {\n    var left = Math.min(context.dragStartX, context.dragEndX),\n        right = Math.max(context.dragStartX, context.dragEndX);\n    left = Math.max(left, plotArea.x);\n    right = Math.min(right, plotArea.x + plotArea.w);\n    if (left < right) {\n      g.doZoomX_(left, right);\n    }\n    context.cancelNextDblclick = true;\n  } else if (context.regionHeight >= 10 &&\n             context.dragDirection == utils.VERTICAL) {\n    var top = Math.min(context.dragStartY, context.dragEndY),\n        bottom = Math.max(context.dragStartY, context.dragEndY);\n    top = Math.max(top, plotArea.y);\n    bottom = Math.min(bottom, plotArea.y + plotArea.h);\n    if (top < bottom) {\n      g.doZoomY_(top, bottom);\n    }\n    context.cancelNextDblclick = true;\n  }\n  context.dragStartX = null;\n  context.dragStartY = null;\n};\n\n/**\n * @private\n */\nDygraphInteraction.startTouch = function(event, g, context) {\n  event.preventDefault();  // touch browsers are all nice.\n  if (event.touches.length > 1) {\n    // If the user ever puts two fingers down, it's not a double tap.\n    context.startTimeForDoubleTapMs = null;\n  }\n\n  var touches = [];\n  for (var i = 0; i < event.touches.length; i++) {\n    var t = event.touches[i];\n    var rect = t.target.getBoundingClientRect()\n    // we dispense with 'dragGetX_' because all touchBrowsers support pageX\n    touches.push({\n      pageX: t.pageX,\n      pageY: t.pageY,\n      dataX: g.toDataXCoord(t.clientX - rect.left),\n      dataY: g.toDataYCoord(t.clientY - rect.top)\n      // identifier: t.identifier\n    });\n  }\n  context.initialTouches = touches;\n\n  if (touches.length == 1) {\n    // This is just a swipe.\n    context.initialPinchCenter = touches[0];\n    context.touchDirections = { x: true, y: true };\n  } else if (touches.length >= 2) {\n    // It's become a pinch!\n    // In case there are 3+ touches, we ignore all but the \"first\" two.\n\n    // only screen coordinates can be averaged (data coords could be log scale).\n    context.initialPinchCenter = {\n      pageX: 0.5 * (touches[0].pageX + touches[1].pageX),\n      pageY: 0.5 * (touches[0].pageY + touches[1].pageY),\n\n      // TODO(danvk): remove\n      dataX: 0.5 * (touches[0].dataX + touches[1].dataX),\n      dataY: 0.5 * (touches[0].dataY + touches[1].dataY)\n    };\n\n    // Make pinches in a 45-degree swath around either axis 1-dimensional zooms.\n    var initialAngle = 180 / Math.PI * Math.atan2(\n        context.initialPinchCenter.pageY - touches[0].pageY,\n        touches[0].pageX - context.initialPinchCenter.pageX);\n\n    // use symmetry to get it into the first quadrant.\n    initialAngle = Math.abs(initialAngle);\n    if (initialAngle > 90) initialAngle = 90 - initialAngle;\n\n    context.touchDirections = {\n      x: (initialAngle < (90 - 45/2)),\n      y: (initialAngle > 45/2)\n    };\n  }\n\n  // save the full x & y ranges.\n  context.initialRange = {\n    x: g.xAxisRange(),\n    y: g.yAxisRange()\n  };\n};\n\n/**\n * @private\n */\nDygraphInteraction.moveTouch = function(event, g, context) {\n  // If the tap moves, then it's definitely not part of a double-tap.\n  context.startTimeForDoubleTapMs = null;\n\n  var i, touches = [];\n  for (i = 0; i < event.touches.length; i++) {\n    var t = event.touches[i];\n    touches.push({\n      pageX: t.pageX,\n      pageY: t.pageY\n    });\n  }\n  var initialTouches = context.initialTouches;\n\n  var c_now;\n\n  // old and new centers.\n  var c_init = context.initialPinchCenter;\n  if (touches.length == 1) {\n    c_now = touches[0];\n  } else {\n    c_now = {\n      pageX: 0.5 * (touches[0].pageX + touches[1].pageX),\n      pageY: 0.5 * (touches[0].pageY + touches[1].pageY)\n    };\n  }\n\n  // this is the \"swipe\" component\n  // we toss it out for now, but could use it in the future.\n  var swipe = {\n    pageX: c_now.pageX - c_init.pageX,\n    pageY: c_now.pageY - c_init.pageY\n  };\n  var dataWidth = context.initialRange.x[1] - context.initialRange.x[0];\n  var dataHeight = context.initialRange.y[0] - context.initialRange.y[1];\n  swipe.dataX = (swipe.pageX / g.plotter_.area.w) * dataWidth;\n  swipe.dataY = (swipe.pageY / g.plotter_.area.h) * dataHeight;\n  var xScale, yScale;\n\n  // The residual bits are usually split into scale & rotate bits, but we split\n  // them into x-scale and y-scale bits.\n  if (touches.length == 1) {\n    xScale = 1.0;\n    yScale = 1.0;\n  } else if (touches.length >= 2) {\n    var initHalfWidth = (initialTouches[1].pageX - c_init.pageX);\n    xScale = (touches[1].pageX - c_now.pageX) / initHalfWidth;\n\n    var initHalfHeight = (initialTouches[1].pageY - c_init.pageY);\n    yScale = (touches[1].pageY - c_now.pageY) / initHalfHeight;\n  }\n\n  // Clip scaling to [1/8, 8] to prevent too much blowup.\n  xScale = Math.min(8, Math.max(0.125, xScale));\n  yScale = Math.min(8, Math.max(0.125, yScale));\n\n  var didZoom = false;\n  if (context.touchDirections.x) {\n    var cFactor = c_init.dataX - swipe.dataX / xScale;\n    g.dateWindow_ = [\n      cFactor + (context.initialRange.x[0] - c_init.dataX) / xScale,\n      cFactor + (context.initialRange.x[1] - c_init.dataX) / xScale\n    ];\n    didZoom = true;\n  }\n\n  if (context.touchDirections.y) {\n    for (i = 0; i < 1  /*g.axes_.length*/; i++) {\n      var axis = g.axes_[i];\n      var logscale = g.attributes_.getForAxis(\"logscale\", i);\n      if (logscale) {\n        // TODO(danvk): implement\n      } else {\n        var cFactor = c_init.dataY - swipe.dataY / yScale;\n        axis.valueRange = [\n          cFactor + (context.initialRange.y[0] - c_init.dataY) / yScale,\n          cFactor + (context.initialRange.y[1] - c_init.dataY) / yScale\n        ];\n        didZoom = true;\n      }\n    }\n  }\n\n  g.drawGraph_(false);\n\n  // We only call zoomCallback on zooms, not pans, to mirror desktop behavior.\n  if (didZoom && touches.length > 1 && g.getFunctionOption('zoomCallback')) {\n    var viewWindow = g.xAxisRange();\n    g.getFunctionOption(\"zoomCallback\").call(g, viewWindow[0], viewWindow[1], g.yAxisRanges());\n  }\n};\n\n/**\n * @private\n */\nDygraphInteraction.endTouch = function(event, g, context) {\n  if (event.touches.length !== 0) {\n    // this is effectively a \"reset\"\n    DygraphInteraction.startTouch(event, g, context);\n  } else if (event.changedTouches.length == 1) {\n    // Could be part of a \"double tap\"\n    // The heuristic here is that it's a double-tap if the two touchend events\n    // occur within 500ms and within a 50x50 pixel box.\n    var now = new Date().getTime();\n    var t = event.changedTouches[0];\n    if (context.startTimeForDoubleTapMs &&\n        now - context.startTimeForDoubleTapMs < 500 &&\n        context.doubleTapX && Math.abs(context.doubleTapX - t.screenX) < 50 &&\n        context.doubleTapY && Math.abs(context.doubleTapY - t.screenY) < 50) {\n      g.resetZoom();\n    } else {\n      context.startTimeForDoubleTapMs = now;\n      context.doubleTapX = t.screenX;\n      context.doubleTapY = t.screenY;\n    }\n  }\n};\n\n// Determine the distance from x to [left, right].\nvar distanceFromInterval = function(x, left, right) {\n  if (x < left) {\n    return left - x;\n  } else if (x > right) {\n    return x - right;\n  } else {\n    return 0;\n  }\n};\n\n/**\n * Returns the number of pixels by which the event happens from the nearest\n * edge of the chart. For events in the interior of the chart, this returns zero.\n */\nvar distanceFromChart = function(event, g) {\n  var chartPos = utils.findPos(g.canvas_);\n  var box = {\n    left: chartPos.x,\n    right: chartPos.x + g.canvas_.offsetWidth,\n    top: chartPos.y,\n    bottom: chartPos.y + g.canvas_.offsetHeight\n  };\n\n  var pt = {\n    x: utils.pageX(event),\n    y: utils.pageY(event)\n  };\n\n  var dx = distanceFromInterval(pt.x, box.left, box.right),\n      dy = distanceFromInterval(pt.y, box.top, box.bottom);\n  return Math.max(dx, dy);\n};\n\n/**\n * Default interation model for dygraphs. You can refer to specific elements of\n * this when constructing your own interaction model, e.g.:\n * g.updateOptions( {\n *   interactionModel: {\n *     mousedown: DygraphInteraction.defaultInteractionModel.mousedown\n *   }\n * } );\n */\nDygraphInteraction.defaultModel = {\n  // Track the beginning of drag events\n  mousedown: function(event, g, context) {\n    // Right-click should not initiate a zoom.\n    if (event.button && event.button == 2) return;\n\n    context.initializeMouseDown(event, g, context);\n\n    if (event.altKey || event.shiftKey) {\n      DygraphInteraction.startPan(event, g, context);\n    } else {\n      DygraphInteraction.startZoom(event, g, context);\n    }\n\n    // Note: we register mousemove/mouseup on document to allow some leeway for\n    // events to move outside of the chart. Interaction model events get\n    // registered on the canvas, which is too small to allow this.\n    var mousemove = function(event) {\n      if (context.isZooming) {\n        // When the mouse moves >200px from the chart edge, cancel the zoom.\n        var d = distanceFromChart(event, g);\n        if (d < DRAG_EDGE_MARGIN) {\n          DygraphInteraction.moveZoom(event, g, context);\n        } else {\n          if (context.dragEndX !== null) {\n            context.dragEndX = null;\n            context.dragEndY = null;\n            g.clearZoomRect_();\n          }\n        }\n      } else if (context.isPanning) {\n        DygraphInteraction.movePan(event, g, context);\n      }\n    };\n    var mouseup = function(event) {\n      if (context.isZooming) {\n        if (context.dragEndX !== null) {\n          DygraphInteraction.endZoom(event, g, context);\n        } else {\n          DygraphInteraction.maybeTreatMouseOpAsClick(event, g, context);\n        }\n      } else if (context.isPanning) {\n        DygraphInteraction.endPan(event, g, context);\n      }\n\n      utils.removeEvent(document, 'mousemove', mousemove);\n      utils.removeEvent(document, 'mouseup', mouseup);\n      context.destroy();\n    };\n\n    g.addAndTrackEvent(document, 'mousemove', mousemove);\n    g.addAndTrackEvent(document, 'mouseup', mouseup);\n  },\n  willDestroyContextMyself: true,\n\n  touchstart: function(event, g, context) {\n    DygraphInteraction.startTouch(event, g, context);\n  },\n  touchmove: function(event, g, context) {\n    DygraphInteraction.moveTouch(event, g, context);\n  },\n  touchend: function(event, g, context) {\n    DygraphInteraction.endTouch(event, g, context);\n  },\n\n  // Disable zooming out if panning.\n  dblclick: function(event, g, context) {\n    if (context.cancelNextDblclick) {\n      context.cancelNextDblclick = false;\n      return;\n    }\n\n    // Give plugins a chance to grab this event.\n    var e = {\n      canvasx: context.dragEndX,\n      canvasy: context.dragEndY,\n      cancelable: true,\n    };\n    if (g.cascadeEvents_('dblclick', e)) {\n      return;\n    }\n\n    if (event.altKey || event.shiftKey) {\n      return;\n    }\n    g.resetZoom();\n  }\n};\n\n/*\nDygraph.DEFAULT_ATTRS.interactionModel = DygraphInteraction.defaultModel;\n\n// old ways of accessing these methods/properties\nDygraph.defaultInteractionModel = DygraphInteraction.defaultModel;\nDygraph.endZoom = DygraphInteraction.endZoom;\nDygraph.moveZoom = DygraphInteraction.moveZoom;\nDygraph.startZoom = DygraphInteraction.startZoom;\nDygraph.endPan = DygraphInteraction.endPan;\nDygraph.movePan = DygraphInteraction.movePan;\nDygraph.startPan = DygraphInteraction.startPan;\n*/\n\nDygraphInteraction.nonInteractiveModel_ = {\n  mousedown: function(event, g, context) {\n    context.initializeMouseDown(event, g, context);\n  },\n  mouseup: DygraphInteraction.maybeTreatMouseOpAsClick\n};\n\n// Default interaction model when using the range selector.\nDygraphInteraction.dragIsPanInteractionModel = {\n  mousedown: function(event, g, context) {\n    context.initializeMouseDown(event, g, context);\n    DygraphInteraction.startPan(event, g, context);\n  },\n  mousemove: function(event, g, context) {\n    if (context.isPanning) {\n      DygraphInteraction.movePan(event, g, context);\n    }\n  },\n  mouseup: function(event, g, context) {\n    if (context.isPanning) {\n      DygraphInteraction.endPan(event, g, context);\n    }\n  }\n};\n\nexport default DygraphInteraction;\n","'use strict'\n\nimport * as DygraphTickers from './dygraph-tickers';\nimport DygraphInteraction from './dygraph-interaction-model';\nimport DygraphCanvasRenderer from './dygraph-canvas';\nimport * as utils from './dygraph-utils';\n\n// Default attribute values.\nvar DEFAULT_ATTRS = {\n  highlightCircleSize: 3,\n  highlightSeriesOpts: null,\n  highlightSeriesBackgroundAlpha: 0.5,\n  highlightSeriesBackgroundColor: 'rgb(255, 255, 255)',\n\n  labelsSeparateLines: false,\n  labelsShowZeroValues: true,\n  labelsKMB: false,\n  labelsKMG2: false,\n  showLabelsOnHighlight: true,\n\n  digitsAfterDecimal: 2,\n  maxNumberWidth: 6,\n  sigFigs: null,\n\n  strokeWidth: 1.0,\n  strokeBorderWidth: 0,\n  strokeBorderColor: \"white\",\n\n  axisTickSize: 3,\n  axisLabelFontSize: 14,\n  rightGap: 5,\n\n  showRoller: false,\n  xValueParser: undefined,\n\n  delimiter: ',',\n\n  sigma: 2.0,\n  errorBars: false,\n  fractions: false,\n  wilsonInterval: true,  // only relevant if fractions is true\n  customBars: false,\n  fillGraph: false,\n  fillAlpha: 0.15,\n  connectSeparatedPoints: false,\n\n  stackedGraph: false,\n  stackedGraphNaNFill: 'all',\n  hideOverlayOnMouseOut: true,\n  resizable: 'no',\n\n  legend: 'onmouseover',\n  legendFollowOffsetX: 50,\n  legendFollowOffsetY: -50,\n  stepPlot: false,\n  xRangePad: 0,\n  yRangePad: null,\n  drawAxesAtZero: false,\n\n  // Sizes of the various chart labels.\n  titleHeight: 28,\n  xLabelHeight: 18,\n  yLabelWidth: 18,\n\n  axisLineColor: \"black\",\n  axisLineWidth: 0.3,\n  gridLineWidth: 0.3,\n  axisLabelWidth: 50,\n  gridLineColor: \"rgb(128,128,128)\",\n\n  interactionModel: DygraphInteraction.defaultModel,\n  animatedZooms: false,  // (for now)\n  animateBackgroundFade: true,\n\n  // Range selector options\n  showRangeSelector: false,\n  rangeSelectorHeight: 40,\n  rangeSelectorPlotStrokeColor: \"#808FAB\",\n  rangeSelectorPlotFillGradientColor: \"white\",\n  rangeSelectorPlotFillColor: \"#A7B1C4\",\n  rangeSelectorBackgroundStrokeColor: \"gray\",\n  rangeSelectorBackgroundLineWidth: 1,\n  rangeSelectorPlotLineWidth:1.5,\n  rangeSelectorForegroundStrokeColor: \"black\",\n  rangeSelectorForegroundLineWidth: 1,\n  rangeSelectorAlpha: 0.6,\n  showInRangeSelector: null,\n\n  // The ordering here ensures that central lines always appear above any\n  // fill bars/error bars.\n  plotter: [\n    DygraphCanvasRenderer._fillPlotter,\n    DygraphCanvasRenderer._errorPlotter,\n    DygraphCanvasRenderer._linePlotter\n  ],\n\n  plugins: [ ],\n\n  // per-axis options\n  axes: {\n    x: {\n      pixelsPerLabel: 70,\n      axisLabelWidth: 60,\n      axisLabelFormatter: utils.dateAxisLabelFormatter,\n      valueFormatter: utils.dateValueFormatter,\n      drawGrid: true,\n      drawAxis: true,\n      independentTicks: true,\n      ticker: DygraphTickers.dateTicker\n    },\n    y: {\n      axisLabelWidth: 50,\n      pixelsPerLabel: 30,\n      valueFormatter: utils.numberValueFormatter,\n      axisLabelFormatter: utils.numberAxisLabelFormatter,\n      drawGrid: true,\n      drawAxis: true,\n      independentTicks: true,\n      ticker: DygraphTickers.numericTicks\n    },\n    y2: {\n      axisLabelWidth: 50,\n      pixelsPerLabel: 30,\n      valueFormatter: utils.numberValueFormatter,\n      axisLabelFormatter: utils.numberAxisLabelFormatter,\n      drawAxis: true,  // only applies when there are two axes of data.\n      drawGrid: false,\n      independentTicks: false,\n      ticker: DygraphTickers.numericTicks\n    }\n  }\n};\n\nexport default DEFAULT_ATTRS;\n","/**\n * @license\n * Copyright 2011 Dan Vanderkam (danvdk@gmail.com)\n * MIT-licenced: https://opensource.org/licenses/MIT\n */\n\n/**\n * @fileoverview DygraphOptions is responsible for parsing and returning\n * information about options.\n */\n\n// TODO: remove this jshint directive & fix the warnings.\n/*jshint sub:true */\n\"use strict\";\n\nimport * as utils from './dygraph-utils';\nimport DEFAULT_ATTRS from './dygraph-default-attrs';\nimport OPTIONS_REFERENCE from './dygraph-options-reference';\n\n/*\n * Interesting member variables: (REMOVING THIS LIST AS I CLOSURIZE)\n * global_ - global attributes (common among all graphs, AIUI)\n * user - attributes set by the user\n * series_ - { seriesName -> { idx, yAxis, options }}\n */\n\n/**\n * This parses attributes into an object that can be easily queried.\n *\n * It doesn't necessarily mean that all options are available, specifically\n * if labels are not yet available, since those drive details of the per-series\n * and per-axis options.\n *\n * @param {Dygraph} dygraph The chart to which these options belong.\n * @constructor\n */\nvar DygraphOptions = function(dygraph) {\n  /**\n   * The dygraph.\n   * @type {!Dygraph}\n   */\n  this.dygraph_ = dygraph;\n\n  /**\n   * Array of axis index to { series : [ series names ] , options : { axis-specific options. } }\n   * @type {Array.<{series : Array.<string>, options : Object}>} @private\n   */\n  this.yAxes_ = [];\n\n  /**\n   * Contains x-axis specific options, which are stored in the options key.\n   * This matches the yAxes_ object structure (by being a dictionary with an\n   * options element) allowing for shared code.\n   * @type {options: Object} @private\n   */\n  this.xAxis_ = {};\n  this.series_ = {};\n\n  // Once these two objects are initialized, you can call get();\n  this.global_ = this.dygraph_.attrs_;\n  this.user_ = this.dygraph_.user_attrs_ || {};\n\n  /**\n   * A list of series in columnar order.\n   * @type {Array.<string>}\n   */\n  this.labels_ = [];\n\n  this.highlightSeries_ = this.get(\"highlightSeriesOpts\") || {};\n  this.reparseSeries();\n};\n\n/**\n * Not optimal, but does the trick when you're only using two axes.\n * If we move to more axes, this can just become a function.\n *\n * @type {Object.<number>}\n * @private\n */\nDygraphOptions.AXIS_STRING_MAPPINGS_ = {\n  'y' : 0,\n  'Y' : 0,\n  'y1' : 0,\n  'Y1' : 0,\n  'y2' : 1,\n  'Y2' : 1\n};\n\n/**\n * @param {string|number} axis\n * @private\n */\nDygraphOptions.axisToIndex_ = function(axis) {\n  if (typeof(axis) == \"string\") {\n    if (DygraphOptions.AXIS_STRING_MAPPINGS_.hasOwnProperty(axis)) {\n      return DygraphOptions.AXIS_STRING_MAPPINGS_[axis];\n    }\n    throw \"Unknown axis : \" + axis;\n  }\n  if (typeof(axis) == \"number\") {\n    if (axis === 0 || axis === 1) {\n      return axis;\n    }\n    throw \"Dygraphs only supports two y-axes, indexed from 0-1.\";\n  }\n  if (axis) {\n    throw \"Unknown axis : \" + axis;\n  }\n  // No axis specification means axis 0.\n  return 0;\n};\n\n/**\n * Reparses options that are all related to series. This typically occurs when\n * options are either updated, or source data has been made available.\n *\n * TODO(konigsberg): The method name is kind of weak; fix.\n */\nDygraphOptions.prototype.reparseSeries = function() {\n  var labels = this.get(\"labels\");\n  if (!labels) {\n    return; // -- can't do more for now, will parse after getting the labels.\n  }\n\n  this.labels_ = labels.slice(1);\n\n  this.yAxes_ = [ { series : [], options : {}} ]; // Always one axis at least.\n  this.xAxis_ = { options : {} };\n  this.series_ = {};\n\n  // Series are specified in the series element:\n  //\n  // {\n  //   labels: [ \"X\", \"foo\", \"bar\" ],\n  //   pointSize: 3,\n  //   series : {\n  //     foo : {}, // options for foo\n  //     bar : {} // options for bar\n  //   }\n  // }\n  //\n  // So, if series is found, it's expected to contain per-series data,\n  // otherwise set a default.\n  var seriesDict = this.user_.series || {};\n  for (var idx = 0; idx < this.labels_.length; idx++) {\n    var seriesName = this.labels_[idx];\n    var optionsForSeries = seriesDict[seriesName] || {};\n    var yAxis = DygraphOptions.axisToIndex_(optionsForSeries[\"axis\"]);\n\n    this.series_[seriesName] = {\n      idx: idx,\n      yAxis: yAxis,\n      options : optionsForSeries };\n\n    if (!this.yAxes_[yAxis]) {\n      this.yAxes_[yAxis] =  { series : [ seriesName ], options : {} };\n    } else {\n      this.yAxes_[yAxis].series.push(seriesName);\n    }\n  }\n\n  var axis_opts = this.user_[\"axes\"] || {};\n  utils.update(this.yAxes_[0].options, axis_opts[\"y\"] || {});\n  if (this.yAxes_.length > 1) {\n    utils.update(this.yAxes_[1].options, axis_opts[\"y2\"] || {});\n  }\n  utils.update(this.xAxis_.options, axis_opts[\"x\"] || {});\n\n  if (typeof process !== 'undefined' && process.env.NODE_ENV != 'production') {\n  // For \"production\" code, this gets removed by uglifyjs.\n    this.validateOptions_();\n  }\n};\n\n/**\n * Get a global value.\n *\n * @param {string} name the name of the option.\n */\nDygraphOptions.prototype.get = function(name) {\n  var result = this.getGlobalUser_(name);\n  if (result !== null) {\n    return result;\n  }\n  return this.getGlobalDefault_(name);\n};\n\nDygraphOptions.prototype.getGlobalUser_ = function(name) {\n  if (this.user_.hasOwnProperty(name)) {\n    return this.user_[name];\n  }\n  return null;\n};\n\nDygraphOptions.prototype.getGlobalDefault_ = function(name) {\n  if (this.global_.hasOwnProperty(name)) {\n    return this.global_[name];\n  }\n  if (DEFAULT_ATTRS.hasOwnProperty(name)) {\n    return DEFAULT_ATTRS[name];\n  }\n  return null;\n};\n\n/**\n * Get a value for a specific axis. If there is no specific value for the axis,\n * the global value is returned.\n *\n * @param {string} name the name of the option.\n * @param {string|number} axis the axis to search. Can be the string representation\n * (\"y\", \"y2\") or the axis number (0, 1).\n */\nDygraphOptions.prototype.getForAxis = function(name, axis) {\n  var axisIdx;\n  var axisString;\n\n  // Since axis can be a number or a string, straighten everything out here.\n  if (typeof(axis) == 'number') {\n    axisIdx = axis;\n    axisString = axisIdx === 0 ? \"y\" : \"y2\";\n  } else {\n    if (axis == \"y1\") { axis = \"y\"; } // Standardize on 'y'. Is this bad? I think so.\n    if (axis == \"y\") {\n      axisIdx = 0;\n    } else if (axis == \"y2\") {\n      axisIdx = 1;\n    } else if (axis == \"x\") {\n      axisIdx = -1; // simply a placeholder for below.\n    } else {\n      throw \"Unknown axis \" + axis;\n    }\n    axisString = axis;\n  }\n\n  var userAxis = (axisIdx == -1) ? this.xAxis_ : this.yAxes_[axisIdx];\n\n  // Search the user-specified axis option first.\n  if (userAxis) { // This condition could be removed if we always set up this.yAxes_ for y2.\n    var axisOptions = userAxis.options;\n    if (axisOptions.hasOwnProperty(name)) {\n      return axisOptions[name];\n    }\n  }\n\n  // User-specified global options second.\n  // But, hack, ignore globally-specified 'logscale' for 'x' axis declaration.\n  if (!(axis === 'x' && name === 'logscale')) {\n    var result = this.getGlobalUser_(name);\n    if (result !== null) {\n      return result;\n    }\n  }\n  // Default axis options third.\n  var defaultAxisOptions = DEFAULT_ATTRS.axes[axisString];\n  if (defaultAxisOptions.hasOwnProperty(name)) {\n    return defaultAxisOptions[name];\n  }\n\n  // Default global options last.\n  return this.getGlobalDefault_(name);\n};\n\n/**\n * Get a value for a specific series. If there is no specific value for the series,\n * the value for the axis is returned (and afterwards, the global value.)\n *\n * @param {string} name the name of the option.\n * @param {string} series the series to search.\n */\nDygraphOptions.prototype.getForSeries = function(name, series) {\n  // Honors indexes as series.\n  if (series === this.dygraph_.getHighlightSeries()) {\n    if (this.highlightSeries_.hasOwnProperty(name)) {\n      return this.highlightSeries_[name];\n    }\n  }\n\n  if (!this.series_.hasOwnProperty(series)) {\n    throw \"Unknown series: \" + series;\n  }\n\n  var seriesObj = this.series_[series];\n  var seriesOptions = seriesObj[\"options\"];\n  if (seriesOptions.hasOwnProperty(name)) {\n    return seriesOptions[name];\n  }\n\n  return this.getForAxis(name, seriesObj[\"yAxis\"]);\n};\n\n/**\n * Returns the number of y-axes on the chart.\n * @return {number} the number of axes.\n */\nDygraphOptions.prototype.numAxes = function() {\n  return this.yAxes_.length;\n};\n\n/**\n * Return the y-axis for a given series, specified by name.\n */\nDygraphOptions.prototype.axisForSeries = function(series) {\n  return this.series_[series].yAxis;\n};\n\n/**\n * Returns the options for the specified axis.\n */\n// TODO(konigsberg): this is y-axis specific. Support the x axis.\nDygraphOptions.prototype.axisOptions = function(yAxis) {\n  return this.yAxes_[yAxis].options;\n};\n\n/**\n * Return the series associated with an axis.\n */\nDygraphOptions.prototype.seriesForAxis = function(yAxis) {\n  return this.yAxes_[yAxis].series;\n};\n\n/**\n * Return the list of all series, in their columnar order.\n */\nDygraphOptions.prototype.seriesNames = function() {\n  return this.labels_;\n};\n\nif (typeof process !== 'undefined' && process.env.NODE_ENV != 'production') {\n// For \"production\" code, this gets removed by uglifyjs.\n\n/**\n * Validate all options.\n * This requires OPTIONS_REFERENCE, which is only available in debug builds.\n * @private\n */\nDygraphOptions.prototype.validateOptions_ = function() {\n  if (typeof OPTIONS_REFERENCE === 'undefined') {\n    throw 'Called validateOptions_ in prod build.';\n  }\n\n  var that = this;\n  var validateOption = function(optionName) {\n    if (!OPTIONS_REFERENCE[optionName]) {\n      that.warnInvalidOption_(optionName);\n    }\n  };\n\n  var optionsDicts = [this.xAxis_.options,\n                      this.yAxes_[0].options,\n                      this.yAxes_[1] && this.yAxes_[1].options,\n                      this.global_,\n                      this.user_,\n                      this.highlightSeries_];\n  var names = this.seriesNames();\n  for (var i = 0; i < names.length; i++) {\n    var name = names[i];\n    if (this.series_.hasOwnProperty(name)) {\n      optionsDicts.push(this.series_[name].options);\n    }\n  }\n  for (var i = 0; i < optionsDicts.length; i++) {\n    var dict = optionsDicts[i];\n    if (!dict) continue;\n    for (var optionName in dict) {\n      if (dict.hasOwnProperty(optionName)) {\n        validateOption(optionName);\n      }\n    }\n  }\n};\n\nvar WARNINGS = {};  // Only show any particular warning once.\n\n/**\n * Logs a warning about invalid options.\n * TODO: make this throw for testing\n * @private\n */\nDygraphOptions.prototype.warnInvalidOption_ = function(optionName) {\n  if (!WARNINGS[optionName]) {\n    WARNINGS[optionName] = true;\n    var isSeries = (this.labels_.indexOf(optionName) >= 0);\n    if (isSeries) {\n      console.warn('Use new-style per-series options (saw ' + optionName + ' as top-level options key). See http://blog.dygraphs.com/2012/12/the-new-and-better-way-to-specify.html (The New and Better Way to Specify Series and Axis Options).');\n    } else {\n      console.warn('Unknown option ' + optionName + ' (see https://dygraphs.com/options.html for the full list of options)');\n    }\n    throw \"invalid option \" + optionName;\n  }\n};\n\n// Reset list of previously-shown warnings. Used for testing.\nDygraphOptions.resetWarnings_ = function() {\n  WARNINGS = {};\n};\n\n}\n\nexport default DygraphOptions;\n","/**\n * To create a \"drag\" interaction, you typically register a mousedown event\n * handler on the element where the drag begins. In that handler, you register a\n * mouseup handler on the window to determine when the mouse is released,\n * wherever that release happens. This works well, except when the user releases\n * the mouse over an off-domain iframe. In that case, the mouseup event is\n * handled by the iframe and never bubbles up to the window handler.\n *\n * To deal with this issue, we cover iframes with high z-index divs to make sure\n * they don't capture mouseup.\n *\n * Usage:\n * element.addEventListener('mousedown', function() {\n *   var tarper = new IFrameTarp();\n *   tarper.cover();\n *   var mouseUpHandler = function() {\n *     ...\n *     window.removeEventListener(mouseUpHandler);\n *     tarper.uncover();\n *   };\n *   window.addEventListener('mouseup', mouseUpHandler);\n * });\n *\n * @constructor\n */\nimport * as utils from './dygraph-utils';\n\nfunction IFrameTarp() {\n  /** @type {Array.<!HTMLDivElement>} */\n  this.tarps = [];\n}\n\n/**\n * Find all the iframes in the document and cover them with high z-index\n * transparent divs.\n */\nIFrameTarp.prototype.cover = function() {\n  var iframes = document.getElementsByTagName(\"iframe\");\n  for (var i = 0; i < iframes.length; i++) {\n    var iframe = iframes[i];\n    var pos = utils.findPos(iframe),\n        x = pos.x,\n        y = pos.y,\n        width = iframe.offsetWidth,\n        height = iframe.offsetHeight;\n\n    var div = document.createElement(\"div\");\n    div.style.position = \"absolute\";\n    div.style.left = x + 'px';\n    div.style.top = y + 'px';\n    div.style.width = width + 'px';\n    div.style.height = height + 'px';\n    div.style.zIndex = 999;\n    document.body.appendChild(div);\n    this.tarps.push(div);\n  }\n};\n\n/**\n * Remove all the iframe covers. You should call this in a mouseup handler.\n */\nIFrameTarp.prototype.uncover = function() {\n  for (var i = 0; i < this.tarps.length; i++) {\n    this.tarps[i].parentNode.removeChild(this.tarps[i]);\n  }\n  this.tarps = [];\n};\n\nexport default IFrameTarp;\n","/**\n * @license\n * Copyright 2013 David Eberlein (david.eberlein@ch.sauter-bc.com)\n * MIT-licenced: https://opensource.org/licenses/MIT\n */\n\n/**\n * @fileoverview This file contains the managment of data handlers\n * @author David Eberlein (david.eberlein@ch.sauter-bc.com)\n *\n * The idea is to define a common, generic data format that works for all data\n * structures supported by dygraphs. To make this possible, the DataHandler\n * interface is introduced. This makes it possible, that dygraph itself can work\n * with the same logic for every data type independent of the actual format and\n * the DataHandler takes care of the data format specific jobs.\n * DataHandlers are implemented for all data types supported by Dygraphs and\n * return Dygraphs compliant formats.\n * By default the correct DataHandler is chosen based on the options set.\n * Optionally the user may use his own DataHandler (similar to the plugin\n * system).\n *\n *\n * The unified data format returend by each handler is defined as so:\n * series[n][point] = [x,y,(extras)]\n *\n * This format contains the common basis that is needed to draw a simple line\n * series extended by optional extras for more complex graphing types. It\n * contains a primitive x value as first array entry, a primitive y value as\n * second array entry and an optional extras object for additional data needed.\n *\n * x must always be a number.\n * y must always be a number, NaN of type number or null.\n * extras is optional and must be interpreted by the DataHandler. It may be of\n * any type.\n *\n * In practice this might look something like this:\n * default: [x, yVal]\n * errorBar / customBar: [x, yVal, [yTopVariance, yBottomVariance] ]\n *\n */\n/*global Dygraph:false */\n/*global DygraphLayout:false */\n\n\"use strict\";\n\n/**\n *\n * The data handler is responsible for all data specific operations. All of the\n * series data it receives and returns is always in the unified data format.\n * Initially the unified data is created by the extractSeries method\n * @constructor\n */\nvar DygraphDataHandler = function () {\n};\n\nvar handler = DygraphDataHandler;\n\n/**\n * X-value array index constant for unified data samples.\n * @const\n * @type {number}\n */\nhandler.X = 0;\n\n/**\n * Y-value array index constant for unified data samples.\n * @const\n * @type {number}\n */\nhandler.Y = 1;\n\n/**\n * Extras-value array index constant for unified data samples.\n * @const\n * @type {number}\n */\nhandler.EXTRAS = 2;\n\n/**\n * Extracts one series from the raw data (a 2D array) into an array of the\n * unified data format.\n * This is where undesirable points (i.e. negative values on log scales and\n * missing values through which we wish to connect lines) are dropped.\n * TODO(danvk): the \"missing values\" bit above doesn't seem right.\n *\n * @param {!Array.<Array>} rawData The raw data passed into dygraphs where\n *     rawData[i] = [x,ySeries1,...,ySeriesN].\n * @param {!number} seriesIndex Index of the series to extract. All other\n *     series should be ignored.\n * @param {!DygraphOptions} options Dygraph options.\n * @return {Array.<[!number,?number,?]>} The series in the unified data format\n *     where series[i] = [x,y,{extras}].\n */\nhandler.prototype.extractSeries = function(rawData, seriesIndex, options) {\n};\n\n/**\n * Converts a series to a Point array.  The resulting point array must be\n * returned in increasing order of idx property.\n *\n * @param {!Array.<[!number,?number,?]>} series The series in the unified\n *          data format where series[i] = [x,y,{extras}].\n * @param {!string} setName Name of the series.\n * @param {!number} boundaryIdStart Index offset of the first point, equal to the\n *          number of skipped points left of the date window minimum (if any).\n * @return {!Array.<Dygraph.PointType>} List of points for this series.\n */\nhandler.prototype.seriesToPoints = function(series, setName, boundaryIdStart) {\n  // TODO(bhs): these loops are a hot-spot for high-point-count charts. In\n  // fact,\n  // on chrome+linux, they are 6 times more expensive than iterating through\n  // the\n  // points and drawing the lines. The brunt of the cost comes from allocating\n  // the |point| structures.\n  var points = [];\n  for ( var i = 0; i < series.length; ++i) {\n    var item = series[i];\n    var yraw = item[1];\n    var yval = yraw === null ? null : handler.parseFloat(yraw);\n    var point = {\n      x : NaN,\n      y : NaN,\n      xval : handler.parseFloat(item[0]),\n      yval : yval,\n      name : setName, // TODO(danvk): is this really necessary?\n      idx : i + boundaryIdStart,\n      canvasx: NaN, // add these so we do not alter the structure later, which slows Chrome\n      canvasy: NaN,\n    };\n    points.push(point);\n  }\n  this.onPointsCreated_(series, points);\n  return points;\n};\n\n/**\n * Callback called for each series after the series points have been generated\n * which will later be used by the plotters to draw the graph.\n * Here data may be added to the seriesPoints which is needed by the plotters.\n * The indexes of series and points are in sync meaning the original data\n * sample for series[i] is points[i].\n *\n * @param {!Array.<[!number,?number,?]>} series The series in the unified\n *     data format where series[i] = [x,y,{extras}].\n * @param {!Array.<Dygraph.PointType>} points The corresponding points passed\n *     to the plotter.\n * @protected\n */\nhandler.prototype.onPointsCreated_ = function(series, points) {\n};\n\n/**\n * Calculates the rolling average of a data set.\n *\n * @param {!Array.<[!number,?number,?]>} series The series in the unified\n *          data format where series[i] = [x,y,{extras}].\n * @param {!number} rollPeriod The number of points over which to average the data\n * @param {!DygraphOptions} options The dygraph options.\n * @param {!number} seriesIndex Index of the series this was extracted from.\n * @return {!Array.<[!number,?number,?]>} the rolled series.\n */\nhandler.prototype.rollingAverage = function(series, rollPeriod, options, seriesIndex) {\n};\n\n/**\n * Computes the range of the data series (including confidence intervals).\n *\n * @param {!Array.<[!number,?number,?]>} series The series in the unified\n *     data format where series[i] = [x, y, {extras}].\n * @param {!Array.<number>} dateWindow The x-value range to display with\n *     the format: [min, max].\n * @param {boolean} stepPlot Whether the stepPlot option is set.\n * @return {Array.<number>} The low and high extremes of the series in the\n *     given window with the format: [low, high].\n */\nhandler.prototype.getExtremeYValues = function(series, dateWindow, stepPlot) {\n};\n\n/**\n * Callback called for each series after the layouting data has been\n * calculated before the series is drawn. Here normalized positioning data\n * should be calculated for the extras of each point.\n *\n * @param {!Array.<Dygraph.PointType>} points The points passed to\n *          the plotter.\n * @param {!Object} axis The axis on which the series will be plotted.\n * @param {!boolean} logscale Whether or not to use a logscale.\n */\nhandler.prototype.onLineEvaluated = function(points, axis, logscale) {\n};\n\n/**\n * Optimized replacement for parseFloat, which was way too slow when almost\n * all values were type number, with few edge cases, none of which were strings.\n * @param {?number} val\n * @return {number}\n * @protected\n */\nhandler.parseFloat = function(val) {\n  // parseFloat(null) is NaN\n  if (val === null) {\n    return NaN;\n  }\n\n  // Assume it's a number or NaN. If it's something else, I'll be shocked.\n  return val;\n};\n\nexport default DygraphDataHandler;\n","/**\n * @license\n * Copyright 2013 David Eberlein (david.eberlein@ch.sauter-bc.com)\n * MIT-licenced: https://opensource.org/licenses/MIT\n */\n\n/**\n * @fileoverview DataHandler default implementation used for simple line charts.\n * @author David Eberlein (david.eberlein@ch.sauter-bc.com)\n */\n\n/*global Dygraph:false */\n\"use strict\";\n\nimport DygraphDataHandler from './datahandler';\n\n/**\n * @constructor\n * @extends Dygraph.DataHandler\n */\nvar DefaultHandler = function() {\n};\n\nDefaultHandler.prototype = new DygraphDataHandler();\n\n/** @inheritDoc */\nDefaultHandler.prototype.extractSeries = function(rawData, i, options) {\n  // TODO(danvk): pre-allocate series here.\n  var series = [];\n  const seriesLabel = options.get(\"labels\")[i];\n  const logScale = options.getForSeries(\"logscale\", seriesLabel);\n  for ( var j = 0; j < rawData.length; j++) {\n    var x = rawData[j][0];\n    var point = rawData[j][i];\n    if (logScale) {\n      // On the log scale, points less than zero do not exist.\n      // This will create a gap in the chart.\n      if (point <= 0) {\n        point = null;\n      }\n    }\n    series.push([ x, point ]);\n  }\n  return series;\n};\n\n/** @inheritDoc */\nDefaultHandler.prototype.rollingAverage = function(originalData, rollPeriod,\n    options, i) {\n  rollPeriod = Math.min(rollPeriod, originalData.length);\n  var rollingData = [];\n\n  var i, j, y, sum, num_ok;\n  // Calculate the rolling average for the first rollPeriod - 1 points\n  // where\n  // there is not enough data to roll over the full number of points\n  if (rollPeriod == 1) {\n    return originalData;\n  }\n  for (i = 0; i < originalData.length; i++) {\n    sum = 0;\n    num_ok = 0;\n    for (j = Math.max(0, i - rollPeriod + 1); j < i + 1; j++) {\n      y = originalData[j][1];\n      if (y === null || isNaN(y))\n        continue;\n      num_ok++;\n      sum += originalData[j][1];\n    }\n    if (num_ok) {\n      rollingData[i] = [ originalData[i][0], sum / num_ok ];\n    } else {\n      rollingData[i] = [ originalData[i][0], null ];\n    }\n  }\n\n  return rollingData;\n};\n\n/** @inheritDoc */\nDefaultHandler.prototype.getExtremeYValues = function getExtremeYValues(series, dateWindow, stepPlot) {\n  var minY = null, maxY = null, y;\n  var firstIdx = 0, lastIdx = series.length - 1;\n\n  for ( var j = firstIdx; j <= lastIdx; j++) {\n    y = series[j][1];\n    if (y === null || isNaN(y))\n      continue;\n    if (maxY === null || y > maxY) {\n      maxY = y;\n    }\n    if (minY === null || y < minY) {\n      minY = y;\n    }\n  }\n  return [ minY, maxY ];\n};\n\nexport default DefaultHandler;\n","/**\n * @license\n * Copyright 2013 David Eberlein (david.eberlein@ch.sauter-bc.com)\n * MIT-licenced: https://opensource.org/licenses/MIT\n */\n\n/**\n * @fileoverview DataHandler base implementation for the \"bar\"\n * data formats. This implementation must be extended and the\n * extractSeries and rollingAverage must be implemented.\n * @author David Eberlein (david.eberlein@ch.sauter-bc.com)\n */\n\n/*global Dygraph:false */\n/*global DygraphLayout:false */\n\"use strict\";\n\nimport DygraphDataHandler from './datahandler';\nimport DygraphLayout from '../dygraph-layout';\n\n/**\n * @constructor\n * @extends {Dygraph.DataHandler}\n */\nvar BarsHandler = function() {\n  DygraphDataHandler.call(this);\n};\nBarsHandler.prototype = new DygraphDataHandler();\n\n// TODO(danvk): figure out why the jsdoc has to be copy/pasted from superclass.\n//   (I get closure compiler errors if this isn't here.)\n/**\n * @override\n * @param {!Array.<Array>} rawData The raw data passed into dygraphs where\n *     rawData[i] = [x,ySeries1,...,ySeriesN].\n * @param {!number} seriesIndex Index of the series to extract. All other\n *     series should be ignored.\n * @param {!DygraphOptions} options Dygraph options.\n * @return {Array.<[!number,?number,?]>} The series in the unified data format\n *     where series[i] = [x,y,{extras}].\n */\nBarsHandler.prototype.extractSeries = function(rawData, seriesIndex, options) {\n  // Not implemented here must be extended\n};\n\n/**\n * @override\n * @param {!Array.<[!number,?number,?]>} series The series in the unified\n *          data format where series[i] = [x,y,{extras}].\n * @param {!number} rollPeriod The number of points over which to average the data\n * @param {!DygraphOptions} options The dygraph options.\n * @param {!number} seriesIndex Index of the series this was extracted from.\n * TODO(danvk): be more specific than \"Array\" here.\n * @return {!Array.<[!number,?number,?]>} the rolled series.\n */\nBarsHandler.prototype.rollingAverage =\n    function(series, rollPeriod, options, seriesIndex) {\n  // Not implemented here, must be extended.\n};\n\n/** @inheritDoc */\nBarsHandler.prototype.onPointsCreated_ = function(series, points) {\n  for (var i = 0; i < series.length; ++i) {\n    var item = series[i];\n    var point = points[i];\n    point.y_top = NaN;\n    point.y_bottom = NaN;\n    point.yval_minus = DygraphDataHandler.parseFloat(item[2][0]);\n    point.yval_plus = DygraphDataHandler.parseFloat(item[2][1]);\n  }\n};\n\n/** @inheritDoc */\nBarsHandler.prototype.getExtremeYValues = function(series, dateWindow, stepPlot) {\n  var minY = null, maxY = null, y;\n\n  var firstIdx = 0;\n  var lastIdx = series.length - 1;\n\n  for ( var j = firstIdx; j <= lastIdx; j++) {\n    y = series[j][1];\n    if (y === null || isNaN(y)) continue;\n\n    var low = series[j][2][0];\n    var high = series[j][2][1];\n\n    if (low > y) low = y; // this can happen with custom bars,\n    if (high < y) high = y; // e.g. in tests/custom-bars.html\n\n    if (maxY === null || high > maxY) maxY = high;\n    if (minY === null || low < minY) minY = low;\n  }\n\n  return [ minY, maxY ];\n};\n\n/** @inheritDoc */\nBarsHandler.prototype.onLineEvaluated = function(points, axis, logscale) {\n  var point;\n  for (var j = 0; j < points.length; j++) {\n    // Copy over the error terms\n    point = points[j];\n    point.y_top = DygraphLayout.calcYNormal_(axis, point.yval_minus, logscale);\n    point.y_bottom = DygraphLayout.calcYNormal_(axis, point.yval_plus, logscale);\n  }\n};\n\nexport default BarsHandler;\n","/**\n * @license\n * Copyright 2013 David Eberlein (david.eberlein@ch.sauter-bc.com)\n * MIT-licenced: https://opensource.org/licenses/MIT\n */\n\n/**\n * @fileoverview DataHandler implementation for the errorBars option.\n * @author David Eberlein (david.eberlein@ch.sauter-bc.com)\n */\n\n/*global Dygraph:false */\n\"use strict\";\n\nimport BarsHandler from './bars';\n\n/**\n * @constructor\n * @extends BarsHandler\n */\nvar ErrorBarsHandler = function() {\n};\n\nErrorBarsHandler.prototype = new BarsHandler();\n\n/** @inheritDoc */\nErrorBarsHandler.prototype.extractSeries = function(rawData, i, options) {\n  // TODO(danvk): pre-allocate series here.\n  var series = [];\n  var x, y, variance, point;\n  const seriesLabel = options.get(\"labels\")[i];\n  const logScale = options.getForSeries(\"logscale\", seriesLabel);\n  const sigma = options.getForSeries(\"sigma\", seriesLabel);\n  for ( var j = 0; j < rawData.length; j++) {\n    x = rawData[j][0];\n    point = rawData[j][i];\n    if (logScale && point !== null) {\n      // On the log scale, points less than zero do not exist.\n      // This will create a gap in the chart.\n      if (point[0] <= 0 || point[0] - sigma * point[1] <= 0) {\n        point = null;\n      }\n    }\n    // Extract to the unified data format.\n    if (point !== null) {\n      y = point[0];\n      if (y !== null && !isNaN(y)) {\n        variance = sigma * point[1];\n        // preserve original error value in extras for further\n        // filtering\n        series.push([ x, y, [ y - variance, y + variance, point[1] ] ]);\n      } else {\n        series.push([ x, y, [ y, y, y ] ]);\n      }\n    } else {\n      series.push([ x, null, [ null, null, null ] ]);\n    }\n  }\n  return series;\n};\n\n/** @inheritDoc */\nErrorBarsHandler.prototype.rollingAverage =\n    function(originalData, rollPeriod, options, i) {\n  rollPeriod = Math.min(rollPeriod, originalData.length);\n  var rollingData = [];\n  const seriesLabel = options.get(\"labels\")[i];\n  const sigma = options.getForSeries(\"sigma\", seriesLabel);\n\n  var i, j, y, v, sum, num_ok, stddev, variance, value;\n\n  // Calculate the rolling average for the first rollPeriod - 1 points\n  // where there is not enough data to roll over the full number of points\n  for (i = 0; i < originalData.length; i++) {\n    sum = 0;\n    variance = 0;\n    num_ok = 0;\n    for (j = Math.max(0, i - rollPeriod + 1); j < i + 1; j++) {\n      y = originalData[j][1];\n      if (y === null || isNaN(y))\n        continue;\n      num_ok++;\n      sum += y;\n      variance += Math.pow(originalData[j][2][2], 2);\n    }\n    if (num_ok) {\n      stddev = Math.sqrt(variance) / num_ok;\n      value = sum / num_ok;\n      rollingData[i] = [ originalData[i][0], value,\n          [value - sigma * stddev, value + sigma * stddev] ];\n    } else {\n      // This explicitly preserves NaNs to aid with \"independent\n      // series\".\n      // See testRollingAveragePreservesNaNs.\n      v = (rollPeriod == 1) ? originalData[i][1] : null;\n      rollingData[i] = [ originalData[i][0], v, [ v, v ] ];\n    }\n  }\n\n  return rollingData;\n};\n\nexport default ErrorBarsHandler;\n","/**\n * @license\n * Copyright 2013 David Eberlein (david.eberlein@ch.sauter-bc.com)\n * MIT-licenced: https://opensource.org/licenses/MIT\n */\n\n/**\n * @fileoverview DataHandler implementation for the custom bars option.\n * @author David Eberlein (david.eberlein@ch.sauter-bc.com)\n */\n\n/*global Dygraph:false */\n\"use strict\";\n\nimport BarsHandler from './bars';\n\n/**\n * @constructor\n * @extends Dygraph.DataHandlers.BarsHandler\n */\nvar CustomBarsHandler = function() {\n};\n\nCustomBarsHandler.prototype = new BarsHandler();\n\n/** @inheritDoc */\nCustomBarsHandler.prototype.extractSeries = function(rawData, i, options) {\n  // TODO(danvk): pre-allocate series here.\n  var series = [];\n  var x, y, point;\n  const seriesLabel = options.get(\"labels\")[i];\n  const logScale = options.getForSeries(\"logscale\", seriesLabel);\n  for ( var j = 0; j < rawData.length; j++) {\n    x = rawData[j][0];\n    point = rawData[j][i];\n    if (logScale && point !== null) {\n      // On the log scale, points less than zero do not exist.\n      // This will create a gap in the chart.\n      if (point[0] <= 0 || point[1] <= 0 || point[2] <= 0) {\n        point = null;\n      }\n    }\n    // Extract to the unified data format.\n    if (point !== null) {\n      y = point[1];\n      if (y !== null && !isNaN(y)) {\n        series.push([ x, y, [ point[0], point[2] ] ]);\n      } else {\n        series.push([ x, y, [ y, y ] ]);\n      }\n    } else {\n      series.push([ x, null, [ null, null ] ]);\n    }\n  }\n  return series;\n};\n\n/** @inheritDoc */\nCustomBarsHandler.prototype.rollingAverage =\n    function(originalData, rollPeriod, options, i) {\n  rollPeriod = Math.min(rollPeriod, originalData.length);\n  var rollingData = [];\n  var y, low, high, mid,count, i, extremes;\n\n  low = 0;\n  mid = 0;\n  high = 0;\n  count = 0;\n  for (i = 0; i < originalData.length; i++) {\n    y = originalData[i][1];\n    extremes = originalData[i][2];\n    rollingData[i] = originalData[i];\n\n    if (y !== null && !isNaN(y)) {\n      low += extremes[0];\n      mid += y;\n      high += extremes[1];\n      count += 1;\n    }\n    if (i - rollPeriod >= 0) {\n      var prev = originalData[i - rollPeriod];\n      if (prev[1] !== null && !isNaN(prev[1])) {\n        low -= prev[2][0];\n        mid -= prev[1];\n        high -= prev[2][1];\n        count -= 1;\n      }\n    }\n    if (count) {\n      rollingData[i] = [\n          originalData[i][0],\n          1.0 * mid / count,\n          [ 1.0 * low / count,\n            1.0 * high / count ] ];\n    } else {\n      rollingData[i] = [ originalData[i][0], null, [ null, null ] ];\n    }\n  }\n\n  return rollingData;\n};\n\nexport default CustomBarsHandler;\n","/**\n * @license\n * Copyright 2013 David Eberlein (david.eberlein@ch.sauter-bc.com)\n * MIT-licenced: https://opensource.org/licenses/MIT\n */\n\n/**\n * @fileoverview DataHandler implementation for the fractions option.\n * @author David Eberlein (david.eberlein@ch.sauter-bc.com)\n */\n\n/*global Dygraph:false */\n\"use strict\";\n\nimport DygraphDataHandler from './datahandler';\nimport DefaultHandler from './default';\n\n/**\n * @extends DefaultHandler\n * @constructor\n */\nvar DefaultFractionHandler = function() {\n};\n\nDefaultFractionHandler.prototype = new DefaultHandler();\n\nDefaultFractionHandler.prototype.extractSeries = function(rawData, i, options) {\n  // TODO(danvk): pre-allocate series here.\n  var series = [];\n  var x, y, point, num, den, value;\n  var mult = 100.0;\n  const seriesLabel = options.get(\"labels\")[i];\n  const logScale = options.getForSeries(\"logscale\", seriesLabel);\n  for ( var j = 0; j < rawData.length; j++) {\n    x = rawData[j][0];\n    point = rawData[j][i];\n    if (logScale && point !== null) {\n      // On the log scale, points less than zero do not exist.\n      // This will create a gap in the chart.\n      if (point[0] <= 0 || point[1] <= 0) {\n        point = null;\n      }\n    }\n    // Extract to the unified data format.\n    if (point !== null) {\n      num = point[0];\n      den = point[1];\n      if (num !== null && !isNaN(num)) {\n        value = den ? num / den : 0.0;\n        y = mult * value;\n        // preserve original values in extras for further filtering\n        series.push([ x, y, [ num, den ] ]);\n      } else {\n        series.push([ x, num, [ num, den ] ]);\n      }\n    } else {\n      series.push([ x, null, [ null, null ] ]);\n    }\n  }\n  return series;\n};\n\nDefaultFractionHandler.prototype.rollingAverage = function(originalData, rollPeriod,\n    options, i) {\n  rollPeriod = Math.min(rollPeriod, originalData.length);\n  var rollingData = [];\n\n  var i;\n  var num = 0;\n  var den = 0; // numerator/denominator\n  var mult = 100.0;\n  for (i = 0; i < originalData.length; i++) {\n    num += originalData[i][2][0];\n    den += originalData[i][2][1];\n    if (i - rollPeriod >= 0) {\n      num -= originalData[i - rollPeriod][2][0];\n      den -= originalData[i - rollPeriod][2][1];\n    }\n\n    var date = originalData[i][0];\n    var value = den ? num / den : 0.0;\n    rollingData[i] = [ date, mult * value ];\n  }\n\n  return rollingData;\n};\n\nexport default DefaultFractionHandler;\n","/**\n * @license\n * Copyright 2013 David Eberlein (david.eberlein@ch.sauter-bc.com)\n * MIT-licenced: https://opensource.org/licenses/MIT\n */\n\n/**\n * @fileoverview DataHandler implementation for the combination\n * of error bars and fractions options.\n * @author David Eberlein (david.eberlein@ch.sauter-bc.com)\n */\n\n/*global Dygraph:false */\n\"use strict\";\n\nimport BarsHandler from './bars';\n\n/**\n * @constructor\n * @extends Dygraph.DataHandlers.BarsHandler\n */\nvar FractionsBarsHandler = function() {\n};\n\nFractionsBarsHandler.prototype = new BarsHandler();\n\n/** @inheritDoc */\nFractionsBarsHandler.prototype.extractSeries = function(rawData, i, options) {\n  // TODO(danvk): pre-allocate series here.\n  var series = [];\n  var x, y, point, num, den, value, stddev, variance;\n  var mult = 100.0;\n  const seriesLabel = options.get(\"labels\")[i];\n  const logScale = options.getForSeries(\"logscale\", seriesLabel);\n  const sigma = options.getForSeries(\"sigma\", seriesLabel);\n  for ( var j = 0; j < rawData.length; j++) {\n    x = rawData[j][0];\n    point = rawData[j][i];\n    if (logScale && point !== null) {\n      // On the log scale, points less than zero do not exist.\n      // This will create a gap in the chart.\n      if (point[0] <= 0 || point[1] <= 0) {\n        point = null;\n      }\n    }\n    // Extract to the unified data format.\n    if (point !== null) {\n      num = point[0];\n      den = point[1];\n      if (num !== null && !isNaN(num)) {\n        value = den ? num / den : 0.0;\n        stddev = den ? sigma * Math.sqrt(value * (1 - value) / den) : 1.0;\n        variance = mult * stddev;\n        y = mult * value;\n        // preserve original values in extras for further filtering\n        series.push([ x, y, [ y - variance, y + variance, num, den ] ]);\n      } else {\n        series.push([ x, num, [ num, num, num, den ] ]);\n      }\n    } else {\n      series.push([ x, null, [ null, null, null, null ] ]);\n    }\n  }\n  return series;\n};\n\n/** @inheritDoc */\nFractionsBarsHandler.prototype.rollingAverage =\n    function(originalData, rollPeriod, options, i) {\n  rollPeriod = Math.min(rollPeriod, originalData.length);\n  var rollingData = [];\n  const seriesLabel = options.get(\"labels\")[i];\n  const sigma = options.getForSeries(\"sigma\", seriesLabel);\n  const wilsonInterval = options.getForSeries(\"wilsonInterval\", seriesLabel);\n\n  var low, high, i, stddev;\n  var num = 0;\n  var den = 0; // numerator/denominator\n  var mult = 100.0;\n  for (i = 0; i < originalData.length; i++) {\n    num += originalData[i][2][2];\n    den += originalData[i][2][3];\n    if (i - rollPeriod >= 0) {\n      num -= originalData[i - rollPeriod][2][2];\n      den -= originalData[i - rollPeriod][2][3];\n    }\n\n    var date = originalData[i][0];\n    var value = den ? num / den : 0.0;\n    if (wilsonInterval) {\n      // For more details on this confidence interval, see:\n      // https://en.wikipedia.org/wiki/Binomial_proportion_confidence_interval\n      if (den) {\n        var p = value < 0 ? 0 : value, n = den;\n        var pm = sigma * Math.sqrt(p * (1 - p) / n + sigma * sigma / (4 * n * n));\n        var denom = 1 + sigma * sigma / den;\n        low = (p + sigma * sigma / (2 * den) - pm) / denom;\n        high = (p + sigma * sigma / (2 * den) + pm) / denom;\n        rollingData[i] = [ date, p * mult,\n            [ low * mult, high * mult ] ];\n      } else {\n        rollingData[i] = [ date, 0, [ 0, 0 ] ];\n      }\n    } else {\n      stddev = den ? sigma * Math.sqrt(value * (1 - value) / den) : 1.0;\n      rollingData[i] = [ date, mult * value,\n                         [ mult * (value - stddev), mult * (value + stddev) ] ];\n    }\n  }\n\n  return rollingData;\n};\n\nexport default FractionsBarsHandler;\n","/**\n * @license\n * Copyright 2012 Dan Vanderkam (danvdk@gmail.com)\n * MIT-licenced: https://opensource.org/licenses/MIT\n */\n\n/*global Dygraph:false */\n\n\"use strict\";\n\n/**\nCurrent bits of jankiness:\n- Uses dygraph.layout_ to get the parsed annotations.\n- Uses dygraph.plotter_.area\n\nIt would be nice if the plugin didn't require so much special support inside\nthe core dygraphs classes, but annotations involve quite a bit of parsing and\nlayout.\n\nTODO(danvk): cache DOM elements.\n*/\n\nvar annotations = function() {\n  this.annotations_ = [];\n};\n\nannotations.prototype.toString = function() {\n  return \"Annotations Plugin\";\n};\n\nannotations.prototype.activate = function(g) {\n  return {\n    clearChart: this.clearChart,\n    didDrawChart: this.didDrawChart\n  };\n};\n\nannotations.prototype.detachLabels = function() {\n  for (var i = 0; i < this.annotations_.length; i++) {\n    var a = this.annotations_[i];\n    if (a.parentNode) a.parentNode.removeChild(a);\n    this.annotations_[i] = null;\n  }\n  this.annotations_ = [];\n};\n\nannotations.prototype.clearChart = function(e) {\n  this.detachLabels();\n};\n\nannotations.prototype.didDrawChart = function(e) {\n  var g = e.dygraph;\n\n  // Early out in the (common) case of zero annotations.\n  var points = g.layout_.annotated_points;\n  if (!points || points.length === 0) return;\n\n  var containerDiv = e.canvas.parentNode;\n\n  var bindEvt = function(eventName, classEventName, pt) {\n    return function(annotation_event) {\n      var a = pt.annotation;\n      if (a.hasOwnProperty(eventName)) {\n        a[eventName](a, pt, g, annotation_event);\n      } else if (g.getOption(classEventName)) {\n        g.getOption(classEventName)(a, pt, g, annotation_event );\n      }\n    };\n  };\n\n  // Add the annotations one-by-one.\n  var area = e.dygraph.getArea();\n\n  // x-coord to sum of previous annotation's heights (used for stacking).\n  var xToUsedHeight = {};\n\n  for (var i = 0; i < points.length; i++) {\n    var p = points[i];\n    if (p.canvasx < area.x || p.canvasx > area.x + area.w ||\n        p.canvasy < area.y || p.canvasy > area.y + area.h) {\n      continue;\n    }\n\n    var a = p.annotation;\n    var tick_height = 6;\n    if (a.hasOwnProperty(\"tickHeight\")) {\n      tick_height = a.tickHeight;\n    }\n\n    // TODO: deprecate axisLabelFontSize in favor of CSS\n    var div = document.createElement(\"div\");\n    div.style['fontSize'] = g.getOption('axisLabelFontSize') + \"px\";\n    var className = 'dygraph-annotation';\n    if (!a.hasOwnProperty('icon')) {\n      // camelCase class names are deprecated.\n      className += ' dygraphDefaultAnnotation dygraph-default-annotation';\n    }\n    if (a.hasOwnProperty('cssClass')) {\n      className += \" \" + a.cssClass;\n    }\n    div.className = className;\n\n    var width = a.hasOwnProperty('width') ? a.width : 16;\n    var height = a.hasOwnProperty('height') ? a.height : 16;\n    if (a.hasOwnProperty('icon')) {\n      var img = document.createElement(\"img\");\n      img.src = a.icon;\n      img.width = width;\n      img.height = height;\n      div.appendChild(img);\n    } else if (p.annotation.hasOwnProperty('shortText')) {\n      div.appendChild(document.createTextNode(p.annotation.shortText));\n    }\n    var left = p.canvasx - width / 2;\n    div.style.left = left + \"px\";\n    var divTop = 0;\n    if (a.attachAtBottom) {\n      var y = (area.y + area.h - height - tick_height);\n      if (xToUsedHeight[left]) {\n        y -= xToUsedHeight[left];\n      } else {\n        xToUsedHeight[left] = 0;\n      }\n      xToUsedHeight[left] += (tick_height + height);\n      divTop = y;\n    } else {\n      divTop = p.canvasy - height - tick_height;\n    }\n    div.style.top = divTop + \"px\";\n    div.style.width = width + \"px\";\n    div.style.height = height + \"px\";\n    div.title = p.annotation.text;\n    div.style.color = g.colorsMap_[p.name];\n    div.style.borderColor = g.colorsMap_[p.name];\n    a.div = div;\n\n    g.addAndTrackEvent(div, 'click',\n        bindEvt('clickHandler', 'annotationClickHandler', p, this));\n    g.addAndTrackEvent(div, 'mouseover',\n        bindEvt('mouseOverHandler', 'annotationMouseOverHandler', p, this));\n    g.addAndTrackEvent(div, 'mouseout',\n        bindEvt('mouseOutHandler', 'annotationMouseOutHandler', p, this));\n    g.addAndTrackEvent(div, 'dblclick',\n        bindEvt('dblClickHandler', 'annotationDblClickHandler', p, this));\n\n    containerDiv.appendChild(div);\n    this.annotations_.push(div);\n\n    var ctx = e.drawingContext;\n    ctx.save();\n    ctx.strokeStyle = a.hasOwnProperty('tickColor') ? a.tickColor : g.colorsMap_[p.name];\n    ctx.lineWidth = a.hasOwnProperty('tickWidth') ? a.tickWidth : g.getOption('strokeWidth');\n    ctx.beginPath();\n    if (!a.attachAtBottom) {\n      ctx.moveTo(p.canvasx, p.canvasy);\n      ctx.lineTo(p.canvasx, p.canvasy - 2 - tick_height);\n    } else {\n      var y = divTop + height;\n      ctx.moveTo(p.canvasx, y);\n      ctx.lineTo(p.canvasx, y + tick_height);\n    }\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n};\n\nannotations.prototype.destroy = function() {\n  this.detachLabels();\n};\n\nexport default annotations;\n","/**\n * @license\n * Copyright 2012 Dan Vanderkam (danvdk@gmail.com)\n * MIT-licenced: https://opensource.org/licenses/MIT\n */\n\n/*global Dygraph:false */\n\n'use strict';\n\n/*\nBits of jankiness:\n- Direct layout access\n- Direct area access\n- Should include calculation of ticks, not just the drawing.\n\nOptions left to make axis-friendly.\n  ('drawAxesAtZero')\n  ('xAxisHeight')\n*/\n\nimport * as utils from '../dygraph-utils';\n\n/**\n * Draws the axes. This includes the labels on the x- and y-axes, as well\n * as the tick marks on the axes.\n * It does _not_ draw the grid lines which span the entire chart.\n */\nvar axes = function() {\n  this.xlabels_ = [];\n  this.ylabels_ = [];\n};\n\naxes.prototype.toString = function() {\n  return 'Axes Plugin';\n};\n\naxes.prototype.activate = function(g) {\n  return {\n    layout: this.layout,\n    clearChart: this.clearChart,\n    willDrawChart: this.willDrawChart\n  };\n};\n\naxes.prototype.layout = function(e) {\n  var g = e.dygraph;\n\n  if (g.getOptionForAxis('drawAxis', 'y')) {\n    var w = g.getOptionForAxis('axisLabelWidth', 'y') + 2 * g.getOptionForAxis('axisTickSize', 'y');\n    e.reserveSpaceLeft(w);\n  }\n\n  if (g.getOptionForAxis('drawAxis', 'x')) {\n    var h;\n    // NOTE: I think this is probably broken now, since g.getOption() now\n    // hits the dictionary. (That is, g.getOption('xAxisHeight') now always\n    // has a value.)\n    if (g.getOption('xAxisHeight')) {\n      h = g.getOption('xAxisHeight');\n    } else {\n      h = g.getOptionForAxis('axisLabelFontSize', 'x') + 2 * g.getOptionForAxis('axisTickSize', 'x');\n    }\n    e.reserveSpaceBottom(h);\n  }\n\n  if (g.numAxes() == 2) {\n    if (g.getOptionForAxis('drawAxis', 'y2')) {\n      var w = g.getOptionForAxis('axisLabelWidth', 'y2') + 2 * g.getOptionForAxis('axisTickSize', 'y2');\n      e.reserveSpaceRight(w);\n    }\n  } else if (g.numAxes() > 2) {\n    g.error('Only two y-axes are supported at this time. (Trying ' +\n            'to use ' + g.numAxes() + ')');\n  }\n};\n\naxes.prototype.detachLabels = function() {\n  function removeArray(ary) {\n    for (var i = 0; i < ary.length; i++) {\n      var el = ary[i];\n      if (el.parentNode) el.parentNode.removeChild(el);\n    }\n  }\n\n  removeArray(this.xlabels_);\n  removeArray(this.ylabels_);\n  this.xlabels_ = [];\n  this.ylabels_ = [];\n};\n\naxes.prototype.clearChart = function(e) {\n  this.detachLabels();\n};\n\naxes.prototype.willDrawChart = function(e) {\n  var g = e.dygraph;\n\n  if (!g.getOptionForAxis('drawAxis', 'x') &&\n      !g.getOptionForAxis('drawAxis', 'y') &&\n      !g.getOptionForAxis('drawAxis', 'y2')) {\n    return;\n  }\n\n  // Round pixels to half-integer boundaries for crisper drawing.\n  function halfUp(x)  { return Math.round(x) + 0.5; }\n  function halfDown(y){ return Math.round(y) - 0.5; }\n\n  var context = e.drawingContext;\n  var containerDiv = e.canvas.parentNode;\n  var canvasWidth = g.width_;  // e.canvas.width is affected by pixel ratio.\n  var canvasHeight = g.height_;\n\n  var label, x, y, tick, i;\n\n  var makeLabelStyle = function(axis) {\n    return {\n      position: 'absolute',\n      fontSize: g.getOptionForAxis('axisLabelFontSize', axis) + 'px',\n      width: g.getOptionForAxis('axisLabelWidth', axis) + 'px',\n    };\n  };\n\n  var labelStyles = {\n    x: makeLabelStyle('x'),\n    y: makeLabelStyle('y'),\n    y2: makeLabelStyle('y2')\n  };\n\n  var makeDiv = function(txt, axis, prec_axis) {\n    /*\n     * This seems to be called with the following three sets of axis/prec_axis:\n     * x: undefined\n     * y: y1\n     * y: y2\n     */\n    var div = document.createElement('div');\n    var labelStyle = labelStyles[prec_axis == 'y2' ? 'y2' : axis];\n    utils.update(div.style, labelStyle);\n    // TODO: combine outer & inner divs\n    var inner_div = document.createElement('div');\n    inner_div.className = 'dygraph-axis-label' +\n                          ' dygraph-axis-label-' + axis +\n                          (prec_axis ? ' dygraph-axis-label-' + prec_axis : '');\n    inner_div.innerHTML = txt;\n    div.appendChild(inner_div);\n    return div;\n  };\n\n  // axis lines\n  context.save();\n\n  var layout = g.layout_;\n  var area = e.dygraph.plotter_.area;\n\n  // Helper for repeated axis-option accesses.\n  var makeOptionGetter = function(axis) {\n    return function(option) {\n      return g.getOptionForAxis(option, axis);\n    };\n  };\n\n  const that = this;\n\n  if (g.getOptionForAxis('drawAxis', 'y') ||\n      (g.numAxes() == 2 && g.getOptionForAxis('drawAxis', 'y2'))) {\n    if (layout.yticks && layout.yticks.length > 0) {\n      var num_axes = g.numAxes();\n      var getOptions = [makeOptionGetter('y'), makeOptionGetter('y2')];\n      layout.yticks.forEach(function (tick) {\n        if (tick.label === undefined) return;  // this tick only has a grid line.\n        x = area.x;\n        var sgn = 1;\n        var prec_axis = 'y1';\n        var getAxisOption = getOptions[0];\n        if (tick.axis == 1) {  // right-side y-axis\n          x = area.x + area.w;\n          sgn = -1;\n          prec_axis = 'y2';\n          getAxisOption = getOptions[1];\n        }\n        if (!getAxisOption('drawAxis')) return;\n        var fontSize = getAxisOption('axisLabelFontSize');\n        y = area.y + tick.pos * area.h;\n\n        /* Tick marks are currently clipped, so don't bother drawing them.\n        context.beginPath();\n        context.moveTo(halfUp(x), halfDown(y));\n        context.lineTo(halfUp(x - sgn * that.attr_('axisTickSize')), halfDown(y));\n        context.closePath();\n        context.stroke();\n        */\n\n        label = makeDiv(tick.label, 'y', num_axes == 2 ? prec_axis : null);\n        var top = (y - fontSize / 2);\n        if (top < 0) top = 0;\n\n        if (top + fontSize + 3 > canvasHeight) {\n          label.style.bottom = '0';\n        } else {\n          // The lowest tick on the y-axis often overlaps with the leftmost\n          // tick on the x-axis. Shift the bottom tick up a little bit to\n          // compensate if necessary.\n          label.style.top = Math.min(top, canvasHeight - (2 * fontSize)) + 'px';\n        }\n        // TODO: replace these with css classes?\n        if (tick.axis === 0) {\n          label.style.left = (area.x - getAxisOption('axisLabelWidth') - getAxisOption('axisTickSize')) + 'px';\n          label.style.textAlign = 'right';\n        } else if (tick.axis == 1) {\n          label.style.left = (area.x + area.w +\n                              getAxisOption('axisTickSize')) + 'px';\n          label.style.textAlign = 'left';\n        }\n        label.style.width = getAxisOption('axisLabelWidth') + 'px';\n        containerDiv.appendChild(label);\n        that.ylabels_.push(label);\n      });\n    }\n\n    // draw a vertical line on the left to separate the chart from the labels.\n    var axisX;\n    if (g.getOption('drawAxesAtZero')) {\n      var r = g.toPercentXCoord(0);\n      if (r > 1 || r < 0 || isNaN(r)) r = 0;\n      axisX = halfUp(area.x + r * area.w);\n    } else {\n      axisX = halfUp(area.x);\n    }\n\n    context.strokeStyle = g.getOptionForAxis('axisLineColor', 'y');\n    context.lineWidth = g.getOptionForAxis('axisLineWidth', 'y');\n\n    context.beginPath();\n    context.moveTo(axisX, halfDown(area.y));\n    context.lineTo(axisX, halfDown(area.y + area.h));\n    context.closePath();\n    context.stroke();\n\n    // if there's a secondary y-axis, draw a vertical line for that, too.\n    if (g.numAxes() == 2 && g.getOptionForAxis('drawAxis', 'y2')) {\n      context.strokeStyle = g.getOptionForAxis('axisLineColor', 'y2');\n      context.lineWidth = g.getOptionForAxis('axisLineWidth', 'y2');\n      context.beginPath();\n      context.moveTo(halfDown(area.x + area.w), halfDown(area.y));\n      context.lineTo(halfDown(area.x + area.w), halfDown(area.y + area.h));\n      context.closePath();\n      context.stroke();\n    }\n  }\n\n  if (g.getOptionForAxis('drawAxis', 'x')) {\n    if (layout.xticks) {\n      var getAxisOption = makeOptionGetter('x');\n      layout.xticks.forEach(function (tick) {\n        if (tick.label === undefined) return;  // this tick only has a grid line.\n        x = area.x + tick.pos * area.w;\n        y = area.y + area.h;\n\n        /* Tick marks are currently clipped, so don't bother drawing them.\n        context.beginPath();\n        context.moveTo(halfUp(x), halfDown(y));\n        context.lineTo(halfUp(x), halfDown(y + that.attr_('axisTickSize')));\n        context.closePath();\n        context.stroke();\n        */\n\n        label = makeDiv(tick.label, 'x');\n        label.style.textAlign = 'center';\n        label.style.top = (y + getAxisOption('axisTickSize')) + 'px';\n\n        var left = (x - getAxisOption('axisLabelWidth')/2);\n        if (left + getAxisOption('axisLabelWidth') > canvasWidth) {\n          left = canvasWidth - getAxisOption('axisLabelWidth');\n          label.style.textAlign = 'right';\n        }\n        if (left < 0) {\n          left = 0;\n          label.style.textAlign = 'left';\n        }\n\n        label.style.left = left + 'px';\n        label.style.width = getAxisOption('axisLabelWidth') + 'px';\n        containerDiv.appendChild(label);\n        that.xlabels_.push(label);\n      });\n    }\n\n    context.strokeStyle = g.getOptionForAxis('axisLineColor', 'x');\n    context.lineWidth = g.getOptionForAxis('axisLineWidth', 'x');\n    context.beginPath();\n    var axisY;\n    if (g.getOption('drawAxesAtZero')) {\n      var r = g.toPercentYCoord(0, 0);\n      if (r > 1 || r < 0) r = 1;\n      axisY = halfDown(area.y + r * area.h);\n    } else {\n      axisY = halfDown(area.y + area.h);\n    }\n    context.moveTo(halfUp(area.x), axisY);\n    context.lineTo(halfUp(area.x + area.w), axisY);\n    context.closePath();\n    context.stroke();\n  }\n\n  context.restore();\n};\n\nexport default axes;\n","/**\n * @license\n * Copyright 2012 Dan Vanderkam (danvdk@gmail.com)\n * MIT-licenced: https://opensource.org/licenses/MIT\n */\n/*global Dygraph:false */\n\n\"use strict\";\n\n// TODO(danvk): move chart label options out of dygraphs and into the plugin.\n// TODO(danvk): only tear down & rebuild the DIVs when it's necessary.\n\nvar chart_labels = function() {\n  this.title_div_ = null;\n  this.xlabel_div_ = null;\n  this.ylabel_div_ = null;\n  this.y2label_div_ = null;\n};\n\nchart_labels.prototype.toString = function() {\n  return \"ChartLabels Plugin\";\n};\n\nchart_labels.prototype.activate = function(g) {\n  return {\n    layout: this.layout,\n    // clearChart: this.clearChart,\n    didDrawChart: this.didDrawChart\n  };\n};\n\n// QUESTION: should there be a plugin-utils.js?\nvar createDivInRect = function(r) {\n  var div = document.createElement('div');\n  div.style.position = 'absolute';\n  div.style.left = r.x + 'px';\n  div.style.top = r.y + 'px';\n  div.style.width = r.w + 'px';\n  div.style.height = r.h + 'px';\n  return div;\n};\n\n// Detach and null out any existing nodes.\nchart_labels.prototype.detachLabels_ = function() {\n  var els = [ this.title_div_,\n              this.xlabel_div_,\n              this.ylabel_div_,\n              this.y2label_div_ ];\n  for (var i = 0; i < els.length; i++) {\n    var el = els[i];\n    if (!el) continue;\n    if (el.parentNode) el.parentNode.removeChild(el);\n  }\n\n  this.title_div_ = null;\n  this.xlabel_div_ = null;\n  this.ylabel_div_ = null;\n  this.y2label_div_ = null;\n};\n\nvar createRotatedDiv = function(g, box, axis, classes, html) {\n  // TODO(danvk): is this outer div actually necessary?\n  var div = document.createElement(\"div\");\n  div.style.position = 'absolute';\n  if (axis == 1) {\n    // NOTE: this is cheating. Should be positioned relative to the box.\n    div.style.left = '0px';\n  } else {\n    div.style.left = box.x + 'px';\n  }\n  div.style.top = box.y + 'px';\n  div.style.width = box.w + 'px';\n  div.style.height = box.h + 'px';\n  div.style.fontSize = (g.getOption('yLabelWidth') - 2) + 'px';\n\n  var inner_div = document.createElement(\"div\");\n  inner_div.style.position = 'absolute';\n  inner_div.style.width = box.h + 'px';\n  inner_div.style.height = box.w + 'px';\n  inner_div.style.top = (box.h / 2 - box.w / 2) + 'px';\n  inner_div.style.left = (box.w / 2 - box.h / 2) + 'px';\n  // TODO: combine inner_div and class_div.\n  inner_div.className = 'dygraph-label-rotate-' + (axis == 1 ? 'right' : 'left');\n\n  var class_div = document.createElement(\"div\");\n  class_div.className = classes;\n  class_div.innerHTML = html;\n\n  inner_div.appendChild(class_div);\n  div.appendChild(inner_div);\n  return div;\n};\n\nchart_labels.prototype.layout = function(e) {\n  this.detachLabels_();\n\n  var g = e.dygraph;\n  var div = e.chart_div;\n  if (g.getOption('title')) {\n    // QUESTION: should this return an absolutely-positioned div instead?\n    var title_rect = e.reserveSpaceTop(g.getOption('titleHeight'));\n    this.title_div_ = createDivInRect(title_rect);\n    this.title_div_.style.fontSize = (g.getOption('titleHeight') - 8) + 'px';\n\n    var class_div = document.createElement(\"div\");\n    class_div.className = 'dygraph-label dygraph-title';\n    class_div.innerHTML = g.getOption('title');\n    this.title_div_.appendChild(class_div);\n    div.appendChild(this.title_div_);\n  }\n\n  if (g.getOption('xlabel')) {\n    var x_rect = e.reserveSpaceBottom(g.getOption('xLabelHeight'));\n    this.xlabel_div_ = createDivInRect(x_rect);\n    this.xlabel_div_.style.fontSize = (g.getOption('xLabelHeight') - 2) + 'px';\n\n    var class_div = document.createElement(\"div\");\n    class_div.className = 'dygraph-label dygraph-xlabel';\n    class_div.innerHTML = g.getOption('xlabel');\n    this.xlabel_div_.appendChild(class_div);\n    div.appendChild(this.xlabel_div_);\n  }\n\n  if (g.getOption('ylabel')) {\n    // It would make sense to shift the chart here to make room for the y-axis\n    // label, but the default yAxisLabelWidth is large enough that this results\n    // in overly-padded charts. The y-axis label should fit fine. If it\n    // doesn't, the yAxisLabelWidth option can be increased.\n    var y_rect = e.reserveSpaceLeft(0);\n\n    this.ylabel_div_ = createRotatedDiv(\n        g, y_rect,\n        1,  // primary (left) y-axis\n        'dygraph-label dygraph-ylabel',\n        g.getOption('ylabel'));\n    div.appendChild(this.ylabel_div_);\n  }\n\n  if (g.getOption('y2label') && g.numAxes() == 2) {\n    // same logic applies here as for ylabel.\n    var y2_rect = e.reserveSpaceRight(0);\n    this.y2label_div_ = createRotatedDiv(\n        g, y2_rect,\n        2,  // secondary (right) y-axis\n        'dygraph-label dygraph-y2label',\n        g.getOption('y2label'));\n    div.appendChild(this.y2label_div_);\n  }\n};\n\nchart_labels.prototype.didDrawChart = function(e) {\n  var g = e.dygraph;\n  if (this.title_div_) {\n    this.title_div_.children[0].innerHTML = g.getOption('title');\n  }\n  if (this.xlabel_div_) {\n    this.xlabel_div_.children[0].innerHTML = g.getOption('xlabel');\n  }\n  if (this.ylabel_div_) {\n    this.ylabel_div_.children[0].children[0].innerHTML = g.getOption('ylabel');\n  }\n  if (this.y2label_div_) {\n    this.y2label_div_.children[0].children[0].innerHTML = g.getOption('y2label');\n  }\n};\n\nchart_labels.prototype.clearChart = function() {\n};\n\nchart_labels.prototype.destroy = function() {\n  this.detachLabels_();\n};\n\nexport default chart_labels;\n","/**\n * @license\n * Copyright 2012 Dan Vanderkam (danvdk@gmail.com)\n * MIT-licenced: https://opensource.org/licenses/MIT\n */\n/*global Dygraph:false */\n\n/*\n\nCurrent bits of jankiness:\n- Direct layout access\n- Direct area access\n\n*/\n\n\"use strict\";\n\n/**\n * Draws the gridlines, i.e. the gray horizontal & vertical lines running the\n * length of the chart.\n *\n * @constructor\n */\nvar grid = function() {\n};\n\ngrid.prototype.toString = function() {\n  return \"Gridline Plugin\";\n};\n\ngrid.prototype.activate = function(g) {\n  return {\n    willDrawChart: this.willDrawChart\n  };\n};\n\ngrid.prototype.willDrawChart = function(e) {\n  // Draw the new X/Y grid. Lines appear crisper when pixels are rounded to\n  // half-integers. This prevents them from drawing in two rows/cols.\n  var g = e.dygraph;\n  var ctx = e.drawingContext;\n  var layout = g.layout_;\n  var area = e.dygraph.plotter_.area;\n\n  function halfUp(x)  { return Math.round(x) + 0.5; }\n  function halfDown(y){ return Math.round(y) - 0.5; }\n\n  var x, y, i, ticks;\n  if (g.getOptionForAxis('drawGrid', 'y')) {\n    var axes = [\"y\", \"y2\"];\n    var strokeStyles = [], lineWidths = [], drawGrid = [], stroking = [], strokePattern = [];\n    for (var i = 0; i < axes.length; i++) {\n      drawGrid[i] = g.getOptionForAxis('drawGrid', axes[i]);\n      if (drawGrid[i]) {\n        strokeStyles[i] = g.getOptionForAxis('gridLineColor', axes[i]);\n        lineWidths[i] = g.getOptionForAxis('gridLineWidth', axes[i]);\n        strokePattern[i] = g.getOptionForAxis('gridLinePattern', axes[i]);\n        stroking[i] = strokePattern[i] && (strokePattern[i].length >= 2);\n      }\n    }\n    ticks = layout.yticks;\n    ctx.save();\n    // draw grids for the different y axes\n    ticks.forEach(tick => {\n      if (!tick.has_tick) return;\n      var axis = tick.axis;\n      if (drawGrid[axis]) {\n        ctx.save();\n        if (stroking[axis]) {\n          if (ctx.setLineDash) ctx.setLineDash(strokePattern[axis]);\n        }\n        ctx.strokeStyle = strokeStyles[axis];\n        ctx.lineWidth = lineWidths[axis];\n\n        x = halfUp(area.x);\n        y = halfDown(area.y + tick.pos * area.h);\n        ctx.beginPath();\n        ctx.moveTo(x, y);\n        ctx.lineTo(x + area.w, y);\n        ctx.stroke();\n\n        ctx.restore();\n      }\n    });\n    ctx.restore();\n  }\n\n  // draw grid for x axis\n  if (g.getOptionForAxis('drawGrid', 'x')) {\n    ticks = layout.xticks;\n    ctx.save();\n    var strokePattern = g.getOptionForAxis('gridLinePattern', 'x');\n    var stroking = strokePattern && (strokePattern.length >= 2);\n    if (stroking) {\n      if (ctx.setLineDash) ctx.setLineDash(strokePattern);\n    }\n    ctx.strokeStyle = g.getOptionForAxis('gridLineColor', 'x');\n    ctx.lineWidth = g.getOptionForAxis('gridLineWidth', 'x');\n    ticks.forEach(tick => {\n      if (!tick.has_tick) return;\n      x = halfUp(area.x + tick.pos * area.w);\n      y = halfDown(area.y + area.h);\n      ctx.beginPath();\n      ctx.moveTo(x, y);\n      ctx.lineTo(x, area.y);\n      ctx.stroke();\n    });\n    if (stroking) {\n      if (ctx.setLineDash) ctx.setLineDash([]);\n    }\n    ctx.restore();\n  }\n};\n\ngrid.prototype.destroy = function() {\n};\n\nexport default grid;\n","/**\n * @license\n * Copyright 2012 Dan Vanderkam (danvdk@gmail.com)\n * MIT-licenced: https://opensource.org/licenses/MIT\n */\n/*global Dygraph:false */\n\n/*\nCurrent bits of jankiness:\n- Uses two private APIs:\n    1. Dygraph.optionsViewForAxis_\n    2. dygraph.plotter_.area\n- Registers for a \"predraw\" event, which should be renamed.\n- I call calculateEmWidthInDiv more often than needed.\n*/\n\n/*global Dygraph:false */\n\"use strict\";\n\nimport * as utils from '../dygraph-utils';\n\n/**\n * Creates the legend, which appears when the user hovers over the chart.\n * The legend can be either a user-specified or generated div.\n *\n * @constructor\n */\nvar Legend = function() {\n  this.legend_div_ = null;\n  this.is_generated_div_ = false;  // do we own this div, or was it user-specified?\n};\n\nLegend.prototype.toString = function() {\n  return \"Legend Plugin\";\n};\n\n/**\n * This is called during the dygraph constructor, after options have been set\n * but before the data is available.\n *\n * Proper tasks to do here include:\n * - Reading your own options\n * - DOM manipulation\n * - Registering event listeners\n *\n * @param {Dygraph} g Graph instance.\n * @return {object.<string, function(ev)>} Mapping of event names to callbacks.\n */\nLegend.prototype.activate = function(g) {\n  var div;\n\n  var userLabelsDiv = g.getOption('labelsDiv');\n  if (userLabelsDiv && null !== userLabelsDiv) {\n    if (typeof(userLabelsDiv) == \"string\" || userLabelsDiv instanceof String) {\n      div = document.getElementById(userLabelsDiv);\n    } else {\n      div = userLabelsDiv;\n    }\n  } else {\n    div = document.createElement(\"div\");\n    div.className = \"dygraph-legend\";\n    // TODO(danvk): come up with a cleaner way to expose this.\n    g.graphDiv.appendChild(div);\n    this.is_generated_div_ = true;\n  }\n\n  this.legend_div_ = div;\n  this.one_em_width_ = 10;  // just a guess, will be updated.\n\n  return {\n    select: this.select,\n    deselect: this.deselect,\n    // TODO(danvk): rethink the name \"predraw\" before we commit to it in any API.\n    predraw: this.predraw,\n    didDrawChart: this.didDrawChart\n  };\n};\n\n// Needed for dashed lines.\nvar calculateEmWidthInDiv = function(div) {\n  var sizeSpan = document.createElement('span');\n  sizeSpan.setAttribute('style', 'margin: 0; padding: 0 0 0 1em; border: 0;');\n  div.appendChild(sizeSpan);\n  var oneEmWidth=sizeSpan.offsetWidth;\n  div.removeChild(sizeSpan);\n  return oneEmWidth;\n};\n\nvar escapeHTML = function(str) {\n  return str.replace(/&/g, \"&amp;\").replace(/\"/g, \"&#34;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n};\n\nLegend.prototype.select = function(e) {\n  var xValue = e.selectedX;\n  var points = e.selectedPoints;\n  var row = e.selectedRow;\n\n  var legendMode = e.dygraph.getOption('legend');\n  if (legendMode === 'never') {\n    this.legend_div_.style.display = 'none';\n    return;\n  }\n\n  var html = Legend.generateLegendHTML(e.dygraph, xValue, points, this.one_em_width_, row);\n  if (html instanceof Node && html.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n    this.legend_div_.innerHTML = '';\n    this.legend_div_.appendChild(html);\n  } else\n    this.legend_div_.innerHTML = html;\n  // must be done now so offsetWidth isn’t 0…\n  this.legend_div_.style.display = '';\n\n  if (legendMode === 'follow') {\n    // create floating legend div\n    var area = e.dygraph.plotter_.area;\n    var labelsDivWidth = this.legend_div_.offsetWidth;\n    var yAxisLabelWidth = e.dygraph.getOptionForAxis('axisLabelWidth', 'y');\n    // find the closest data point by checking the currently highlighted series,\n    // or fall back to using the first data point available\n    var highlightSeries = e.dygraph.getHighlightSeries()\n    var point;\n    if (highlightSeries) {\n      point = points.find(p => p.name === highlightSeries);\n      if (!point)\n        point = points[0];\n    } else\n      point = points[0];\n    // determine floating [left, top] coordinates of the legend div\n    // within the plotter_ area\n    // offset 50 px to the right and down from the first selection point\n    // 50 px is guess based on mouse cursor size\n    const followOffsetX = e.dygraph.getNumericOption('legendFollowOffsetX');\n    const followOffsetY = e.dygraph.getNumericOption('legendFollowOffsetY');\n    var leftLegend = point.x * area.w + followOffsetX;\n    var topLegend  = point.y * area.h + followOffsetY;\n\n    // if legend floats to end of the chart area, it flips to the other\n    // side of the selection point\n    if ((leftLegend + labelsDivWidth + 1) > area.w) {\n      leftLegend = leftLegend - 2 * followOffsetX - labelsDivWidth - (yAxisLabelWidth - area.x);\n    }\n\n    this.legend_div_.style.left = yAxisLabelWidth + leftLegend + \"px\";\n    this.legend_div_.style.top = topLegend + \"px\";\n  } else if (legendMode === 'onmouseover' && this.is_generated_div_) {\n    // synchronise this with Legend.prototype.predraw below\n    var area = e.dygraph.plotter_.area;\n    var labelsDivWidth = this.legend_div_.offsetWidth;\n    this.legend_div_.style.left = area.x + area.w - labelsDivWidth - 1 + \"px\";\n    this.legend_div_.style.top = area.y + \"px\";\n  }\n};\n\nLegend.prototype.deselect = function(e) {\n  var legendMode = e.dygraph.getOption('legend');\n  if (legendMode !== 'always') {\n    this.legend_div_.style.display = \"none\";\n  }\n\n  // Have to do this every time, since styles might have changed.\n  var oneEmWidth = calculateEmWidthInDiv(this.legend_div_);\n  this.one_em_width_ = oneEmWidth;\n\n  var html = Legend.generateLegendHTML(e.dygraph, undefined, undefined, oneEmWidth, null);\n  if (html instanceof Node && html.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n    this.legend_div_.innerHTML = '';\n    this.legend_div_.appendChild(html);\n  } else\n    this.legend_div_.innerHTML = html;\n};\n\nLegend.prototype.didDrawChart = function(e) {\n  this.deselect(e);\n};\n\n// Right edge should be flush with the right edge of the charting area (which\n// may not be the same as the right edge of the div, if we have two y-axes).\n// TODO(danvk): is any of this really necessary? Could just set \"right\" in \"activate\".\n/**\n * Position the labels div so that:\n * - its right edge is flush with the right edge of the charting area\n * - its top edge is flush with the top edge of the charting area\n * @private\n */\nLegend.prototype.predraw = function(e) {\n  // Don't touch a user-specified labelsDiv.\n  if (!this.is_generated_div_) return;\n\n  // TODO(danvk): only use real APIs for this.\n  e.dygraph.graphDiv.appendChild(this.legend_div_);\n  // synchronise this with Legend.prototype.select above\n  var area = e.dygraph.plotter_.area;\n  var labelsDivWidth = this.legend_div_.offsetWidth;\n  this.legend_div_.style.left = area.x + area.w - labelsDivWidth - 1 + \"px\";\n  this.legend_div_.style.top = area.y + \"px\";\n};\n\n/**\n * Called when dygraph.destroy() is called.\n * You should null out any references and detach any DOM elements.\n */\nLegend.prototype.destroy = function() {\n  this.legend_div_ = null;\n};\n\n/**\n * Generates HTML for the legend which is displayed when hovering over the\n * chart. If no selected points are specified, a default legend is returned\n * (this may just be the empty string).\n * @param {number} x The x-value of the selected points.\n * @param {Object} sel_points List of selected points for the given\n *   x-value. Should have properties like 'name', 'yval' and 'canvasy'.\n * @param {number} oneEmWidth The pixel width for 1em in the legend. Only\n *   relevant when displaying a legend with no selection (i.e. {legend:\n *   'always'}) and with dashed lines.\n * @param {number} row The selected row index.\n * @private\n */\nLegend.generateLegendHTML = function(g, x, sel_points, oneEmWidth, row) {\n  // Data about the selection to pass to legendFormatter\n  var data = {\n    dygraph: g,\n    x: x,\n    i: row,\n    series: []\n  };\n\n  var labelToSeries = {};\n  var labels = g.getLabels();\n  if (labels) {\n    for (var i = 1; i < labels.length; i++) {\n      var series = g.getPropertiesForSeries(labels[i]);\n      var strokePattern = g.getOption('strokePattern', labels[i]);\n      var seriesData = {\n        dashHTML: generateLegendDashHTML(strokePattern, series.color, oneEmWidth),\n        label: labels[i],\n        labelHTML: escapeHTML(labels[i]),\n        isVisible: series.visible,\n        color: series.color\n      };\n\n      data.series.push(seriesData);\n      labelToSeries[labels[i]] = seriesData;\n    }\n  }\n\n  if (typeof(x) !== 'undefined') {\n    var xOptView = g.optionsViewForAxis_('x');\n    var xvf = xOptView('valueFormatter');\n    data.xHTML = xvf.call(g, x, xOptView, labels[0], g, row, 0);\n\n    var yOptViews = [];\n    var num_axes = g.numAxes();\n    for (var i = 0; i < num_axes; i++) {\n      // TODO(danvk): remove this use of a private API\n      yOptViews[i] = g.optionsViewForAxis_('y' + (i ? 1 + i : ''));\n    }\n\n    var showZeros = g.getOption('labelsShowZeroValues');\n    var highlightSeries = g.getHighlightSeries();\n    for (i = 0; i < sel_points.length; i++) {\n      var pt = sel_points[i];\n      var seriesData = labelToSeries[pt.name];\n      seriesData.y = pt.yval;\n\n      if ((pt.yval === 0 && !showZeros) || isNaN(pt.canvasy)) {\n        seriesData.isVisible = false;\n        continue;\n      }\n\n      var series = g.getPropertiesForSeries(pt.name);\n      var yOptView = yOptViews[series.axis - 1];\n      var fmtFunc = yOptView('valueFormatter');\n      var yHTML = fmtFunc.call(g, pt.yval, yOptView, pt.name, g, row, labels.indexOf(pt.name));\n\n      utils.update(seriesData, {yHTML});\n\n      if (pt.name == highlightSeries) {\n        seriesData.isHighlighted = true;\n      }\n    }\n  }\n\n  var formatter = (g.getOption('legendFormatter') || Legend.defaultFormatter);\n  return formatter.call(g, data);\n}\n\nLegend.defaultFormatter = function(data) {\n  var g = data.dygraph;\n\n  // TODO(danvk): deprecate this option in place of {legend: 'never'}\n  // XXX should this logic be in the formatter?\n  if (g.getOption('showLabelsOnHighlight') !== true) return '';\n\n  var sepLines = g.getOption('labelsSeparateLines');\n  var html;\n\n  if (typeof(data.x) === 'undefined') {\n    // TODO: this check is duplicated in generateLegendHTML. Put it in one place.\n    if (g.getOption('legend') != 'always') {\n      return '';\n    }\n\n    html = '';\n    for (var i = 0; i < data.series.length; i++) {\n      var series = data.series[i];\n      if (!series.isVisible) continue;\n\n      if (html !== '') html += (sepLines ? '<br />' : ' ');\n      html += `<span style='font-weight: bold; color: ${series.color};'>${series.dashHTML} ${series.labelHTML}</span>`;\n    }\n    return html;\n  }\n\n  html = data.xHTML + ':';\n  for (var i = 0; i < data.series.length; i++) {\n    var series = data.series[i];\n    if (!series.y && !series.yHTML) continue;\n    if (!series.isVisible) continue;\n    if (sepLines) html += '<br>';\n    var cls = series.isHighlighted ? ' class=\"highlight\"' : '';\n    html += `<span${cls}> <b><span style='color: ${series.color};'>${series.labelHTML}</span></b>:&#160;${series.yHTML}</span>`;\n  }\n  return html;\n};\n\n/**\n * Generates html for the \"dash\" displayed on the legend when using \"legend: always\".\n * In particular, this works for dashed lines with any stroke pattern. It will\n * try to scale the pattern to fit in 1em width. Or if small enough repeat the\n * pattern for 1em width.\n *\n * @param strokePattern The pattern\n * @param color The color of the series.\n * @param oneEmWidth The width in pixels of 1em in the legend.\n * @private\n */\n// TODO(danvk): cache the results of this\nfunction generateLegendDashHTML(strokePattern, color, oneEmWidth) {\n  // Easy, common case: a solid line\n  if (!strokePattern || strokePattern.length <= 1) {\n    return `<div class=\"dygraph-legend-line\" style=\"border-bottom-color: ${color};\"></div>`;\n  }\n\n  var i, j, paddingLeft, marginRight;\n  var strokePixelLength = 0, segmentLoop = 0;\n  var normalizedPattern = [];\n  var loop;\n\n  // Compute the length of the pixels including the first segment twice,\n  // since we repeat it.\n  for (i = 0; i <= strokePattern.length; i++) {\n    strokePixelLength += strokePattern[i%strokePattern.length];\n  }\n\n  // See if we can loop the pattern by itself at least twice.\n  loop = Math.floor(oneEmWidth/(strokePixelLength-strokePattern[0]));\n  if (loop > 1) {\n    // This pattern fits at least two times, no scaling just convert to em;\n    for (i = 0; i < strokePattern.length; i++) {\n      normalizedPattern[i] = strokePattern[i]/oneEmWidth;\n    }\n    // Since we are repeating the pattern, we don't worry about repeating the\n    // first segment in one draw.\n    segmentLoop = normalizedPattern.length;\n  } else {\n    // If the pattern doesn't fit in the legend we scale it to fit.\n    loop = 1;\n    for (i = 0; i < strokePattern.length; i++) {\n      normalizedPattern[i] = strokePattern[i]/strokePixelLength;\n    }\n    // For the scaled patterns we do redraw the first segment.\n    segmentLoop = normalizedPattern.length+1;\n  }\n\n  // Now make the pattern.\n  var dash = \"\";\n  for (j = 0; j < loop; j++) {\n    for (i = 0; i < segmentLoop; i+=2) {\n      // The padding is the drawn segment.\n      paddingLeft = normalizedPattern[i%normalizedPattern.length];\n      if (i < strokePattern.length) {\n        // The margin is the space segment.\n        marginRight = normalizedPattern[(i+1)%normalizedPattern.length];\n      } else {\n        // The repeated first segment has no right margin.\n        marginRight = 0;\n      }\n      dash += `<div class=\"dygraph-legend-dash\" style=\"margin-right: ${marginRight}em; padding-left: ${paddingLeft}em;\"></div>`;\n    }\n  }\n  return dash;\n}\n\nexport default Legend;\n","/**\n * @license\n * Copyright 2011 Paul Felix (paul.eric.felix@gmail.com)\n * MIT-licenced: https://opensource.org/licenses/MIT\n */\n/*global Dygraph:false,TouchEvent:false */\n\n/**\n * @fileoverview This file contains the RangeSelector plugin used to provide\n * a timeline range selector widget for dygraphs.\n */\n\n/*global Dygraph:false */\n\"use strict\";\n\nimport * as utils from '../dygraph-utils';\nimport DygraphInteraction from '../dygraph-interaction-model';\nimport IFrameTarp from '../iframe-tarp';\n\nvar rangeSelector = function() {\n  this.hasTouchInterface_ = typeof(TouchEvent) != 'undefined';\n  this.isMobileDevice_ = /mobile|android/gi.test(navigator.appVersion);\n  this.interfaceCreated_ = false;\n};\n\nrangeSelector.prototype.toString = function() {\n  return \"RangeSelector Plugin\";\n};\n\nrangeSelector.prototype.activate = function(dygraph) {\n  this.dygraph_ = dygraph;\n  if (this.getOption_('showRangeSelector')) {\n    this.createInterface_();\n  }\n  return {\n    layout: this.reserveSpace_,\n    predraw: this.renderStaticLayer_,\n    didDrawChart: this.renderInteractiveLayer_\n  };\n};\n\nrangeSelector.prototype.destroy = function() {\n  this.bgcanvas_ = null;\n  this.fgcanvas_ = null;\n  this.leftZoomHandle_ = null;\n  this.rightZoomHandle_ = null;\n};\n\n//------------------------------------------------------------------\n// Private methods\n//------------------------------------------------------------------\n\nrangeSelector.prototype.getOption_ = function(name, opt_series) {\n  return this.dygraph_.getOption(name, opt_series);\n};\n\nrangeSelector.prototype.setDefaultOption_ = function(name, value) {\n  this.dygraph_.attrs_[name] = value;\n};\n\n/**\n * @private\n * Creates the range selector elements and adds them to the graph.\n */\nrangeSelector.prototype.createInterface_ = function() {\n  this.createCanvases_();\n  this.createZoomHandles_();\n  this.initInteraction_();\n\n  // Range selector and animatedZooms have a bad interaction. See issue 359.\n  if (this.getOption_('animatedZooms')) {\n    console.warn('Animated zooms and range selector are not compatible; disabling animatedZooms.');\n    this.dygraph_.updateOptions({animatedZooms: false}, true);\n  }\n\n  this.interfaceCreated_ = true;\n  this.addToGraph_();\n};\n\n/**\n * @private\n * Adds the range selector to the graph.\n */\nrangeSelector.prototype.addToGraph_ = function() {\n  var graphDiv = this.graphDiv_ = this.dygraph_.graphDiv;\n  graphDiv.appendChild(this.bgcanvas_);\n  graphDiv.appendChild(this.fgcanvas_);\n  graphDiv.appendChild(this.leftZoomHandle_);\n  graphDiv.appendChild(this.rightZoomHandle_);\n};\n\n/**\n * @private\n * Removes the range selector from the graph.\n */\nrangeSelector.prototype.removeFromGraph_ = function() {\n  var graphDiv = this.graphDiv_;\n  graphDiv.removeChild(this.bgcanvas_);\n  graphDiv.removeChild(this.fgcanvas_);\n  graphDiv.removeChild(this.leftZoomHandle_);\n  graphDiv.removeChild(this.rightZoomHandle_);\n  this.graphDiv_ = null;\n};\n\n/**\n * @private\n * Called by Layout to allow range selector to reserve its space.\n */\nrangeSelector.prototype.reserveSpace_ = function(e) {\n  if (this.getOption_('showRangeSelector')) {\n    e.reserveSpaceBottom(this.getOption_('rangeSelectorHeight') + 4);\n  }\n};\n\n/**\n * @private\n * Renders the static portion of the range selector at the predraw stage.\n */\nrangeSelector.prototype.renderStaticLayer_ = function() {\n  if (!this.updateVisibility_()) {\n    return;\n  }\n  this.resize_();\n  this.drawStaticLayer_();\n};\n\n/**\n * @private\n * Renders the interactive portion of the range selector after the chart has been drawn.\n */\nrangeSelector.prototype.renderInteractiveLayer_ = function() {\n  if (!this.updateVisibility_() || this.isChangingRange_) {\n    return;\n  }\n  this.placeZoomHandles_();\n  this.drawInteractiveLayer_();\n};\n\n/**\n * @private\n * Check to see if the range selector is enabled/disabled and update visibility accordingly.\n */\nrangeSelector.prototype.updateVisibility_ = function() {\n  var enabled = this.getOption_('showRangeSelector');\n  if (enabled) {\n    if (!this.interfaceCreated_) {\n      this.createInterface_();\n    } else if (!this.graphDiv_ || !this.graphDiv_.parentNode) {\n      this.addToGraph_();\n    }\n  } else if (this.graphDiv_) {\n    this.removeFromGraph_();\n    var dygraph = this.dygraph_;\n    setTimeout(function() { dygraph.width_ = 0; dygraph.resize(); }, 1);\n  }\n  return enabled;\n};\n\n/**\n * @private\n * Resizes the range selector.\n */\nrangeSelector.prototype.resize_ = function() {\n  function setElementRect(canvas, context, rect, pixelRatioOption) {\n    var canvasScale = pixelRatioOption || utils.getContextPixelRatio(context);\n\n    canvas.style.top = rect.y + 'px';\n    canvas.style.left = rect.x + 'px';\n    canvas.width = rect.w * canvasScale;\n    canvas.height = rect.h * canvasScale;\n    canvas.style.width = rect.w + 'px';\n    canvas.style.height = rect.h + 'px';\n\n    if(canvasScale != 1) {\n      context.scale(canvasScale, canvasScale);\n    }\n  }\n\n  var plotArea = this.dygraph_.layout_.getPlotArea();\n\n  var xAxisLabelHeight = 0;\n  if (this.dygraph_.getOptionForAxis('drawAxis', 'x')) {\n    xAxisLabelHeight = this.getOption_('xAxisHeight') || (this.getOption_('axisLabelFontSize') + 2 * this.getOption_('axisTickSize'));\n  }\n  this.canvasRect_ = {\n    x: plotArea.x,\n    y: plotArea.y + plotArea.h + xAxisLabelHeight + 4,\n    w: plotArea.w,\n    h: this.getOption_('rangeSelectorHeight')\n  };\n\n  var pixelRatioOption = this.dygraph_.getNumericOption('pixelRatio');\n  setElementRect(this.bgcanvas_, this.bgcanvas_ctx_, this.canvasRect_, pixelRatioOption);\n  setElementRect(this.fgcanvas_, this.fgcanvas_ctx_, this.canvasRect_, pixelRatioOption);\n};\n\n/**\n * @private\n * Creates the background and foreground canvases.\n */\nrangeSelector.prototype.createCanvases_ = function() {\n  this.bgcanvas_ = utils.createCanvas();\n  this.bgcanvas_.className = 'dygraph-rangesel-bgcanvas';\n  this.bgcanvas_.style.position = 'absolute';\n  this.bgcanvas_.style.zIndex = 9;\n  this.bgcanvas_ctx_ = utils.getContext(this.bgcanvas_);\n\n  this.fgcanvas_ = utils.createCanvas();\n  this.fgcanvas_.className = 'dygraph-rangesel-fgcanvas';\n  this.fgcanvas_.style.position = 'absolute';\n  this.fgcanvas_.style.zIndex = 9;\n  this.fgcanvas_.style.cursor = 'default';\n  this.fgcanvas_ctx_ = utils.getContext(this.fgcanvas_);\n};\n\n/**\n * @private\n * Creates the zoom handle elements.\n */\nrangeSelector.prototype.createZoomHandles_ = function() {\n  var img = new Image();\n  img.className = 'dygraph-rangesel-zoomhandle';\n  img.style.position = 'absolute';\n  img.style.zIndex = 10;\n  img.style.visibility = 'hidden'; // Initially hidden so they don't show up in the wrong place.\n  img.style.cursor = 'col-resize';\n  // TODO: change image to more options\n  img.width = 9;\n  img.height = 16;\n  img.src = 'data:image/png;base64,' +\n'iVBORw0KGgoAAAANSUhEUgAAAAkAAAAQCAYAAADESFVDAAAAAXNSR0IArs4c6QAAAAZiS0dEANAA' +\n'zwDP4Z7KegAAAAlwSFlzAAAOxAAADsQBlSsOGwAAAAd0SU1FB9sHGw0cMqdt1UwAAAAZdEVYdENv' +\n'bW1lbnQAQ3JlYXRlZCB3aXRoIEdJTVBXgQ4XAAAAaElEQVQoz+3SsRFAQBCF4Z9WJM8KCDVwownl' +\n'6YXsTmCUsyKGkZzcl7zkz3YLkypgAnreFmDEpHkIwVOMfpdi9CEEN2nGpFdwD03yEqDtOgCaun7s' +\n'qSTDH32I1pQA2Pb9sZecAxc5r3IAb21d6878xsAAAAAASUVORK5CYII=';\n\n  if (this.isMobileDevice_) {\n    img.width *= 2;\n    img.height *= 2;\n  }\n\n  this.leftZoomHandle_ = img;\n  this.rightZoomHandle_ = img.cloneNode(false);\n};\n\n/**\n * @private\n * Sets up the interaction for the range selector.\n */\nrangeSelector.prototype.initInteraction_ = function() {\n  var self = this;\n  var topElem = document;\n  var clientXLast = 0;\n  var handle = null;\n  var isZooming = false;\n  var isPanning = false;\n  var dynamic = !this.isMobileDevice_;\n\n  // We cover iframes during mouse interactions. See comments in\n  // dygraph-utils.js for more info on why this is a good idea.\n  var tarp = new IFrameTarp();\n\n  // functions, defined below.  Defining them this way (rather than with\n  // \"function foo() {...}\") makes JSHint happy.\n  var toXDataWindow, onZoomStart, onZoom, onZoomEnd, doZoom, isMouseInPanZone,\n      onPanStart, onPan, onPanEnd, doPan, onCanvasHover;\n\n  // Touch event functions\n  var onZoomHandleTouchEvent, onCanvasTouchEvent, addTouchEvents;\n\n  toXDataWindow = function(zoomHandleStatus) {\n    var xDataLimits = self.dygraph_.xAxisExtremes();\n    var fact = (xDataLimits[1] - xDataLimits[0])/self.canvasRect_.w;\n    var xDataMin = xDataLimits[0] + (zoomHandleStatus.leftHandlePos - self.canvasRect_.x)*fact;\n    var xDataMax = xDataLimits[0] + (zoomHandleStatus.rightHandlePos - self.canvasRect_.x)*fact;\n    return [xDataMin, xDataMax];\n  };\n\n  onZoomStart = function(e) {\n    utils.cancelEvent(e);\n    isZooming = true;\n    clientXLast = e.clientX;\n    handle = e.target ? e.target : e.srcElement;\n    if (e.type === 'mousedown' || e.type === 'dragstart') {\n      // These events are removed manually.\n      utils.addEvent(topElem, 'mousemove', onZoom);\n      utils.addEvent(topElem, 'mouseup', onZoomEnd);\n    }\n    self.fgcanvas_.style.cursor = 'col-resize';\n    tarp.cover();\n    return true;\n  };\n\n  onZoom = function(e) {\n    if (!isZooming) {\n      return false;\n    }\n    utils.cancelEvent(e);\n\n    var delX = e.clientX - clientXLast;\n    if (Math.abs(delX) < 4) {\n      return true;\n    }\n    clientXLast = e.clientX;\n\n    // Move handle.\n    var zoomHandleStatus = self.getZoomHandleStatus_();\n    var newPos;\n    if (handle == self.leftZoomHandle_) {\n      newPos = zoomHandleStatus.leftHandlePos + delX;\n      newPos = Math.min(newPos, zoomHandleStatus.rightHandlePos - handle.width - 3);\n      newPos = Math.max(newPos, self.canvasRect_.x);\n    } else {\n      newPos = zoomHandleStatus.rightHandlePos + delX;\n      newPos = Math.min(newPos, self.canvasRect_.x + self.canvasRect_.w);\n      newPos = Math.max(newPos, zoomHandleStatus.leftHandlePos + handle.width + 3);\n    }\n    var halfHandleWidth = handle.width/2;\n    handle.style.left = (newPos - halfHandleWidth) + 'px';\n    self.drawInteractiveLayer_();\n\n    // Zoom on the fly.\n    if (dynamic) {\n      doZoom();\n    }\n    return true;\n  };\n\n  onZoomEnd = function(e) {\n    if (!isZooming) {\n      return false;\n    }\n    isZooming = false;\n    tarp.uncover();\n    utils.removeEvent(topElem, 'mousemove', onZoom);\n    utils.removeEvent(topElem, 'mouseup', onZoomEnd);\n    self.fgcanvas_.style.cursor = 'default';\n\n    // If on a slower device, zoom now.\n    if (!dynamic) {\n      doZoom();\n    }\n    return true;\n  };\n\n  doZoom = function() {\n    try {\n      var zoomHandleStatus = self.getZoomHandleStatus_();\n      self.isChangingRange_ = true;\n      if (!zoomHandleStatus.isZoomed) {\n        self.dygraph_.resetZoom();\n      } else {\n        var xDataWindow = toXDataWindow(zoomHandleStatus);\n        self.dygraph_.doZoomXDates_(xDataWindow[0], xDataWindow[1]);\n      }\n    } finally {\n      self.isChangingRange_ = false;\n    }\n  };\n\n  isMouseInPanZone = function(e) {\n    var rect = self.leftZoomHandle_.getBoundingClientRect();\n    var leftHandleClientX = rect.left + rect.width/2;\n    rect = self.rightZoomHandle_.getBoundingClientRect();\n    var rightHandleClientX = rect.left + rect.width/2;\n    return (e.clientX > leftHandleClientX && e.clientX < rightHandleClientX);\n  };\n\n  onPanStart = function(e) {\n    if (!isPanning && isMouseInPanZone(e) && self.getZoomHandleStatus_().isZoomed) {\n      utils.cancelEvent(e);\n      isPanning = true;\n      clientXLast = e.clientX;\n      if (e.type === 'mousedown') {\n        // These events are removed manually.\n        utils.addEvent(topElem, 'mousemove', onPan);\n        utils.addEvent(topElem, 'mouseup', onPanEnd);\n      }\n      return true;\n    }\n    return false;\n  };\n\n  onPan = function(e) {\n    if (!isPanning) {\n      return false;\n    }\n    utils.cancelEvent(e);\n\n    var delX = e.clientX - clientXLast;\n    if (Math.abs(delX) < 4) {\n      return true;\n    }\n    clientXLast = e.clientX;\n\n    // Move range view\n    var zoomHandleStatus = self.getZoomHandleStatus_();\n    var leftHandlePos = zoomHandleStatus.leftHandlePos;\n    var rightHandlePos = zoomHandleStatus.rightHandlePos;\n    var rangeSize = rightHandlePos - leftHandlePos;\n    if (leftHandlePos + delX <= self.canvasRect_.x) {\n      leftHandlePos = self.canvasRect_.x;\n      rightHandlePos = leftHandlePos + rangeSize;\n    } else if (rightHandlePos + delX >= self.canvasRect_.x + self.canvasRect_.w) {\n      rightHandlePos = self.canvasRect_.x + self.canvasRect_.w;\n      leftHandlePos = rightHandlePos - rangeSize;\n    } else {\n      leftHandlePos += delX;\n      rightHandlePos += delX;\n    }\n    var halfHandleWidth = self.leftZoomHandle_.width/2;\n    self.leftZoomHandle_.style.left = (leftHandlePos - halfHandleWidth) + 'px';\n    self.rightZoomHandle_.style.left = (rightHandlePos - halfHandleWidth) + 'px';\n    self.drawInteractiveLayer_();\n\n    // Do pan on the fly.\n    if (dynamic) {\n      doPan();\n    }\n    return true;\n  };\n\n  onPanEnd = function(e) {\n    if (!isPanning) {\n      return false;\n    }\n    isPanning = false;\n    utils.removeEvent(topElem, 'mousemove', onPan);\n    utils.removeEvent(topElem, 'mouseup', onPanEnd);\n    // If on a slower device, do pan now.\n    if (!dynamic) {\n      doPan();\n    }\n    return true;\n  };\n\n  doPan = function() {\n    try {\n      self.isChangingRange_ = true;\n      self.dygraph_.dateWindow_ = toXDataWindow(self.getZoomHandleStatus_());\n      self.dygraph_.drawGraph_(false);\n    } finally {\n      self.isChangingRange_ = false;\n    }\n  };\n\n  onCanvasHover = function(e) {\n    if (isZooming || isPanning) {\n      return;\n    }\n    var cursor = isMouseInPanZone(e) ? 'move' : 'default';\n    if (cursor != self.fgcanvas_.style.cursor) {\n      self.fgcanvas_.style.cursor = cursor;\n    }\n  };\n\n  onZoomHandleTouchEvent = function(e) {\n    if (e.type == 'touchstart' && e.targetTouches.length == 1) {\n      if (onZoomStart(e.targetTouches[0])) {\n        utils.cancelEvent(e);\n      }\n    } else if (e.type == 'touchmove' && e.targetTouches.length == 1) {\n      if (onZoom(e.targetTouches[0])) {\n        utils.cancelEvent(e);\n      }\n    } else {\n      onZoomEnd(e);\n    }\n  };\n\n  onCanvasTouchEvent = function(e) {\n    if (e.type == 'touchstart' && e.targetTouches.length == 1) {\n      if (onPanStart(e.targetTouches[0])) {\n        utils.cancelEvent(e);\n      }\n    } else if (e.type == 'touchmove' && e.targetTouches.length == 1) {\n      if (onPan(e.targetTouches[0])) {\n        utils.cancelEvent(e);\n      }\n    } else {\n      onPanEnd(e);\n    }\n  };\n\n  addTouchEvents = function(elem, fn) {\n    var types = ['touchstart', 'touchend', 'touchmove', 'touchcancel'];\n    for (var i = 0; i < types.length; i++) {\n      self.dygraph_.addAndTrackEvent(elem, types[i], fn);\n    }\n  };\n\n  this.setDefaultOption_('interactionModel', DygraphInteraction.dragIsPanInteractionModel);\n  this.setDefaultOption_('panEdgeFraction', 0.0001);\n\n  var dragStartEvent = window.opera ? 'mousedown' : 'dragstart';\n  this.dygraph_.addAndTrackEvent(this.leftZoomHandle_, dragStartEvent, onZoomStart);\n  this.dygraph_.addAndTrackEvent(this.rightZoomHandle_, dragStartEvent, onZoomStart);\n\n  this.dygraph_.addAndTrackEvent(this.fgcanvas_, 'mousedown', onPanStart);\n  this.dygraph_.addAndTrackEvent(this.fgcanvas_, 'mousemove', onCanvasHover);\n\n  // Touch events\n  if (this.hasTouchInterface_) {\n    addTouchEvents(this.leftZoomHandle_, onZoomHandleTouchEvent);\n    addTouchEvents(this.rightZoomHandle_, onZoomHandleTouchEvent);\n    addTouchEvents(this.fgcanvas_, onCanvasTouchEvent);\n  }\n};\n\n/**\n * @private\n * Draws the static layer in the background canvas.\n */\nrangeSelector.prototype.drawStaticLayer_ = function() {\n  var ctx = this.bgcanvas_ctx_;\n  ctx.clearRect(0, 0, this.canvasRect_.w, this.canvasRect_.h);\n  try {\n    this.drawMiniPlot_();\n  } catch(ex) {\n    console.warn(ex);\n  }\n\n  var margin = 0.5;\n  this.bgcanvas_ctx_.lineWidth = this.getOption_('rangeSelectorBackgroundLineWidth');\n  ctx.strokeStyle = this.getOption_('rangeSelectorBackgroundStrokeColor');\n  ctx.beginPath();\n  ctx.moveTo(margin, margin);\n  ctx.lineTo(margin, this.canvasRect_.h-margin);\n  ctx.lineTo(this.canvasRect_.w-margin, this.canvasRect_.h-margin);\n  ctx.lineTo(this.canvasRect_.w-margin, margin);\n  ctx.stroke();\n};\n\n/**\n * @private\n * Draws the mini plot in the background canvas.\n */\nrangeSelector.prototype.drawMiniPlot_ = function() {\n  var fillStyle = this.getOption_('rangeSelectorPlotFillColor');\n  var fillGradientStyle = this.getOption_('rangeSelectorPlotFillGradientColor');\n  var strokeStyle = this.getOption_('rangeSelectorPlotStrokeColor');\n  if (!fillStyle && !strokeStyle) {\n    return;\n  }\n\n  var stepPlot = this.getOption_('stepPlot');\n\n  var combinedSeriesData = this.computeCombinedSeriesAndLimits_();\n  var yRange = combinedSeriesData.yMax - combinedSeriesData.yMin;\n\n  // Draw the mini plot.\n  var ctx = this.bgcanvas_ctx_;\n  var margin = 0.5;\n\n  var xExtremes = this.dygraph_.xAxisExtremes();\n  var xRange = Math.max(xExtremes[1] - xExtremes[0], 1.e-30);\n  var xFact = (this.canvasRect_.w - margin)/xRange;\n  var yFact = (this.canvasRect_.h - margin)/yRange;\n  var canvasWidth = this.canvasRect_.w - margin;\n  var canvasHeight = this.canvasRect_.h - margin;\n\n  var prevX = null, prevY = null;\n\n  ctx.beginPath();\n  ctx.moveTo(margin, canvasHeight);\n  for (var i = 0; i < combinedSeriesData.data.length; i++) {\n    var dataPoint = combinedSeriesData.data[i];\n    var x = ((dataPoint[0] !== null) ? ((dataPoint[0] - xExtremes[0])*xFact) : NaN);\n    var y = ((dataPoint[1] !== null) ? (canvasHeight - (dataPoint[1] - combinedSeriesData.yMin)*yFact) : NaN);\n\n    // Skip points that don't change the x-value. Overly fine-grained points\n    // can cause major slowdowns with the ctx.fill() call below.\n    if (!stepPlot && prevX !== null && Math.round(x) == Math.round(prevX)) {\n      continue;\n    }\n\n    if (isFinite(x) && isFinite(y)) {\n      if(prevX === null) {\n        ctx.lineTo(x, canvasHeight);\n      }\n      else if (stepPlot) {\n        ctx.lineTo(x, prevY);\n      }\n      ctx.lineTo(x, y);\n      prevX = x;\n      prevY = y;\n    }\n    else {\n      if(prevX !== null) {\n        if (stepPlot) {\n          ctx.lineTo(x, prevY);\n          ctx.lineTo(x, canvasHeight);\n        }\n        else {\n          ctx.lineTo(prevX, canvasHeight);\n        }\n      }\n      prevX = prevY = null;\n    }\n  }\n  ctx.lineTo(canvasWidth, canvasHeight);\n  ctx.closePath();\n\n  if (fillStyle) {\n    var lingrad = this.bgcanvas_ctx_.createLinearGradient(0, 0, 0, canvasHeight);\n    if (fillGradientStyle) {\n      lingrad.addColorStop(0, fillGradientStyle);\n    }\n    lingrad.addColorStop(1, fillStyle);\n    this.bgcanvas_ctx_.fillStyle = lingrad;\n    ctx.fill();\n  }\n\n  if (strokeStyle) {\n    this.bgcanvas_ctx_.strokeStyle = strokeStyle;\n    this.bgcanvas_ctx_.lineWidth = this.getOption_('rangeSelectorPlotLineWidth');\n    ctx.stroke();\n  }\n};\n\n/**\n * @private\n * Computes and returns the combined series data along with min/max for the mini plot.\n * The combined series consists of averaged values for all series.\n * When series have error bars, the error bars are ignored.\n * @return {Object} An object containing combined series array, ymin, ymax.\n */\nrangeSelector.prototype.computeCombinedSeriesAndLimits_ = function() {\n  var g = this.dygraph_;\n  var logscale = this.getOption_('logscale');\n  var i;\n\n  // Select series to combine. By default, all series are combined.\n  var numColumns = g.numColumns();\n  var labels = g.getLabels();\n  var includeSeries = new Array(numColumns);\n  var anySet = false;\n  var visibility = g.visibility();\n  var inclusion = [];\n\n  for (i = 1; i < numColumns; i++) {\n    var include = this.getOption_('showInRangeSelector', labels[i]);\n    inclusion.push(include);\n    if (include !== null) anySet = true;  // it's set explicitly for this series\n  }\n\n  if (anySet) {\n    for (i = 1; i < numColumns; i++) {\n      includeSeries[i] = inclusion[i - 1];\n    }\n  } else {\n    for (i = 1; i < numColumns; i++) {\n      includeSeries[i] = visibility[i - 1];\n    }\n  }\n\n  // Create a combined series (average of selected series values).\n  // TODO(danvk): short-circuit if there's only one series.\n  var rolledSeries = [];\n  var dataHandler = g.dataHandler_;\n  var options = g.attributes_;\n  for (i = 1; i < g.numColumns(); i++) {\n    if (!includeSeries[i]) continue;\n    var series = dataHandler.extractSeries(g.rawData_, i, options);\n    if (g.rollPeriod() > 1) {\n      series = dataHandler.rollingAverage(series, g.rollPeriod(), options, i);\n    }\n\n    rolledSeries.push(series);\n  }\n\n  var combinedSeries = [];\n  for (i = 0; i < rolledSeries[0].length; i++) {\n    var sum = 0;\n    var count = 0;\n    for (var j = 0; j < rolledSeries.length; j++) {\n      var y = rolledSeries[j][i][1];\n      if (y === null || isNaN(y)) continue;\n      count++;\n      sum += y;\n    }\n    combinedSeries.push([rolledSeries[0][i][0], sum / count]);\n  }\n\n  // Compute the y range.\n  var yMin = Number.MAX_VALUE;\n  var yMax = -Number.MAX_VALUE;\n  for (i = 0; i < combinedSeries.length; i++) {\n    var yVal = combinedSeries[i][1];\n    if (yVal !== null && isFinite(yVal) && (!logscale || yVal > 0)) {\n      yMin = Math.min(yMin, yVal);\n      yMax = Math.max(yMax, yVal);\n    }\n  }\n\n  // Convert Y data to log scale if needed.\n  // Also, expand the Y range to compress the mini plot a little.\n  var extraPercent = 0.25;\n  if (logscale) {\n    yMax = utils.log10(yMax);\n    yMax += yMax*extraPercent;\n    yMin = utils.log10(yMin);\n    for (i = 0; i < combinedSeries.length; i++) {\n      combinedSeries[i][1] = utils.log10(combinedSeries[i][1]);\n    }\n  } else {\n    var yExtra;\n    var yRange = yMax - yMin;\n    if (yRange <= Number.MIN_VALUE) {\n      yExtra = yMax*extraPercent;\n    } else {\n      yExtra = yRange*extraPercent;\n    }\n    yMax += yExtra;\n    yMin -= yExtra;\n  }\n\n  return {data: combinedSeries, yMin: yMin, yMax: yMax};\n};\n\n/**\n * @private\n * Places the zoom handles in the proper position based on the current X data window.\n */\nrangeSelector.prototype.placeZoomHandles_ = function() {\n  var xExtremes = this.dygraph_.xAxisExtremes();\n  var xWindowLimits = this.dygraph_.xAxisRange();\n  var xRange = xExtremes[1] - xExtremes[0];\n  var leftPercent = Math.max(0, (xWindowLimits[0] - xExtremes[0])/xRange);\n  var rightPercent = Math.max(0, (xExtremes[1] - xWindowLimits[1])/xRange);\n  var leftCoord = this.canvasRect_.x + this.canvasRect_.w*leftPercent;\n  var rightCoord = this.canvasRect_.x + this.canvasRect_.w*(1 - rightPercent);\n  var handleTop = Math.max(this.canvasRect_.y, this.canvasRect_.y + (this.canvasRect_.h - this.leftZoomHandle_.height)/2);\n  var halfHandleWidth = this.leftZoomHandle_.width/2;\n  this.leftZoomHandle_.style.left = (leftCoord - halfHandleWidth) + 'px';\n  this.leftZoomHandle_.style.top = handleTop + 'px';\n  this.rightZoomHandle_.style.left = (rightCoord - halfHandleWidth) + 'px';\n  this.rightZoomHandle_.style.top = this.leftZoomHandle_.style.top;\n\n  this.leftZoomHandle_.style.visibility = 'visible';\n  this.rightZoomHandle_.style.visibility = 'visible';\n};\n\n/**\n * @private\n * Draws the interactive layer in the foreground canvas.\n */\nrangeSelector.prototype.drawInteractiveLayer_ = function() {\n  var ctx = this.fgcanvas_ctx_;\n  ctx.clearRect(0, 0, this.canvasRect_.w, this.canvasRect_.h);\n  var margin = 1;\n  var width = this.canvasRect_.w - margin;\n  var height = this.canvasRect_.h - margin;\n  var zoomHandleStatus = this.getZoomHandleStatus_();\n\n  ctx.strokeStyle = this.getOption_('rangeSelectorForegroundStrokeColor');\n  ctx.lineWidth = this.getOption_('rangeSelectorForegroundLineWidth');\n  if (!zoomHandleStatus.isZoomed) {\n    ctx.beginPath();\n    ctx.moveTo(margin, margin);\n    ctx.lineTo(margin, height);\n    ctx.lineTo(width, height);\n    ctx.lineTo(width, margin);\n    ctx.stroke();\n  } else {\n    var leftHandleCanvasPos = Math.max(margin, zoomHandleStatus.leftHandlePos - this.canvasRect_.x);\n    var rightHandleCanvasPos = Math.min(width, zoomHandleStatus.rightHandlePos - this.canvasRect_.x);\n\n    const veilColour = this.getOption_('rangeSelectorVeilColour');\n    ctx.fillStyle = veilColour ? veilColour :\n      ('rgba(240, 240, 240, ' + this.getOption_('rangeSelectorAlpha').toString() + ')');\n    ctx.fillRect(0, 0, leftHandleCanvasPos, this.canvasRect_.h);\n    ctx.fillRect(rightHandleCanvasPos, 0, this.canvasRect_.w - rightHandleCanvasPos, this.canvasRect_.h);\n\n    ctx.beginPath();\n    ctx.moveTo(margin, margin);\n    ctx.lineTo(leftHandleCanvasPos, margin);\n    ctx.lineTo(leftHandleCanvasPos, height);\n    ctx.lineTo(rightHandleCanvasPos, height);\n    ctx.lineTo(rightHandleCanvasPos, margin);\n    ctx.lineTo(width, margin);\n    ctx.stroke();\n  }\n};\n\n/**\n * @private\n * Returns the current zoom handle position information.\n * @return {Object} The zoom handle status.\n */\nrangeSelector.prototype.getZoomHandleStatus_ = function() {\n  var halfHandleWidth = this.leftZoomHandle_.width/2;\n  var leftHandlePos = parseFloat(this.leftZoomHandle_.style.left) + halfHandleWidth;\n  var rightHandlePos = parseFloat(this.rightZoomHandle_.style.left) + halfHandleWidth;\n  return {\n      leftHandlePos: leftHandlePos,\n      rightHandlePos: rightHandlePos,\n      isZoomed: (leftHandlePos - 1 > this.canvasRect_.x || rightHandlePos + 1 < this.canvasRect_.x+this.canvasRect_.w)\n  };\n};\n\nexport default rangeSelector;\n","/**\n * @license\n * Copyright 2011 Dan Vanderkam (danvdk@gmail.com)\n * MIT-licenced: https://opensource.org/licenses/MIT\n */\n\n/**\n * @fileoverview A wrapper around the Dygraph class which implements the\n * interface for a GViz (aka Google Visualization API) visualization.\n * It is designed to be a drop-in replacement for Google's AnnotatedTimeline,\n * so the documentation at\n * http://code.google.com/apis/chart/interactive/docs/gallery/annotatedtimeline.html\n * translates over directly.\n *\n * For a full demo, see:\n * - http://dygraphs.com/tests/gviz.html\n * - http://dygraphs.com/tests/annotation-gviz.html\n */\n\n/*global Dygraph:false */\n\"use strict\";\n\nimport Dygraph from './dygraph';\n\n/**\n * A wrapper around Dygraph that implements the gviz API.\n * @param {!HTMLDivElement} container The DOM object the visualization should\n *     live in.\n * @constructor\n */\nvar GVizChart = function(container) {\n  this.container = container;\n};\n\n/**\n * @param {GVizDataTable} data\n * @param {Object.<*>} options\n */\nGVizChart.prototype.draw = function(data, options) {\n  // Clear out any existing dygraph.\n  // TODO(danvk): would it make more sense to simply redraw using the current\n  // date_graph object?\n  this.container.innerHTML = '';\n  if (typeof(this.date_graph) != 'undefined') {\n    this.date_graph.destroy();\n  }\n\n  this.date_graph = new Dygraph(this.container, data, options);\n};\n\n/**\n * Google charts compatible setSelection\n * Only row selection is supported, all points in the row will be highlighted\n * @param {Array.<{row:number}>} selection_array array of the selected cells\n * @public\n */\nGVizChart.prototype.setSelection = function(selection_array) {\n  var row = false;\n  if (selection_array.length) {\n    row = selection_array[0].row;\n  }\n  this.date_graph.setSelection(row);\n};\n\n/**\n * Google charts compatible getSelection implementation\n * @return {Array.<{row:number,column:number}>} array of the selected cells\n * @public\n */\nGVizChart.prototype.getSelection = function() {\n  var selection = [];\n\n  var row = this.date_graph.getSelection();\n\n  if (row < 0) return selection;\n\n  var points = this.date_graph.layout_.points;\n  for (var setIdx = 0; setIdx < points.length; ++setIdx) {\n    selection.push({row: row, column: setIdx + 1});\n  }\n\n  return selection;\n};\n\nexport default GVizChart;\n","/**\n * @license\n * Copyright 2006 Dan Vanderkam (danvdk@gmail.com)\n * MIT-licenced: https://opensource.org/licenses/MIT\n */\n\n/**\n * @fileoverview Creates an interactive, zoomable graph based on a CSV file or\n * string. Dygraph can handle multiple series with or without high/low bands.\n * The date/value ranges will be automatically set. Dygraph uses the\n * &lt;canvas&gt; tag, so it only works in FF1.5+.\n * See the source or https://dygraphs.com/ for more information.\n * @author danvdk@gmail.com (Dan Vanderkam)\n */\n\n/*\n  Usage:\n   <div id=\"graphdiv\" style=\"width:800px; height:500px;\"></div>\n   <script type=\"text/javascript\"><!--//--><![CDATA[//><!--\n   $(function onDOMready() {\n     new Dygraph(document.getElementById(\"graphdiv\"),\n                 \"datafile.csv\",  // CSV file with headers\n                 { }); // options\n   });\n   //--><!]]></script>\n\n The CSV file is of the form\n\n   Date,SeriesA,SeriesB,SeriesC\n   YYYY-MM-DD,A1,B1,C1\n   YYYY-MM-DD,A2,B2,C2\n\n If the 'errorBars' option is set in the constructor, the input should be of\n the form\n   Date,SeriesA,SeriesB,...\n   YYYY-MM-DD,A1,sigmaA1,B1,sigmaB1,...\n   YYYY-MM-DD,A2,sigmaA2,B2,sigmaB2,...\n\n If the 'fractions' option is set, the input should be of the form:\n\n   Date,SeriesA,SeriesB,...\n   YYYY-MM-DD,A1/B1,A2/B2,...\n   YYYY-MM-DD,A1/B1,A2/B2,...\n\n And high/low bands will be calculated automatically using a binomial distribution.\n\n For further documentation and examples, see http://dygraphs.com/\n */\n\nimport DygraphLayout from './dygraph-layout';\nimport DygraphCanvasRenderer from './dygraph-canvas';\nimport DygraphOptions from './dygraph-options';\nimport DygraphInteraction from './dygraph-interaction-model';\nimport * as DygraphTickers from './dygraph-tickers';\nimport * as utils from './dygraph-utils';\nimport DEFAULT_ATTRS from './dygraph-default-attrs';\nimport OPTIONS_REFERENCE from './dygraph-options-reference';\nimport IFrameTarp from './iframe-tarp';\n\nimport DefaultHandler from './datahandler/default';\nimport ErrorBarsHandler from './datahandler/bars-error';\nimport CustomBarsHandler from './datahandler/bars-custom';\nimport DefaultFractionHandler from './datahandler/default-fractions';\nimport FractionsBarsHandler from './datahandler/bars-fractions';\nimport BarsHandler from './datahandler/bars';\n\nimport AnnotationsPlugin from './plugins/annotations';\nimport AxesPlugin from './plugins/axes';\nimport ChartLabelsPlugin from './plugins/chart-labels';\nimport GridPlugin from './plugins/grid';\nimport LegendPlugin from './plugins/legend';\nimport RangeSelectorPlugin from './plugins/range-selector';\n\nimport GVizChart from './dygraph-gviz';\n\n\"use strict\";\n\n/**\n * @class Creates an interactive, zoomable chart.\n * @name Dygraph\n *\n * @constructor\n * @param {div | String} div A div or the id of a div into which to construct\n * the chart. Must not have any padding.\n * @param {String | Function} file A file containing CSV data or a function\n * that returns this data. The most basic expected format for each line is\n * \"YYYY/MM/DD,val1,val2,...\". For more information, see\n * http://dygraphs.com/data.html.\n * @param {Object} attrs Various other attributes, e.g. errorBars determines\n * whether the input data contains error ranges. For a complete list of\n * options, see http://dygraphs.com/options.html.\n */\nvar Dygraph = function Dygraph(div, data, opts) {\n  this.__init__(div, data, opts);\n};\n\nDygraph.NAME = \"Dygraph\";\nDygraph.VERSION = \"2.2.1\";\n\n// internal autoloader workaround\nvar _addrequire = {};\nDygraph._require = function require(what) {\n  return (what in _addrequire ? _addrequire[what] : Dygraph._require._b(what));\n};\nDygraph._require._b = null; // set by xfrmmodmap-dy.js\nDygraph._require.add = function add(what, towhat) {\n  _addrequire[what] = towhat;\n};\n\n// Various default values\nDygraph.DEFAULT_ROLL_PERIOD = 1;\nDygraph.DEFAULT_WIDTH = 480;\nDygraph.DEFAULT_HEIGHT = 320;\n\n// For max 60 Hz. animation:\nDygraph.ANIMATION_STEPS = 12;\nDygraph.ANIMATION_DURATION = 200;\n\n/**\n * Standard plotters. These may be used by clients.\n * Available plotters are:\n * - Dygraph.Plotters.linePlotter: draws central lines (most common)\n * - Dygraph.Plotters.errorPlotter: draws high/low bands\n * - Dygraph.Plotters.fillPlotter: draws fills under lines (used with fillGraph)\n *\n * By default, the plotter is [fillPlotter, errorPlotter, linePlotter].\n * This causes all the lines to be drawn over all the fills/bands.\n */\nDygraph.Plotters = DygraphCanvasRenderer._Plotters;\n\n// Used for initializing annotation CSS rules only once.\nDygraph.addedAnnotationCSS = false;\n\n/**\n * Initializes the Dygraph. This creates a new DIV and constructs the PlotKit\n * and context &lt;canvas&gt; inside of it. See the constructor for details.\n * on the parameters.\n * @param {Element} div the Element to render the graph into.\n * @param {string | Function} file Source data\n * @param {Object} attrs Miscellaneous other options\n * @private\n */\nDygraph.prototype.__init__ = function(div, file, attrs) {\n  this.is_initial_draw_ = true;\n  this.readyFns_ = [];\n\n  // Support two-argument constructor\n  if (attrs === null || attrs === undefined) { attrs = {}; }\n\n  attrs = Dygraph.copyUserAttrs_(attrs);\n\n  if (typeof(div) == 'string') {\n    div = document.getElementById(div);\n  }\n\n  if (!div) {\n    throw new Error('Constructing dygraph with a non-existent div!');\n  }\n\n  // Copy the important bits into the object\n  // TODO(danvk): most of these should just stay in the attrs_ dictionary.\n  this.maindiv_ = div;\n  this.file_ = file;\n  this.rollPeriod_ = attrs.rollPeriod || Dygraph.DEFAULT_ROLL_PERIOD;\n  this.previousVerticalX_ = -1;\n  this.fractions_ = attrs.fractions || false;\n  this.dateWindow_ = attrs.dateWindow || null;\n\n  this.annotations_ = [];\n\n  // Clear the div. This ensure that, if multiple dygraphs are passed the same\n  // div, then only one will be drawn.\n  div.innerHTML = \"\";\n\n  const resolved = window.getComputedStyle(div, null);\n  if (resolved.paddingLeft !== \"0px\" ||\n      resolved.paddingRight !== \"0px\" ||\n      resolved.paddingTop !== \"0px\" ||\n      resolved.paddingBottom !== \"0px\")\n    console.error('Main div contains padding; graph will misbehave');\n\n  // For historical reasons, the 'width' and 'height' options trump all CSS\n  // rules _except_ for an explicit 'width' or 'height' on the div.\n  // As an added convenience, if the div has zero height (like <div></div> does\n  // without any styles), then we use a default height/width.\n  if (div.style.width === '' && attrs.width) {\n    div.style.width = attrs.width + \"px\";\n  }\n  if (div.style.height === '' && attrs.height) {\n    div.style.height = attrs.height + \"px\";\n  }\n  if (div.style.height === '' && div.clientHeight === 0) {\n    div.style.height = Dygraph.DEFAULT_HEIGHT + \"px\";\n    if (div.style.width === '') {\n      div.style.width = Dygraph.DEFAULT_WIDTH + \"px\";\n    }\n  }\n  // These will be zero if the dygraph's div is hidden. In that case,\n  // use the user-specified attributes if present. If not, use zero\n  // and assume the user will call resize to fix things later.\n  this.width_ = div.clientWidth || attrs.width || 0;\n  this.height_ = div.clientHeight || attrs.height || 0;\n\n  // TODO(danvk): set fillGraph to be part of attrs_ here, not user_attrs_.\n  if (attrs.stackedGraph) {\n    attrs.fillGraph = true;\n    // TODO(nikhilk): Add any other stackedGraph checks here.\n  }\n\n  // DEPRECATION WARNING: All option processing should be moved from\n  // attrs_ and user_attrs_ to options_, which holds all this information.\n  //\n  // Dygraphs has many options, some of which interact with one another.\n  // To keep track of everything, we maintain two sets of options:\n  //\n  //  this.user_attrs_   only options explicitly set by the user.\n  //  this.attrs_        defaults, options derived from user_attrs_, data.\n  //\n  // Options are then accessed this.attr_('attr'), which first looks at\n  // user_attrs_ and then computed attrs_. This way Dygraphs can set intelligent\n  // defaults without overriding behavior that the user specifically asks for.\n  this.user_attrs_ = {};\n  utils.update(this.user_attrs_, attrs);\n\n  // This sequence ensures that Dygraph.DEFAULT_ATTRS is never modified.\n  this.attrs_ = {};\n  utils.updateDeep(this.attrs_, DEFAULT_ATTRS);\n\n  this.boundaryIds_ = [];\n  this.setIndexByName_ = {};\n  this.datasetIndex_ = [];\n\n  this.registeredEvents_ = [];\n  this.eventListeners_ = {};\n\n  this.attributes_ = new DygraphOptions(this);\n\n  // Create the containing DIV and other interactive elements\n  this.createInterface_();\n\n  // Activate plugins.\n  this.plugins_ = [];\n  var plugins = Dygraph.PLUGINS.concat(this.getOption('plugins'));\n  for (var i = 0; i < plugins.length; i++) {\n    // the plugins option may contain either plugin classes or instances.\n    // Plugin instances contain an activate method.\n    var Plugin = plugins[i];  // either a constructor or an instance.\n    var pluginInstance;\n    if (typeof(Plugin.activate) !== 'undefined') {\n      pluginInstance = Plugin;\n    } else {\n      pluginInstance = new Plugin();\n    }\n\n    var pluginDict = {\n      plugin: pluginInstance,\n      events: {},\n      options: {},\n      pluginOptions: {}\n    };\n\n    var handlers = pluginInstance.activate(this);\n    for (var eventName in handlers) {\n      if (!handlers.hasOwnProperty(eventName)) continue;\n      // TODO(danvk): validate eventName.\n      pluginDict.events[eventName] = handlers[eventName];\n    }\n\n    this.plugins_.push(pluginDict);\n  }\n\n  // At this point, plugins can no longer register event handlers.\n  // Construct a map from event -> ordered list of [callback, plugin].\n  for (var i = 0; i < this.plugins_.length; i++) {\n    var plugin_dict = this.plugins_[i];\n    for (var eventName in plugin_dict.events) {\n      if (!plugin_dict.events.hasOwnProperty(eventName)) continue;\n      var callback = plugin_dict.events[eventName];\n\n      var pair = [plugin_dict.plugin, callback];\n      if (!(eventName in this.eventListeners_)) {\n        this.eventListeners_[eventName] = [pair];\n      } else {\n        this.eventListeners_[eventName].push(pair);\n      }\n    }\n  }\n\n  this.createDragInterface_();\n\n  this.start_();\n};\n\n/**\n * Triggers a cascade of events to the various plugins which are interested in them.\n * Returns true if the \"default behavior\" should be prevented, i.e. if one\n * of the event listeners called event.preventDefault().\n * @private\n */\nDygraph.prototype.cascadeEvents_ = function(name, extra_props) {\n  if (!(name in this.eventListeners_)) return false;\n\n  // QUESTION: can we use objects & prototypes to speed this up?\n  var e = {\n    dygraph: this,\n    cancelable: false,\n    defaultPrevented: false,\n    preventDefault: function() {\n      if (!e.cancelable) throw \"Cannot call preventDefault on non-cancelable event.\";\n      e.defaultPrevented = true;\n    },\n    propagationStopped: false,\n    stopPropagation: function() {\n      e.propagationStopped = true;\n    }\n  };\n  utils.update(e, extra_props);\n\n  var callback_plugin_pairs = this.eventListeners_[name];\n  if (callback_plugin_pairs) {\n    for (var i = callback_plugin_pairs.length - 1; i >= 0; i--) {\n      var plugin = callback_plugin_pairs[i][0];\n      var callback = callback_plugin_pairs[i][1];\n      callback.call(plugin, e);\n      if (e.propagationStopped) break;\n    }\n  }\n  return e.defaultPrevented;\n};\n\n/**\n * Fetch a plugin instance of a particular class. Only for testing.\n * @private\n * @param {!Class} type The type of the plugin.\n * @return {Object} Instance of the plugin, or null if there is none.\n */\nDygraph.prototype.getPluginInstance_ = function(type) {\n  for (var i = 0; i < this.plugins_.length; i++) {\n    var p = this.plugins_[i];\n    if (p.plugin instanceof type) {\n      return p.plugin;\n    }\n  }\n  return null;\n};\n\n/**\n * Returns the zoomed status of the chart for one or both axes.\n *\n * Axis is an optional parameter. Can be set to 'x' or 'y'.\n *\n * The zoomed status for an axis is set whenever a user zooms using the mouse\n * or when the dateWindow or valueRange are updated. Double-clicking or calling\n * resetZoom() resets the zoom status for the chart.\n */\nDygraph.prototype.isZoomed = function(axis) {\n  const isZoomedX = !!this.dateWindow_;\n  if (axis === 'x') return isZoomedX;\n\n  const isZoomedY = this.axes_.map(axis => !!axis.valueRange).indexOf(true) >= 0;\n  if (axis === null || axis === undefined) {\n    return isZoomedX || isZoomedY;\n  }\n  if (axis === 'y') return isZoomedY;\n\n  throw new Error(`axis parameter is [${axis}] must be null, 'x' or 'y'.`);\n};\n\n/**\n * Returns information about the Dygraph object, including its containing ID.\n */\nDygraph.prototype.toString = function() {\n  var maindiv = this.maindiv_;\n  var id = (maindiv && maindiv.id) ? maindiv.id : maindiv;\n  return \"[Dygraph \" + id + \"]\";\n};\n\n/**\n * @private\n * Returns the value of an option. This may be set by the user (either in the\n * constructor or by calling updateOptions) or by dygraphs, and may be set to a\n * per-series value.\n * @param {string} name The name of the option, e.g. 'rollPeriod'.\n * @param {string} [seriesName] The name of the series to which the option\n * will be applied. If no per-series value of this option is available, then\n * the global value is returned. This is optional.\n * @return {...} The value of the option.\n */\nDygraph.prototype.attr_ = function(name, seriesName) {\n  if (typeof process !== 'undefined' && process.env.NODE_ENV != 'production') {\n    // For \"production\" code, this gets removed by uglifyjs.\n    if (typeof(OPTIONS_REFERENCE) === 'undefined') {\n      console.error('Must include options reference JS for testing');\n    } else if (!OPTIONS_REFERENCE.hasOwnProperty(name)) {\n      console.error('Dygraphs is using property ' + name + ', which has no ' +\n                    'entry in the Dygraphs.OPTIONS_REFERENCE listing.');\n      // Only log this error once.\n      OPTIONS_REFERENCE[name] = true;\n    }\n  }\n  return seriesName ? this.attributes_.getForSeries(name, seriesName) : this.attributes_.get(name);\n};\n\n/**\n * Returns the current value for an option, as set in the constructor or via\n * updateOptions. You may pass in an (optional) series name to get per-series\n * values for the option.\n *\n * All values returned by this method should be considered immutable. If you\n * modify them, there is no guarantee that the changes will be honored or that\n * dygraphs will remain in a consistent state. If you want to modify an option,\n * use updateOptions() instead.\n *\n * @param {string} name The name of the option (e.g. 'strokeWidth')\n * @param {string=} opt_seriesName Series name to get per-series values.\n * @return {*} The value of the option.\n */\nDygraph.prototype.getOption = function(name, opt_seriesName) {\n  return this.attr_(name, opt_seriesName);\n};\n\n/**\n * Like getOption(), but specifically returns a number.\n * This is a convenience function for working with the Closure Compiler.\n * @param {string} name The name of the option (e.g. 'strokeWidth')\n * @param {string=} opt_seriesName Series name to get per-series values.\n * @return {number} The value of the option.\n * @private\n */\nDygraph.prototype.getNumericOption = function(name, opt_seriesName) {\n  return /** @type{number} */(this.getOption(name, opt_seriesName));\n};\n\n/**\n * Like getOption(), but specifically returns a string.\n * This is a convenience function for working with the Closure Compiler.\n * @param {string} name The name of the option (e.g. 'strokeWidth')\n * @param {string=} opt_seriesName Series name to get per-series values.\n * @return {string} The value of the option.\n * @private\n */\nDygraph.prototype.getStringOption = function(name, opt_seriesName) {\n  return /** @type{string} */(this.getOption(name, opt_seriesName));\n};\n\n/**\n * Like getOption(), but specifically returns a boolean.\n * This is a convenience function for working with the Closure Compiler.\n * @param {string} name The name of the option (e.g. 'strokeWidth')\n * @param {string=} opt_seriesName Series name to get per-series values.\n * @return {boolean} The value of the option.\n * @private\n */\nDygraph.prototype.getBooleanOption = function(name, opt_seriesName) {\n  return /** @type{boolean} */(this.getOption(name, opt_seriesName));\n};\n\n/**\n * Like getOption(), but specifically returns a function.\n * This is a convenience function for working with the Closure Compiler.\n * @param {string} name The name of the option (e.g. 'strokeWidth')\n * @param {string=} opt_seriesName Series name to get per-series values.\n * @return {function(...)} The value of the option.\n * @private\n */\nDygraph.prototype.getFunctionOption = function(name, opt_seriesName) {\n  return /** @type{function(...)} */(this.getOption(name, opt_seriesName));\n};\n\nDygraph.prototype.getOptionForAxis = function(name, axis) {\n  return this.attributes_.getForAxis(name, axis);\n};\n\n/**\n * @private\n * @param {string} axis The name of the axis (i.e. 'x', 'y' or 'y2')\n * @return {...} A function mapping string -> option value\n */\nDygraph.prototype.optionsViewForAxis_ = function(axis) {\n  var self = this;\n  return function(opt) {\n    var axis_opts = self.user_attrs_.axes;\n    if (axis_opts && axis_opts[axis] && axis_opts[axis].hasOwnProperty(opt)) {\n      return axis_opts[axis][opt];\n    }\n\n    // I don't like that this is in a second spot.\n    if (axis === 'x' && opt === 'logscale') {\n      // return the default value.\n      // TODO(konigsberg): pull the default from a global default.\n      return false;\n    }\n\n    // user-specified attributes always trump defaults, even if they're less\n    // specific.\n    if (typeof(self.user_attrs_[opt]) != 'undefined') {\n      return self.user_attrs_[opt];\n    }\n\n    axis_opts = self.attrs_.axes;\n    if (axis_opts && axis_opts[axis] && axis_opts[axis].hasOwnProperty(opt)) {\n      return axis_opts[axis][opt];\n    }\n    // check old-style axis options\n    // TODO(danvk): add a deprecation warning if either of these match.\n    if (axis == 'y' && self.axes_[0].hasOwnProperty(opt)) {\n      return self.axes_[0][opt];\n    } else if (axis == 'y2' && self.axes_[1].hasOwnProperty(opt)) {\n      return self.axes_[1][opt];\n    }\n    return self.attr_(opt);\n  };\n};\n\n/**\n * Returns the current rolling period, as set by the user or an option.\n * @return {number} The number of points in the rolling window\n */\nDygraph.prototype.rollPeriod = function() {\n  return this.rollPeriod_;\n};\n\n/**\n * Returns the currently-visible x-range. This can be affected by zooming,\n * panning or a call to updateOptions.\n * Returns a two-element array: [left, right].\n * If the Dygraph has dates on the x-axis, these will be millis since epoch.\n */\nDygraph.prototype.xAxisRange = function() {\n  return this.dateWindow_ ? this.dateWindow_ : this.xAxisExtremes();\n};\n\n/**\n * Returns the lower- and upper-bound x-axis values of the data set.\n */\nDygraph.prototype.xAxisExtremes = function() {\n  var pad = this.getNumericOption('xRangePad') / this.plotter_.area.w;\n  if (this.numRows() === 0) {\n    return [0 - pad, 1 + pad];\n  }\n  var left = this.rawData_[0][0];\n  var right = this.rawData_[this.rawData_.length - 1][0];\n  if (pad) {\n    // Must keep this in sync with dygraph-layout _evaluateLimits()\n    var range = right - left;\n    left -= range * pad;\n    right += range * pad;\n  }\n  return [left, right];\n};\n\n/**\n * Returns the lower- and upper-bound y-axis values for each axis. These are\n * the ranges you'll get if you double-click to zoom out or call resetZoom().\n * The return value is an array of [low, high] tuples, one for each y-axis.\n */\nDygraph.prototype.yAxisExtremes = function() {\n  // TODO(danvk): this is pretty inefficient\n  const packed = this.gatherDatasets_(this.rolledSeries_, null);\n  const { extremes } = packed;\n  const saveAxes = this.axes_;\n  this.computeYAxisRanges_(extremes);\n  const newAxes = this.axes_;\n  this.axes_ = saveAxes;\n  return newAxes.map(axis => axis.extremeRange);\n}\n\n/**\n * Returns the currently-visible y-range for an axis. This can be affected by\n * zooming, panning or a call to updateOptions. Axis indices are zero-based. If\n * called with no arguments, returns the range of the first axis.\n * Returns a two-element array: [bottom, top].\n */\nDygraph.prototype.yAxisRange = function(idx) {\n  if (typeof(idx) == \"undefined\") idx = 0;\n  if (idx < 0 || idx >= this.axes_.length) {\n    return null;\n  }\n  var axis = this.axes_[idx];\n  return [ axis.computedValueRange[0], axis.computedValueRange[1] ];\n};\n\n/**\n * Returns the currently-visible y-ranges for each axis. This can be affected by\n * zooming, panning, calls to updateOptions, etc.\n * Returns an array of [bottom, top] pairs, one for each y-axis.\n */\nDygraph.prototype.yAxisRanges = function() {\n  var ret = [];\n  for (var i = 0; i < this.axes_.length; i++) {\n    ret.push(this.yAxisRange(i));\n  }\n  return ret;\n};\n\n// TODO(danvk): use these functions throughout dygraphs.\n/**\n * Convert from data coordinates to canvas/div X/Y coordinates.\n * If specified, do this conversion for the coordinate system of a particular\n * axis. Uses the first axis by default.\n * Returns a two-element array: [X, Y]\n *\n * Note: use toDomXCoord instead of toDomCoords(x, null) and use toDomYCoord\n * instead of toDomCoords(null, y, axis).\n */\nDygraph.prototype.toDomCoords = function(x, y, axis) {\n  return [ this.toDomXCoord(x), this.toDomYCoord(y, axis) ];\n};\n\n/**\n * Convert from data x coordinates to canvas/div X coordinate.\n * If specified, do this conversion for the coordinate system of a particular\n * axis.\n * Returns a single value or null if x is null.\n */\nDygraph.prototype.toDomXCoord = function(x) {\n  if (x === null) {\n    return null;\n  }\n\n  var area = this.plotter_.area;\n  var xRange = this.xAxisRange();\n  return area.x + (x - xRange[0]) / (xRange[1] - xRange[0]) * area.w;\n};\n\n/**\n * Convert from data x coordinates to canvas/div Y coordinate and optional\n * axis. Uses the first axis by default.\n *\n * returns a single value or null if y is null.\n */\nDygraph.prototype.toDomYCoord = function(y, axis) {\n  var pct = this.toPercentYCoord(y, axis);\n\n  if (pct === null) {\n    return null;\n  }\n  var area = this.plotter_.area;\n  return area.y + pct * area.h;\n};\n\n/**\n * Convert from canvas/div coords to data coordinates.\n * If specified, do this conversion for the coordinate system of a particular\n * axis. Uses the first axis by default.\n * Returns a two-element array: [X, Y].\n *\n * Note: use toDataXCoord instead of toDataCoords(x, null) and use toDataYCoord\n * instead of toDataCoords(null, y, axis).\n */\nDygraph.prototype.toDataCoords = function(x, y, axis) {\n  return [ this.toDataXCoord(x), this.toDataYCoord(y, axis) ];\n};\n\n/**\n * Convert from canvas/div x coordinate to data coordinate.\n *\n * If x is null, this returns null.\n */\nDygraph.prototype.toDataXCoord = function(x) {\n  if (x === null) {\n    return null;\n  }\n\n  var area = this.plotter_.area;\n  var xRange = this.xAxisRange();\n\n  if (!this.attributes_.getForAxis(\"logscale\", 'x')) {\n    return xRange[0] + (x - area.x) / area.w * (xRange[1] - xRange[0]);\n  } else {\n    var pct = (x - area.x) / area.w;\n    return utils.logRangeFraction(xRange[0], xRange[1], pct);\n  }\n};\n\n/**\n * Convert from canvas/div y coord to value.\n *\n * If y is null, this returns null.\n * if axis is null, this uses the first axis.\n */\nDygraph.prototype.toDataYCoord = function(y, axis) {\n  if (y === null) {\n    return null;\n  }\n\n  var area = this.plotter_.area;\n  var yRange = this.yAxisRange(axis);\n\n  if (typeof(axis) == \"undefined\") axis = 0;\n  if (!this.attributes_.getForAxis(\"logscale\", axis)) {\n    return yRange[0] + (area.y + area.h - y) / area.h * (yRange[1] - yRange[0]);\n  } else {\n    // Computing the inverse of toDomCoord.\n    var pct = (y - area.y) / area.h;\n    // Note reversed yRange, y1 is on top with pct==0.\n    return utils.logRangeFraction(yRange[1], yRange[0], pct);\n  }\n};\n\n/**\n * Converts a y for an axis to a percentage from the top to the\n * bottom of the drawing area.\n *\n * If the coordinate represents a value visible on the canvas, then\n * the value will be between 0 and 1, where 0 is the top of the canvas.\n * However, this method will return values outside the range, as\n * values can fall outside the canvas.\n *\n * If y is null, this returns null.\n * if axis is null, this uses the first axis.\n *\n * @param {number} y The data y-coordinate.\n * @param {number} [axis] The axis number on which the data coordinate lives.\n * @return {number} A fraction in [0, 1] where 0 = the top edge.\n */\nDygraph.prototype.toPercentYCoord = function(y, axis) {\n  if (y === null) {\n    return null;\n  }\n  if (typeof(axis) == \"undefined\") axis = 0;\n\n  var yRange = this.yAxisRange(axis);\n\n  var pct;\n  var logscale = this.attributes_.getForAxis(\"logscale\", axis);\n  if (logscale) {\n    var logr0 = utils.log10(yRange[0]);\n    var logr1 = utils.log10(yRange[1]);\n    pct = (logr1 - utils.log10(y)) / (logr1 - logr0);\n  } else {\n    // yRange[1] - y is unit distance from the bottom.\n    // yRange[1] - yRange[0] is the scale of the range.\n    // (yRange[1] - y) / (yRange[1] - yRange[0]) is the % from the bottom.\n    pct = (yRange[1] - y) / (yRange[1] - yRange[0]);\n  }\n  return pct;\n};\n\n/**\n * Converts an x value to a percentage from the left to the right of\n * the drawing area.\n *\n * If the coordinate represents a value visible on the canvas, then\n * the value will be between 0 and 1, where 0 is the left of the canvas.\n * However, this method will return values outside the range, as\n * values can fall outside the canvas.\n *\n * If x is null, this returns null.\n * @param {number} x The data x-coordinate.\n * @return {number} A fraction in [0, 1] where 0 = the left edge.\n */\nDygraph.prototype.toPercentXCoord = function(x) {\n  if (x === null) {\n    return null;\n  }\n\n  var xRange = this.xAxisRange();\n  var pct;\n  var logscale = this.attributes_.getForAxis(\"logscale\", 'x') ;\n  if (logscale === true) {  // logscale can be null so we test for true explicitly.\n    var logr0 = utils.log10(xRange[0]);\n    var logr1 = utils.log10(xRange[1]);\n    pct = (utils.log10(x) - logr0) / (logr1 - logr0);\n  } else {\n    // x - xRange[0] is unit distance from the left.\n    // xRange[1] - xRange[0] is the scale of the range.\n    // The full expression below is the % from the left.\n    pct = (x - xRange[0]) / (xRange[1] - xRange[0]);\n  }\n  return pct;\n};\n\n/**\n * Returns the number of columns (including the independent variable).\n * @return {number} The number of columns.\n */\nDygraph.prototype.numColumns = function() {\n  if (!this.rawData_) return 0;\n  return this.rawData_[0] ? this.rawData_[0].length : this.attr_(\"labels\").length;\n};\n\n/**\n * Returns the number of rows (excluding any header/label row).\n * @return {number} The number of rows, less any header.\n */\nDygraph.prototype.numRows = function() {\n  if (!this.rawData_) return 0;\n  return this.rawData_.length;\n};\n\n/**\n * Returns the value in the given row and column. If the row and column exceed\n * the bounds on the data, returns null. Also returns null if the value is\n * missing.\n * @param {number} row The row number of the data (0-based). Row 0 is the\n *     first row of data, not a header row.\n * @param {number} col The column number of the data (0-based)\n * @return {number} The value in the specified cell or null if the row/col\n *     were out of range.\n */\nDygraph.prototype.getValue = function(row, col) {\n  if (row < 0 || row >= this.rawData_.length) return null;\n  if (col < 0 || col >= this.rawData_[row].length) return null;\n\n  return this.rawData_[row][col];\n};\n\n/**\n * Generates interface elements for the Dygraph: a containing div, a div to\n * display the current point, and a textbox to adjust the rolling average\n * period. Also creates the Renderer/Layout elements.\n * @private\n */\nDygraph.prototype.createInterface_ = function() {\n  // Create the all-enclosing graph div\n  var enclosing = this.maindiv_;\n\n  this.graphDiv = document.createElement(\"div\");\n\n  // TODO(danvk): any other styles that are useful to set here?\n  this.graphDiv.style.textAlign = 'left';  // This is a CSS \"reset\"\n  this.graphDiv.style.position = 'relative';\n  enclosing.appendChild(this.graphDiv);\n\n  // Create the canvas for interactive parts of the chart.\n  this.canvas_ = utils.createCanvas();\n  this.canvas_.style.position = \"absolute\";\n  this.canvas_.style.top = 0;\n  this.canvas_.style.left = 0;\n\n  // ... and for static parts of the chart.\n  this.hidden_ = this.createPlotKitCanvas_(this.canvas_);\n\n  this.canvas_ctx_ = utils.getContext(this.canvas_);\n  this.hidden_ctx_ = utils.getContext(this.hidden_);\n\n  this.resizeElements_();\n\n  // The interactive parts of the graph are drawn on top of the chart.\n  this.graphDiv.appendChild(this.hidden_);\n  this.graphDiv.appendChild(this.canvas_);\n  this.mouseEventElement_ = this.createMouseEventElement_();\n\n  // Create the grapher\n  this.layout_ = new DygraphLayout(this);\n\n  var dygraph = this;\n\n  this.mouseMoveHandler_ = function(e) {\n    dygraph.mouseMove_(e);\n  };\n\n  this.mouseOutHandler_ = function(e) {\n    // The mouse has left the chart if:\n    // 1. e.target is inside the chart\n    // 2. e.relatedTarget is outside the chart\n    var target = e.target || e.fromElement;\n    var relatedTarget = e.relatedTarget || e.toElement;\n    if (utils.isNodeContainedBy(target, dygraph.graphDiv) &&\n        !utils.isNodeContainedBy(relatedTarget, dygraph.graphDiv)) {\n      dygraph.mouseOut_(e);\n    }\n  };\n\n  this.addAndTrackEvent(window, 'mouseout', this.mouseOutHandler_);\n  this.addAndTrackEvent(this.mouseEventElement_, 'mousemove', this.mouseMoveHandler_);\n\n  // Don't recreate and register the resize handler on subsequent calls.\n  // This happens when the graph is resized.\n  if (!this.resizeHandler_) {\n    this.resizeHandler_ = function(e) {\n      dygraph.resize();\n    };\n\n    // Update when the window is resized.\n    // TODO(danvk): drop frames depending on complexity of the chart.\n    this.addAndTrackEvent(window, 'resize', this.resizeHandler_);\n\n    this.resizeObserver_ = null;\n    var resizeMode = this.getStringOption('resizable');\n    if ((typeof(ResizeObserver) === 'undefined') &&\n        (resizeMode !== \"no\")) {\n      console.error('ResizeObserver unavailable; ignoring resizable property');\n      resizeMode = \"no\";\n    }\n    if (resizeMode === \"horizontal\" ||\n        resizeMode === \"vertical\" ||\n        resizeMode === \"both\") {\n      enclosing.style.resize = resizeMode;\n    } else if (resizeMode !== \"passive\") {\n      resizeMode = \"no\";\n    }\n    if (resizeMode !== \"no\") {\n      const maindivOverflow = window.getComputedStyle(enclosing).overflow;\n      if (window.getComputedStyle(enclosing).overflow === 'visible')\n        enclosing.style.overflow = 'hidden';\n      this.resizeObserver_ = new ResizeObserver(this.resizeHandler_);\n      this.resizeObserver_.observe(enclosing);\n    }\n  }\n};\n\nDygraph.prototype.resizeElements_ = function() {\n  this.graphDiv.style.width = this.width_ + \"px\";\n  this.graphDiv.style.height = this.height_ + \"px\";\n\n  var pixelRatioOption = this.getNumericOption('pixelRatio')\n\n  var canvasScale = pixelRatioOption || utils.getContextPixelRatio(this.canvas_ctx_);\n  this.canvas_.width = this.width_ * canvasScale;\n  this.canvas_.height = this.height_ * canvasScale;\n  this.canvas_.style.width = this.width_ + \"px\";    // for IE\n  this.canvas_.style.height = this.height_ + \"px\";  // for IE\n  if (canvasScale !== 1) {\n    this.canvas_ctx_.scale(canvasScale, canvasScale);\n  }\n\n  var hiddenScale = pixelRatioOption || utils.getContextPixelRatio(this.hidden_ctx_);\n  this.hidden_.width = this.width_ * hiddenScale;\n  this.hidden_.height = this.height_ * hiddenScale;\n  this.hidden_.style.width = this.width_ + \"px\";    // for IE\n  this.hidden_.style.height = this.height_ + \"px\";  // for IE\n  if (hiddenScale !== 1) {\n    this.hidden_ctx_.scale(hiddenScale, hiddenScale);\n  }\n};\n\n/**\n * Detach DOM elements in the dygraph and null out all data references.\n * Calling this when you're done with a dygraph can dramatically reduce memory\n * usage. See, e.g., the tests/perf.html example.\n */\nDygraph.prototype.destroy = function() {\n  this.canvas_ctx_.restore();\n  this.hidden_ctx_.restore();\n\n  // Destroy any plugins, in the reverse order that they were registered.\n  for (var i = this.plugins_.length - 1; i >= 0; i--) {\n    var p = this.plugins_.pop();\n    if (p.plugin.destroy) p.plugin.destroy();\n  }\n\n  var removeRecursive = function(node) {\n    while (node.hasChildNodes()) {\n      removeRecursive(node.firstChild);\n      node.removeChild(node.firstChild);\n    }\n  };\n\n  this.removeTrackedEvents_();\n\n  // remove mouse event handlers (This may not be necessary anymore)\n  utils.removeEvent(window, 'mouseout', this.mouseOutHandler_);\n  utils.removeEvent(this.mouseEventElement_, 'mousemove', this.mouseMoveHandler_);\n\n  // dispose of resizing handlers\n  if (this.resizeObserver_) {\n    this.resizeObserver_.disconnect();\n    this.resizeObserver_ = null;\n  }\n  utils.removeEvent(window, 'resize', this.resizeHandler_);\n  this.resizeHandler_ = null;\n\n  removeRecursive(this.maindiv_);\n\n  var nullOut = function nullOut(obj) {\n    for (var n in obj) {\n      if (typeof(obj[n]) === 'object') {\n        obj[n] = null;\n      }\n    }\n  };\n  // These may not all be necessary, but it can't hurt...\n  nullOut(this.layout_);\n  nullOut(this.plotter_);\n  nullOut(this);\n};\n\n/**\n * Creates the canvas on which the chart will be drawn. Only the Renderer ever\n * draws on this particular canvas. All Dygraph work (i.e. drawing hover dots\n * or the zoom rectangles) is done on this.canvas_.\n * @param {Object} canvas The Dygraph canvas over which to overlay the plot\n * @return {Object} The newly-created canvas\n * @private\n */\nDygraph.prototype.createPlotKitCanvas_ = function(canvas) {\n  var h = utils.createCanvas();\n  h.style.position = \"absolute\";\n  // TODO(danvk): h should be offset from canvas. canvas needs to include\n  // some extra area to make it easier to zoom in on the far left and far\n  // right. h needs to be precisely the plot area, so that clipping occurs.\n  h.style.top = canvas.style.top;\n  h.style.left = canvas.style.left;\n  h.width = this.width_;\n  h.height = this.height_;\n  h.style.width = this.width_ + \"px\";    // for IE\n  h.style.height = this.height_ + \"px\";  // for IE\n  return h;\n};\n\n/**\n * Creates an overlay element used to handle mouse events.\n * @return {Object} The mouse event element.\n * @private\n */\nDygraph.prototype.createMouseEventElement_ = function() {\n  return this.canvas_;\n};\n\n/**\n * Generate a set of distinct colors for the data series. This is done with a\n * color wheel. Saturation/Value are customizable, and the hue is\n * equally-spaced around the color wheel. If a custom set of colors is\n * specified, that is used instead.\n * @private\n */\nDygraph.prototype.setColors_ = function() {\n  var labels = this.getLabels();\n  var num = labels.length - 1;\n  this.colors_ = [];\n  this.colorsMap_ = {};\n\n  // These are used for when no custom colors are specified.\n  var sat = this.getNumericOption('colorSaturation') || 1.0;\n  var val = this.getNumericOption('colorValue') || 0.5;\n  var half = Math.ceil(num / 2);\n\n  var colors = this.getOption('colors');\n  var visibility = this.visibility();\n  for (var i = 0; i < num; i++) {\n    if (!visibility[i]) {\n      continue;\n    }\n    var label = labels[i + 1];\n    var colorStr = this.attributes_.getForSeries('color', label);\n    if (!colorStr) {\n      if (colors) {\n        colorStr = colors[i % colors.length];\n      } else {\n        // alternate colors for high contrast.\n        var idx = i % 2 ? (half + (i + 1)/ 2) : Math.ceil((i + 1) / 2);\n        var hue = (1.0 * idx / (1 + num));\n        colorStr = utils.hsvToRGB(hue, sat, val);\n      }\n    }\n    this.colors_.push(colorStr);\n    this.colorsMap_[label] = colorStr;\n  }\n};\n\n/**\n * Return the list of colors. This is either the list of colors passed in the\n * attributes or the autogenerated list of rgb(r,g,b) strings.\n * This does not return colors for invisible series.\n * @return {Array.<string>} The list of colors.\n */\nDygraph.prototype.getColors = function() {\n  return this.colors_;\n};\n\n/**\n * Returns a few attributes of a series, i.e. its color, its visibility, which\n * axis it's assigned to, and its column in the original data.\n * Returns null if the series does not exist.\n * Otherwise, returns an object with column, visibility, color and axis properties.\n * The \"axis\" property will be set to 1 for y1 and 2 for y2.\n * The \"column\" property can be fed back into getValue(row, column) to get\n * values for this series.\n */\nDygraph.prototype.getPropertiesForSeries = function(series_name) {\n  var idx = -1;\n  var labels = this.getLabels();\n  for (var i = 1; i < labels.length; i++) {\n    if (labels[i] == series_name) {\n      idx = i;\n      break;\n    }\n  }\n  if (idx == -1) return null;\n\n  return {\n    name: series_name,\n    column: idx,\n    visible: this.visibility()[idx - 1],\n    color: this.colorsMap_[series_name],\n    axis: 1 + this.attributes_.axisForSeries(series_name)\n  };\n};\n\n/**\n * Create the text box to adjust the averaging period\n * @private\n */\nDygraph.prototype.createRollInterface_ = function() {\n  // Create a roller if one doesn't exist already.\n  var roller = this.roller_;\n  if (!roller) {\n    this.roller_ = roller = document.createElement(\"input\");\n    roller.type = \"text\";\n    roller.style.display = \"none\";\n    roller.className = 'dygraph-roller';\n    this.graphDiv.appendChild(roller);\n  }\n\n  var display = this.getBooleanOption('showRoller') ? 'block' : 'none';\n\n  var area = this.getArea();\n  var textAttr = {\n                   \"top\": (area.y + area.h - 25) + \"px\",\n                   \"left\": (area.x + 1) + \"px\",\n                   \"display\": display\n                 };\n  roller.size = \"2\";\n  roller.value = this.rollPeriod_;\n  utils.update(roller.style, textAttr);\n\n  const that = this;\n  roller.onchange = function onchange() {\n    return that.adjustRoll(roller.value);\n  };\n};\n\n/**\n * Set up all the mouse handlers needed to capture dragging behavior for zoom\n * events.\n * @private\n */\nDygraph.prototype.createDragInterface_ = function() {\n  var context = {\n    // Tracks whether the mouse is down right now\n    isZooming: false,\n    isPanning: false,  // is this drag part of a pan?\n    is2DPan: false,    // if so, is that pan 1- or 2-dimensional?\n    dragStartX: null, // pixel coordinates\n    dragStartY: null, // pixel coordinates\n    dragEndX: null, // pixel coordinates\n    dragEndY: null, // pixel coordinates\n    dragDirection: null,\n    prevEndX: null, // pixel coordinates\n    prevEndY: null, // pixel coordinates\n    prevDragDirection: null,\n    cancelNextDblclick: false,  // see comment in dygraph-interaction-model.js\n\n    // The value on the left side of the graph when a pan operation starts.\n    initialLeftmostDate: null,\n\n    // The number of units each pixel spans. (This won't be valid for log\n    // scales)\n    xUnitsPerPixel: null,\n\n    // TODO(danvk): update this comment\n    // The range in second/value units that the viewport encompasses during a\n    // panning operation.\n    dateRange: null,\n\n    // Top-left corner of the canvas, in DOM coords\n    // TODO(konigsberg): Rename topLeftCanvasX, topLeftCanvasY.\n    px: 0,\n    py: 0,\n\n    // Values for use with panEdgeFraction, which limit how far outside the\n    // graph's data boundaries it can be panned.\n    boundedDates: null, // [minDate, maxDate]\n    boundedValues: null, // [[minValue, maxValue] ...]\n\n    // We cover iframes during mouse interactions. See comments in\n    // dygraph-utils.js for more info on why this is a good idea.\n    tarp: new IFrameTarp(),\n\n    // contextB is the same thing as this context object but renamed.\n    initializeMouseDown: function(event, g, contextB) {\n      // prevents mouse drags from selecting page text.\n      if (event.preventDefault) {\n        event.preventDefault();  // Firefox, Chrome, etc.\n      } else {\n        event.returnValue = false;  // IE\n        event.cancelBubble = true;\n      }\n\n      var canvasPos = utils.findPos(g.canvas_);\n      contextB.px = canvasPos.x;\n      contextB.py = canvasPos.y;\n      contextB.dragStartX = utils.dragGetX_(event, contextB);\n      contextB.dragStartY = utils.dragGetY_(event, contextB);\n      contextB.cancelNextDblclick = false;\n      contextB.tarp.cover();\n    },\n    destroy: function() {\n      var context = this;\n      if (context.isZooming || context.isPanning) {\n        context.isZooming = false;\n        context.dragStartX = null;\n        context.dragStartY = null;\n      }\n\n      if (context.isPanning) {\n        context.isPanning = false;\n        context.draggingDate = null;\n        context.dateRange = null;\n        for (var i = 0; i < self.axes_.length; i++) {\n          delete self.axes_[i].draggingValue;\n          delete self.axes_[i].dragValueRange;\n        }\n      }\n\n      context.tarp.uncover();\n    }\n  };\n\n  var interactionModel = this.getOption(\"interactionModel\");\n\n  // Self is the graph.\n  var self = this;\n\n  // Function that binds the graph and context to the handler.\n  var bindHandler = function(handler) {\n    return function(event) {\n      handler(event, self, context);\n    };\n  };\n\n  for (var eventName in interactionModel) {\n    if (!interactionModel.hasOwnProperty(eventName)) continue;\n    this.addAndTrackEvent(this.mouseEventElement_, eventName,\n        bindHandler(interactionModel[eventName]));\n  }\n\n  // If the user releases the mouse button during a drag, but not over the\n  // canvas, then it doesn't count as a zooming action.\n  if (!interactionModel.willDestroyContextMyself) {\n    var mouseUpHandler = function(event) {\n      context.destroy();\n    };\n\n    this.addAndTrackEvent(document, 'mouseup', mouseUpHandler);\n  }\n};\n\n/**\n * Draw a gray zoom rectangle over the desired area of the canvas. Also clears\n * up any previous zoom rectangles that were drawn. This could be optimized to\n * avoid extra redrawing, but it's tricky to avoid interactions with the status\n * dots.\n *\n * @param {number} direction the direction of the zoom rectangle. Acceptable\n *     values are utils.HORIZONTAL and utils.VERTICAL.\n * @param {number} startX The X position where the drag started, in canvas\n *     coordinates.\n * @param {number} endX The current X position of the drag, in canvas coords.\n * @param {number} startY The Y position where the drag started, in canvas\n *     coordinates.\n * @param {number} endY The current Y position of the drag, in canvas coords.\n * @param {number} prevDirection the value of direction on the previous call to\n *     this function. Used to avoid excess redrawing\n * @param {number} prevEndX The value of endX on the previous call to this\n *     function. Used to avoid excess redrawing\n * @param {number} prevEndY The value of endY on the previous call to this\n *     function. Used to avoid excess redrawing\n * @private\n */\nDygraph.prototype.drawZoomRect_ = function(direction, startX, endX, startY,\n                                           endY, prevDirection, prevEndX,\n                                           prevEndY) {\n  var ctx = this.canvas_ctx_;\n\n  // Clean up from the previous rect if necessary\n  if (prevDirection == utils.HORIZONTAL) {\n    ctx.clearRect(Math.min(startX, prevEndX), this.layout_.getPlotArea().y,\n                  Math.abs(startX - prevEndX), this.layout_.getPlotArea().h);\n  } else if (prevDirection == utils.VERTICAL) {\n    ctx.clearRect(this.layout_.getPlotArea().x, Math.min(startY, prevEndY),\n                  this.layout_.getPlotArea().w, Math.abs(startY - prevEndY));\n  }\n\n  // Draw a light-grey rectangle to show the new viewing area\n  if (direction == utils.HORIZONTAL) {\n    if (endX && startX) {\n      ctx.fillStyle = \"rgba(128,128,128,0.33)\";\n      ctx.fillRect(Math.min(startX, endX), this.layout_.getPlotArea().y,\n                   Math.abs(endX - startX), this.layout_.getPlotArea().h);\n    }\n  } else if (direction == utils.VERTICAL) {\n    if (endY && startY) {\n      ctx.fillStyle = \"rgba(128,128,128,0.33)\";\n      ctx.fillRect(this.layout_.getPlotArea().x, Math.min(startY, endY),\n                   this.layout_.getPlotArea().w, Math.abs(endY - startY));\n    }\n  }\n};\n\n/**\n * Clear the zoom rectangle (and perform no zoom).\n * @private\n */\nDygraph.prototype.clearZoomRect_ = function() {\n  this.currentZoomRectArgs_ = null;\n  this.canvas_ctx_.clearRect(0, 0, this.width_, this.height_);\n};\n\n/**\n * Zoom to something containing [lowX, highX]. These are pixel coordinates in\n * the canvas. The exact zoom window may be slightly larger if there are no data\n * points near lowX or highX. Don't confuse this function with doZoomXDates,\n * which accepts dates that match the raw data. This function redraws the graph.\n *\n * @param {number} lowX The leftmost pixel value that should be visible.\n * @param {number} highX The rightmost pixel value that should be visible.\n * @private\n */\nDygraph.prototype.doZoomX_ = function(lowX, highX) {\n  this.currentZoomRectArgs_ = null;\n  // Find the earliest and latest dates contained in this canvasx range.\n  // Convert the call to date ranges of the raw data.\n  var minDate = this.toDataXCoord(lowX);\n  var maxDate = this.toDataXCoord(highX);\n  this.doZoomXDates_(minDate, maxDate);\n};\n\n/**\n * Zoom to something containing [minDate, maxDate] values. Don't confuse this\n * method with doZoomX which accepts pixel coordinates. This function redraws\n * the graph.\n *\n * @param {number} minDate The minimum date that should be visible.\n * @param {number} maxDate The maximum date that should be visible.\n * @private\n */\nDygraph.prototype.doZoomXDates_ = function(minDate, maxDate) {\n  // TODO(danvk): when xAxisRange is null (i.e. \"fit to data\", the animation\n  // can produce strange effects. Rather than the x-axis transitioning slowly\n  // between values, it can jerk around.)\n  var old_window = this.xAxisRange();\n  var new_window = [minDate, maxDate];\n  const zoomCallback = this.getFunctionOption('zoomCallback');\n  const that = this;\n  this.doAnimatedZoom(old_window, new_window, null, null, function animatedZoomCallback() {\n    if (zoomCallback) {\n      zoomCallback.call(that, minDate, maxDate, that.yAxisRanges());\n    }\n  });\n};\n\n/**\n * Zoom to something containing [lowY, highY]. These are pixel coordinates in\n * the canvas. This function redraws the graph.\n *\n * @param {number} lowY The topmost pixel value that should be visible.\n * @param {number} highY The lowest pixel value that should be visible.\n * @private\n */\nDygraph.prototype.doZoomY_ = function(lowY, highY) {\n  this.currentZoomRectArgs_ = null;\n  // Find the highest and lowest values in pixel range for each axis.\n  // Note that lowY (in pixels) corresponds to the max Value (in data coords).\n  // This is because pixels increase as you go down on the screen, whereas data\n  // coordinates increase as you go up the screen.\n  var oldValueRanges = this.yAxisRanges();\n  var newValueRanges = [];\n  for (var i = 0; i < this.axes_.length; i++) {\n    var hi = this.toDataYCoord(lowY, i);\n    var low = this.toDataYCoord(highY, i);\n    newValueRanges.push([low, hi]);\n  }\n\n  const zoomCallback = this.getFunctionOption('zoomCallback');\n  const that = this;\n  this.doAnimatedZoom(null, null, oldValueRanges, newValueRanges, function animatedZoomCallback() {\n    if (zoomCallback) {\n      const [minX, maxX] = that.xAxisRange();\n      zoomCallback.call(that, minX, maxX, that.yAxisRanges());\n    }\n  });\n};\n\n/**\n * Transition function to use in animations. Returns values between 0.0\n * (totally old values) and 1.0 (totally new values) for each frame.\n * @private\n */\nDygraph.zoomAnimationFunction = function(frame, numFrames) {\n  var k = 1.5;\n  return (1.0 - Math.pow(k, -frame)) / (1.0 - Math.pow(k, -numFrames));\n};\n\n/**\n * Reset the zoom to the original view coordinates. This is the same as\n * double-clicking on the graph.\n */\nDygraph.prototype.resetZoom = function() {\n  const dirtyX = this.isZoomed('x');\n  const dirtyY = this.isZoomed('y');\n  const dirty = dirtyX || dirtyY;\n\n  // Clear any selection, since it's likely to be drawn in the wrong place.\n  this.clearSelection();\n\n  if (!dirty) return;\n\n  // Calculate extremes to avoid lack of padding on reset.\n  const [minDate, maxDate] = this.xAxisExtremes();\n\n  const animatedZooms = this.getBooleanOption('animatedZooms');\n  const zoomCallback = this.getFunctionOption('zoomCallback');\n\n  // TODO(danvk): merge this block w/ the code below.\n  // TODO(danvk): factor out a generic, public zoomTo method.\n  if (!animatedZooms) {\n    this.dateWindow_ = null;\n    this.axes_.forEach(axis => {\n      if (axis.valueRange) delete axis.valueRange;\n    });\n\n    this.drawGraph_();\n    if (zoomCallback) {\n      zoomCallback.call(this, minDate, maxDate, this.yAxisRanges());\n    }\n    return;\n  }\n\n  var oldWindow=null, newWindow=null, oldValueRanges=null, newValueRanges=null;\n  if (dirtyX) {\n    oldWindow = this.xAxisRange();\n    newWindow = [minDate, maxDate];\n  }\n\n  if (dirtyY) {\n    oldValueRanges = this.yAxisRanges();\n    newValueRanges = this.yAxisExtremes();\n  }\n\n  const that = this;\n  this.doAnimatedZoom(oldWindow, newWindow, oldValueRanges, newValueRanges,\n      function animatedZoomCallback() {\n        that.dateWindow_ = null;\n        that.axes_.forEach(axis => {\n          if (axis.valueRange) delete axis.valueRange;\n        });\n        if (zoomCallback) {\n          zoomCallback.call(that, minDate, maxDate, that.yAxisRanges());\n        }\n      });\n};\n\n/**\n * Combined animation logic for all zoom functions.\n * either the x parameters or y parameters may be null.\n * @private\n */\nDygraph.prototype.doAnimatedZoom = function(oldXRange, newXRange, oldYRanges, newYRanges, callback) {\n  var steps = this.getBooleanOption(\"animatedZooms\") ?\n      Dygraph.ANIMATION_STEPS : 1;\n\n  var windows = [];\n  var valueRanges = [];\n  var step, frac;\n\n  if (oldXRange !== null && newXRange !== null) {\n    for (step = 1; step <= steps; step++) {\n      frac = Dygraph.zoomAnimationFunction(step, steps);\n      windows[step-1] = [oldXRange[0]*(1-frac) + frac*newXRange[0],\n                         oldXRange[1]*(1-frac) + frac*newXRange[1]];\n    }\n  }\n\n  if (oldYRanges !== null && newYRanges !== null) {\n    for (step = 1; step <= steps; step++) {\n      frac = Dygraph.zoomAnimationFunction(step, steps);\n      var thisRange = [];\n      for (var j = 0; j < this.axes_.length; j++) {\n        thisRange.push([oldYRanges[j][0]*(1-frac) + frac*newYRanges[j][0],\n                        oldYRanges[j][1]*(1-frac) + frac*newYRanges[j][1]]);\n      }\n      valueRanges[step-1] = thisRange;\n    }\n  }\n\n  const that = this;\n  utils.repeatAndCleanup(function (step) {\n    if (valueRanges.length) {\n      for (var i = 0; i < that.axes_.length; i++) {\n        var w = valueRanges[step][i];\n        that.axes_[i].valueRange = [w[0], w[1]];\n      }\n    }\n    if (windows.length) {\n      that.dateWindow_ = windows[step];\n    }\n    that.drawGraph_();\n  }, steps, Dygraph.ANIMATION_DURATION / steps, callback);\n};\n\n/**\n * Get the current graph's area object.\n *\n * Returns: {x, y, w, h}\n */\nDygraph.prototype.getArea = function() {\n  return this.plotter_.area;\n};\n\n/**\n * Convert a mouse event to DOM coordinates relative to the graph origin.\n *\n * Returns a two-element array: [X, Y].\n */\nDygraph.prototype.eventToDomCoords = function(event) {\n  if (event.offsetX && event.offsetY) {\n    return [ event.offsetX, event.offsetY ];\n  } else {\n    var eventElementPos = utils.findPos(this.mouseEventElement_);\n    var canvasx = utils.pageX(event) - eventElementPos.x;\n    var canvasy = utils.pageY(event) - eventElementPos.y;\n    return [canvasx, canvasy];\n  }\n};\n\n/**\n * Given a canvas X coordinate, find the closest row.\n * @param {number} domX graph-relative DOM X coordinate\n * Returns {number} row number.\n * @private\n */\nDygraph.prototype.findClosestRow = function(domX) {\n  var minDistX = Infinity;\n  var closestRow = -1;\n  var sets = this.layout_.points;\n  for (var i = 0; i < sets.length; i++) {\n    var points = sets[i];\n    var len = points.length;\n    for (var j = 0; j < len; j++) {\n      var point = points[j];\n      if (!utils.isValidPoint(point, true)) continue;\n      var dist = Math.abs(point.canvasx - domX);\n      if (dist < minDistX) {\n        minDistX = dist;\n        closestRow = point.idx;\n      }\n    }\n  }\n\n  return closestRow;\n};\n\n/**\n * Given canvas X,Y coordinates, find the closest point.\n *\n * This finds the individual data point across all visible series\n * that's closest to the supplied DOM coordinates using the standard\n * Euclidean X,Y distance.\n *\n * @param {number} domX graph-relative DOM X coordinate\n * @param {number} domY graph-relative DOM Y coordinate\n * Returns: {row, seriesName, point}\n * @private\n */\nDygraph.prototype.findClosestPoint = function(domX, domY) {\n  var minDist = Infinity;\n  var dist, dx, dy, point, closestPoint, closestSeries, closestRow;\n  for ( var setIdx = this.layout_.points.length - 1 ; setIdx >= 0 ; --setIdx ) {\n    var points = this.layout_.points[setIdx];\n    for (var i = 0; i < points.length; ++i) {\n      point = points[i];\n      if (!utils.isValidPoint(point)) continue;\n      dx = point.canvasx - domX;\n      dy = point.canvasy - domY;\n      dist = dx * dx + dy * dy;\n      if (dist < minDist) {\n        minDist = dist;\n        closestPoint = point;\n        closestSeries = setIdx;\n        closestRow = point.idx;\n      }\n    }\n  }\n  var name = this.layout_.setNames[closestSeries];\n  return {\n    row: closestRow,\n    seriesName: name,\n    point: closestPoint\n  };\n};\n\n/**\n * Given canvas X,Y coordinates, find the touched area in a stacked graph.\n *\n * This first finds the X data point closest to the supplied DOM X coordinate,\n * then finds the series which puts the Y coordinate on top of its filled area,\n * using linear interpolation between adjacent point pairs.\n *\n * @param {number} domX graph-relative DOM X coordinate\n * @param {number} domY graph-relative DOM Y coordinate\n * Returns: {row, seriesName, point}\n * @private\n */\nDygraph.prototype.findStackedPoint = function(domX, domY) {\n  var row = this.findClosestRow(domX);\n  var closestPoint, closestSeries;\n  for (var setIdx = 0; setIdx < this.layout_.points.length; ++setIdx) {\n    var boundary = this.getLeftBoundary_(setIdx);\n    var rowIdx = row - boundary;\n    var points = this.layout_.points[setIdx];\n    if (rowIdx >= points.length) continue;\n    var p1 = points[rowIdx];\n    if (!utils.isValidPoint(p1)) continue;\n    var py = p1.canvasy;\n    if (domX > p1.canvasx && rowIdx + 1 < points.length) {\n      // interpolate series Y value using next point\n      var p2 = points[rowIdx + 1];\n      if (utils.isValidPoint(p2)) {\n        var dx = p2.canvasx - p1.canvasx;\n        if (dx > 0) {\n          var r = (domX - p1.canvasx) / dx;\n          py += r * (p2.canvasy - p1.canvasy);\n        }\n      }\n    } else if (domX < p1.canvasx && rowIdx > 0) {\n      // interpolate series Y value using previous point\n      var p0 = points[rowIdx - 1];\n      if (utils.isValidPoint(p0)) {\n        var dx = p1.canvasx - p0.canvasx;\n        if (dx > 0) {\n          var r = (p1.canvasx - domX) / dx;\n          py += r * (p0.canvasy - p1.canvasy);\n        }\n      }\n    }\n    // Stop if the point (domX, py) is above this series' upper edge\n    if (setIdx === 0 || py < domY) {\n      closestPoint = p1;\n      closestSeries = setIdx;\n    }\n  }\n  var name = this.layout_.setNames[closestSeries];\n  return {\n    row: row,\n    seriesName: name,\n    point: closestPoint\n  };\n};\n\n/**\n * When the mouse moves in the canvas, display information about a nearby data\n * point and draw dots over those points in the data series. This function\n * takes care of cleanup of previously-drawn dots.\n * @param {Object} event The mousemove event from the browser.\n * @private\n */\nDygraph.prototype.mouseMove_ = function(event) {\n  // This prevents JS errors when mousing over the canvas before data loads.\n  var points = this.layout_.points;\n  if (points === undefined || points === null) return;\n\n  var canvasCoords = this.eventToDomCoords(event);\n  var canvasx = canvasCoords[0];\n  var canvasy = canvasCoords[1];\n\n  var highlightSeriesOpts = this.getOption(\"highlightSeriesOpts\");\n  var selectionChanged = false;\n  if (highlightSeriesOpts && !this.isSeriesLocked()) {\n    var closest;\n    if (this.getBooleanOption(\"stackedGraph\")) {\n      closest = this.findStackedPoint(canvasx, canvasy);\n    } else {\n      closest = this.findClosestPoint(canvasx, canvasy);\n    }\n    selectionChanged = this.setSelection(closest.row, closest.seriesName);\n  } else {\n    var idx = this.findClosestRow(canvasx);\n    selectionChanged = this.setSelection(idx);\n  }\n\n  var callback = this.getFunctionOption(\"highlightCallback\");\n  if (callback && selectionChanged) {\n    callback.call(this, event,\n        this.lastx_,\n        this.selPoints_,\n        this.lastRow_,\n        this.highlightSet_);\n  }\n};\n\n/**\n * Fetch left offset from the specified set index or if not passed, the\n * first defined boundaryIds record (see bug #236).\n * @private\n */\nDygraph.prototype.getLeftBoundary_ = function(setIdx) {\n  if (this.boundaryIds_[setIdx]) {\n      return this.boundaryIds_[setIdx][0];\n  } else {\n    for (var i = 0; i < this.boundaryIds_.length; i++) {\n      if (this.boundaryIds_[i] !== undefined) {\n        return this.boundaryIds_[i][0];\n      }\n    }\n    return 0;\n  }\n};\n\nDygraph.prototype.animateSelection_ = function(direction) {\n  var totalSteps = 10;\n  var millis = 30;\n  if (this.fadeLevel === undefined) this.fadeLevel = 0;\n  if (this.animateId === undefined) this.animateId = 0;\n  var start = this.fadeLevel;\n  var steps = direction < 0 ? start : totalSteps - start;\n  if (steps <= 0) {\n    if (this.fadeLevel) {\n      this.updateSelection_(1.0);\n    }\n    return;\n  }\n\n  var thisId = ++this.animateId;\n  var that = this;\n  var cleanupIfClearing = function() {\n    // if we haven't reached fadeLevel 0 in the max frame time,\n    // ensure that the clear happens and just go to 0\n    if (that.fadeLevel !== 0 && direction < 0) {\n      that.fadeLevel = 0;\n      that.clearSelection();\n    }\n  };\n  utils.repeatAndCleanup(\n    function(n) {\n      // ignore simultaneous animations\n      if (that.animateId != thisId) return;\n\n      that.fadeLevel += direction;\n      if (that.fadeLevel === 0) {\n        that.clearSelection();\n      } else {\n        that.updateSelection_(that.fadeLevel / totalSteps);\n      }\n    },\n    steps, millis, cleanupIfClearing);\n};\n\n/**\n * Draw dots over the selectied points in the data series. This function\n * takes care of cleanup of previously-drawn dots.\n * @private\n */\nDygraph.prototype.updateSelection_ = function(opt_animFraction) {\n  /*var defaultPrevented = */\n  this.cascadeEvents_('select', {\n    selectedRow: this.lastRow_ === -1 ? undefined : this.lastRow_,\n    selectedX: this.lastx_ === null ? undefined : this.lastx_,\n    selectedPoints: this.selPoints_\n  });\n  // TODO(danvk): use defaultPrevented here?\n\n  // Clear the previously drawn vertical, if there is one\n  var i;\n  var ctx = this.canvas_ctx_;\n  if (this.getOption('highlightSeriesOpts')) {\n    ctx.clearRect(0, 0, this.width_, this.height_);\n    var alpha = 1.0 - this.getNumericOption('highlightSeriesBackgroundAlpha');\n    var backgroundColor = utils.toRGB_(this.getOption('highlightSeriesBackgroundColor'));\n\n    if (alpha) {\n      // Activating background fade includes an animation effect for a gradual\n      // fade. TODO(klausw): make this independently configurable if it causes\n      // issues? Use a shared preference to control animations?\n      var animateBackgroundFade = this.getBooleanOption('animateBackgroundFade');\n      if (animateBackgroundFade) {\n        if (opt_animFraction === undefined) {\n          // start a new animation\n          this.animateSelection_(1);\n          return;\n        }\n        alpha *= opt_animFraction;\n      }\n      ctx.fillStyle = 'rgba(' + backgroundColor.r + ',' + backgroundColor.g + ',' + backgroundColor.b + ',' + alpha + ')';\n      ctx.fillRect(0, 0, this.width_, this.height_);\n    }\n\n    // Redraw only the highlighted series in the interactive canvas (not the\n    // static plot canvas, which is where series are usually drawn).\n    this.plotter_._renderLineChart(this.highlightSet_, ctx);\n  } else if (this.previousVerticalX_ >= 0) {\n    // Determine the maximum highlight circle size.\n    var maxCircleSize = 0;\n    var labels = this.attr_('labels');\n    for (i = 1; i < labels.length; i++) {\n      var r = this.getNumericOption('highlightCircleSize', labels[i]);\n      if (r > maxCircleSize) maxCircleSize = r;\n    }\n    var px = this.previousVerticalX_;\n    ctx.clearRect(px - maxCircleSize - 1, 0,\n                  2 * maxCircleSize + 2, this.height_);\n  }\n\n  if (this.selPoints_.length > 0) {\n    // Draw colored circles over the center of each selected point\n    var canvasx = this.selPoints_[0].canvasx;\n    ctx.save();\n    for (i = 0; i < this.selPoints_.length; i++) {\n      var pt = this.selPoints_[i];\n      if (isNaN(pt.canvasy)) continue;\n\n      var circleSize = this.getNumericOption('highlightCircleSize', pt.name);\n      var callback = this.getFunctionOption(\"drawHighlightPointCallback\", pt.name);\n      var color = this.plotter_.colors[pt.name];\n      if (!callback) {\n        callback = utils.Circles.DEFAULT;\n      }\n      ctx.lineWidth = this.getNumericOption('strokeWidth', pt.name);\n      ctx.strokeStyle = color;\n      ctx.fillStyle = color;\n      callback.call(this, this, pt.name, ctx, canvasx, pt.canvasy,\n          color, circleSize, pt.idx);\n    }\n    ctx.restore();\n\n    this.previousVerticalX_ = canvasx;\n  }\n};\n\n/**\n * Manually set the selected points and display information about them in the\n * legend. The selection can be cleared using clearSelection() and queried\n * using getSelection().\n *\n * To set a selected series but not a selected point, call setSelection with\n * row=false and the selected series name.\n *\n * @param {number} row Row number that should be highlighted (i.e. appear with\n * hover dots on the chart).\n * @param {seriesName} optional series name to highlight that series with the\n * the highlightSeriesOpts setting.\n * @param {locked} optional If true, keep seriesName selected when mousing\n * over the graph, disabling closest-series highlighting. Call clearSelection()\n * to unlock it.\n * @param {trigger_highlight_callback} optional If true, trigger any\n * user-defined highlightCallback if highlightCallback has been set.\n */\nDygraph.prototype.setSelection = function setSelection(row, opt_seriesName,\n                                                       opt_locked,\n                                                       opt_trigger_highlight_callback) {\n  // Extract the points we've selected\n  this.selPoints_ = [];\n\n  var changed = false;\n  if (row !== false && row >= 0) {\n    if (row != this.lastRow_) changed = true;\n    this.lastRow_ = row;\n    for (var setIdx = 0; setIdx < this.layout_.points.length; ++setIdx) {\n      var points = this.layout_.points[setIdx];\n      // Check if the point at the appropriate index is the point we're looking\n      // for.  If it is, just use it, otherwise search the array for a point\n      // in the proper place.\n      var setRow = row - this.getLeftBoundary_(setIdx);\n      if (setRow >= 0 && setRow < points.length && points[setRow].idx == row) {\n        var point = points[setRow];\n        if (point.yval !== null) this.selPoints_.push(point);\n      } else {\n        for (var pointIdx = 0; pointIdx < points.length; ++pointIdx) {\n          var point = points[pointIdx];\n          if (point.idx == row) {\n            if (point.yval !== null) {\n              this.selPoints_.push(point);\n            }\n            break;\n          }\n        }\n      }\n    }\n  } else {\n    if (this.lastRow_ >= 0) changed = true;\n    this.lastRow_ = -1;\n  }\n\n  if (this.selPoints_.length) {\n    this.lastx_ = this.selPoints_[0].xval;\n  } else {\n    this.lastx_ = null;\n  }\n\n  if (opt_seriesName !== undefined) {\n    if (this.highlightSet_ !== opt_seriesName) changed = true;\n    this.highlightSet_ = opt_seriesName;\n  }\n\n  if (opt_locked !== undefined) {\n    this.lockedSet_ = opt_locked;\n  }\n\n  if (changed) {\n    this.updateSelection_(undefined);\n\n    if (opt_trigger_highlight_callback) {\n      var callback = this.getFunctionOption(\"highlightCallback\");\n      if (callback) {\n        var event = {};\n        callback.call(this, event,\n          this.lastx_,\n          this.selPoints_,\n          this.lastRow_,\n          this.highlightSet_);\n      }\n    }\n  }\n  return changed;\n};\n\n/**\n * The mouse has left the canvas. Clear out whatever artifacts remain\n * @param {Object} event the mouseout event from the browser.\n * @private\n */\nDygraph.prototype.mouseOut_ = function(event) {\n  if (this.getFunctionOption(\"unhighlightCallback\")) {\n    this.getFunctionOption(\"unhighlightCallback\").call(this, event);\n  }\n\n  if (this.getBooleanOption(\"hideOverlayOnMouseOut\") && !this.lockedSet_) {\n    this.clearSelection();\n  }\n};\n\n/**\n * Clears the current selection (i.e. points that were highlighted by moving\n * the mouse over the chart).\n */\nDygraph.prototype.clearSelection = function() {\n  this.cascadeEvents_('deselect', {});\n\n  this.lockedSet_ = false;\n  // Get rid of the overlay data\n  if (this.fadeLevel) {\n    this.animateSelection_(-1);\n    return;\n  }\n  this.canvas_ctx_.clearRect(0, 0, this.width_, this.height_);\n  this.fadeLevel = 0;\n  this.selPoints_ = [];\n  this.lastx_ = null;\n  this.lastRow_ = -1;\n  this.highlightSet_ = null;\n};\n\n/**\n * Returns the number of the currently selected row. To get data for this row,\n * you can use the getValue method.\n * @return {number} row number, or -1 if nothing is selected\n */\nDygraph.prototype.getSelection = function() {\n  if (!this.selPoints_ || this.selPoints_.length < 1) {\n    return -1;\n  }\n\n  for (var setIdx = 0; setIdx < this.layout_.points.length; setIdx++) {\n    var points = this.layout_.points[setIdx];\n    for (var row = 0; row < points.length; row++) {\n      if (points[row].x == this.selPoints_[0].x) {\n        return points[row].idx;\n      }\n    }\n  }\n  return -1;\n};\n\n/**\n * Returns the name of the currently-highlighted series.\n * Only available when the highlightSeriesOpts option is in use.\n */\nDygraph.prototype.getHighlightSeries = function() {\n  return this.highlightSet_;\n};\n\n/**\n * Returns true if the currently-highlighted series was locked\n * via setSelection(..., seriesName, true).\n */\nDygraph.prototype.isSeriesLocked = function() {\n  return this.lockedSet_;\n};\n\n/**\n * Fires when there's data available to be graphed.\n * @param {string} data Raw CSV data to be plotted\n * @private\n */\nDygraph.prototype.loadedEvent_ = function(data) {\n  this.rawData_ = this.parseCSV_(data);\n  this.cascadeDataDidUpdateEvent_();\n  this.predraw_();\n};\n\n/**\n * Add ticks on the x-axis representing years, months, quarters, weeks, or days\n * @private\n */\nDygraph.prototype.addXTicks_ = function() {\n  // Determine the correct ticks scale on the x-axis: quarterly, monthly, ...\n  var range;\n  if (this.dateWindow_) {\n    range = [this.dateWindow_[0], this.dateWindow_[1]];\n  } else {\n    range = this.xAxisExtremes();\n  }\n\n  var xAxisOptionsView = this.optionsViewForAxis_('x');\n  var xTicks = xAxisOptionsView('ticker')(\n      range[0],\n      range[1],\n      this.plotter_.area.w,  // TODO(danvk): should be area.width\n      xAxisOptionsView,\n      this);\n  // var msg = 'ticker(' + range[0] + ', ' + range[1] + ', ' + this.width_ + ', ' + this.attr_('pixelsPerXLabel') + ') -> ' + JSON.stringify(xTicks);\n  // console.log(msg);\n  this.layout_.setXTicks(xTicks);\n};\n\n/**\n * Returns the correct handler class for the currently set options.\n * @private\n */\nDygraph.prototype.getHandlerClass_ = function() {\n  var handlerClass;\n  if (this.attr_('dataHandler')) {\n    handlerClass =  this.attr_('dataHandler');\n  } else if (this.fractions_) {\n    if (this.getBooleanOption('errorBars')) {\n      handlerClass = FractionsBarsHandler;\n    } else {\n      handlerClass = DefaultFractionHandler;\n    }\n  } else if (this.getBooleanOption('customBars')) {\n    handlerClass = CustomBarsHandler;\n  } else if (this.getBooleanOption('errorBars')) {\n    handlerClass = ErrorBarsHandler;\n  } else {\n    handlerClass = DefaultHandler;\n  }\n  return handlerClass;\n};\n\n/**\n * @private\n * This function is called once when the chart's data is changed or the options\n * dictionary is updated. It is _not_ called when the user pans or zooms. The\n * idea is that values derived from the chart's data can be computed here,\n * rather than every time the chart is drawn. This includes things like the\n * number of axes, rolling averages, etc.\n */\nDygraph.prototype.predraw_ = function() {\n  var start = new Date();\n\n  // Create the correct dataHandler\n  this.dataHandler_ = new (this.getHandlerClass_())();\n\n  this.layout_.computePlotArea();\n\n  // TODO(danvk): move more computations out of drawGraph_ and into here.\n  this.computeYAxes_();\n\n  if (!this.is_initial_draw_) {\n    this.canvas_ctx_.restore();\n    this.hidden_ctx_.restore();\n  }\n\n  this.canvas_ctx_.save();\n  this.hidden_ctx_.save();\n\n  // Create a new plotter.\n  this.plotter_ = new DygraphCanvasRenderer(this,\n                                            this.hidden_,\n                                            this.hidden_ctx_,\n                                            this.layout_);\n\n  // The roller sits in the bottom left corner of the chart. We don't know where\n  // this will be until the options are available, so it's positioned here.\n  this.createRollInterface_();\n\n  this.cascadeEvents_('predraw');\n\n  // Convert the raw data (a 2D array) into the internal format and compute\n  // rolling averages.\n  this.rolledSeries_ = [null];  // x-axis is the first series and it's special\n  for (var i = 1; i < this.numColumns(); i++) {\n    // var logScale = this.attr_('logscale', i); // TODO(klausw): this looks wrong // konigsberg thinks so too.\n    var series = this.dataHandler_.extractSeries(this.rawData_, i, this.attributes_);\n    if (this.rollPeriod_ > 1) {\n      series = this.dataHandler_.rollingAverage(series, this.rollPeriod_, this.attributes_, i);\n    }\n\n    this.rolledSeries_.push(series);\n  }\n\n  // If the data or options have changed, then we'd better redraw.\n  this.drawGraph_();\n\n  // This is used to determine whether to do various animations.\n  var end = new Date();\n  this.drawingTimeMs_ = (end - start);\n};\n\n/**\n * Point structure.\n *\n * xval_* and yval_* are the original unscaled data values,\n * while x_* and y_* are scaled to the range (0.0-1.0) for plotting.\n * yval_stacked is the cumulative Y value used for stacking graphs,\n * and bottom/top/minus/plus are used for high/low band graphs.\n *\n * @typedef {{\n *     idx: number,\n *     name: string,\n *     x: ?number,\n *     xval: ?number,\n *     y_bottom: ?number,\n *     y: ?number,\n *     y_stacked: ?number,\n *     y_top: ?number,\n *     yval_minus: ?number,\n *     yval: ?number,\n *     yval_plus: ?number,\n *     yval_stacked\n * }}\n */\nDygraph.PointType = undefined;\n\n/**\n * Calculates point stacking for stackedGraph=true.\n *\n * For stacking purposes, interpolate or extend neighboring data across\n * NaN values based on stackedGraphNaNFill settings. This is for display\n * only, the underlying data value as shown in the legend remains NaN.\n *\n * @param {Array.<Dygraph.PointType>} points Point array for a single series.\n *     Updates each Point's yval_stacked property.\n * @param {Array.<number>} cumulativeYval Accumulated top-of-graph stacked Y\n *     values for the series seen so far. Index is the row number. Updated\n *     based on the current series's values.\n * @param {Array.<number>} seriesExtremes Min and max values, updated\n *     to reflect the stacked values.\n * @param {string} fillMethod Interpolation method, one of 'all', 'inside', or\n *     'none'.\n * @private\n */\nDygraph.stackPoints_ = function(\n    points, cumulativeYval, seriesExtremes, fillMethod) {\n  var lastXval = null;\n  var prevPoint = null;\n  var nextPoint = null;\n  var nextPointIdx = -1;\n\n  // Find the next stackable point starting from the given index.\n  var updateNextPoint = function(idx) {\n    // If we've previously found a non-NaN point and haven't gone past it yet,\n    // just use that.\n    if (nextPointIdx >= idx) return;\n\n    // We haven't found a non-NaN point yet or have moved past it,\n    // look towards the right to find a non-NaN point.\n    for (var j = idx; j < points.length; ++j) {\n      // Clear out a previously-found point (if any) since it's no longer\n      // valid, we shouldn't use it for interpolation anymore.\n      nextPoint = null;\n      if (!isNaN(points[j].yval) && points[j].yval !== null) {\n        nextPointIdx = j;\n        nextPoint = points[j];\n        break;\n      }\n    }\n  };\n\n  for (var i = 0; i < points.length; ++i) {\n    var point = points[i];\n    var xval = point.xval;\n    if (cumulativeYval[xval] === undefined) {\n      cumulativeYval[xval] = 0;\n    }\n\n    var actualYval = point.yval;\n    if (isNaN(actualYval) || actualYval === null) {\n      if(fillMethod == 'none') {\n        actualYval = 0;\n      } else {\n        // Interpolate/extend for stacking purposes if possible.\n        updateNextPoint(i);\n        if (prevPoint && nextPoint && fillMethod != 'none') {\n          // Use linear interpolation between prevPoint and nextPoint.\n          actualYval = prevPoint.yval + (nextPoint.yval - prevPoint.yval) *\n              ((xval - prevPoint.xval) / (nextPoint.xval - prevPoint.xval));\n        } else if (prevPoint && fillMethod == 'all') {\n          actualYval = prevPoint.yval;\n        } else if (nextPoint && fillMethod == 'all') {\n          actualYval = nextPoint.yval;\n        } else {\n          actualYval = 0;\n        }\n      }\n    } else {\n      prevPoint = point;\n    }\n\n    var stackedYval = cumulativeYval[xval];\n    if (lastXval != xval) {\n      // If an x-value is repeated, we ignore the duplicates.\n      stackedYval += actualYval;\n      cumulativeYval[xval] = stackedYval;\n    }\n    lastXval = xval;\n\n    point.yval_stacked = stackedYval;\n\n    if (stackedYval > seriesExtremes[1]) {\n      seriesExtremes[1] = stackedYval;\n    }\n    if (stackedYval < seriesExtremes[0]) {\n      seriesExtremes[0] = stackedYval;\n    }\n  }\n};\n\n/**\n * Loop over all fields and create datasets, calculating extreme y-values for\n * each series and extreme x-indices as we go.\n *\n * dateWindow is passed in as an explicit parameter so that we can compute\n * extreme values \"speculatively\", i.e. without actually setting state on the\n * dygraph.\n *\n * @param {Array.<Array.<Array.<(number|Array<number>)>>} rolledSeries, where\n *     rolledSeries[seriesIndex][row] = raw point, where\n *     seriesIndex is the column number starting with 1, and\n *     rawPoint is [x,y] or [x, [y, err]] or [x, [y, yminus, yplus]].\n * @param {?Array.<number>} dateWindow [xmin, xmax] pair, or null.\n * @return {{\n *     points: Array.<Array.<Dygraph.PointType>>,\n *     seriesExtremes: Array.<Array.<number>>,\n *     boundaryIds: Array.<number>}}\n * @private\n */\nDygraph.prototype.gatherDatasets_ = function(rolledSeries, dateWindow) {\n  var boundaryIds = [];\n  var points = [];\n  var cumulativeYval = [];  // For stacked series.\n  var extremes = {};  // series name -> [low, high]\n  var seriesIdx, sampleIdx;\n  var firstIdx, lastIdx;\n  var axisIdx;\n\n  // Loop over the fields (series).  Go from the last to the first,\n  // because if they're stacked that's how we accumulate the values.\n  var num_series = rolledSeries.length - 1;\n  var series;\n  for (seriesIdx = num_series; seriesIdx >= 1; seriesIdx--) {\n    if (!this.visibility()[seriesIdx - 1]) continue;\n\n    // Prune down to the desired range, if necessary (for zooming)\n    // Because there can be lines going to points outside of the visible area,\n    // we actually prune to visible points, plus one on either side.\n    if (dateWindow) {\n      series = rolledSeries[seriesIdx];\n      var low = dateWindow[0];\n      var high = dateWindow[1];\n\n      // TODO(danvk): do binary search instead of linear search.\n      // TODO(danvk): pass firstIdx and lastIdx directly to the renderer.\n      firstIdx = null;\n      lastIdx = null;\n      for (sampleIdx = 0; sampleIdx < series.length; sampleIdx++) {\n        if (series[sampleIdx][0] >= low && firstIdx === null) {\n          firstIdx = sampleIdx;\n        }\n        if (series[sampleIdx][0] <= high) {\n          lastIdx = sampleIdx;\n        }\n      }\n\n      if (firstIdx === null) firstIdx = 0;\n      var correctedFirstIdx = firstIdx;\n      var isInvalidValue = true;\n      while (isInvalidValue && correctedFirstIdx > 0) {\n        correctedFirstIdx--;\n        // check if the y value is null.\n        isInvalidValue = series[correctedFirstIdx][1] === null;\n      }\n\n      if (lastIdx === null) lastIdx = series.length - 1;\n      var correctedLastIdx = lastIdx;\n      isInvalidValue = true;\n      while (isInvalidValue && correctedLastIdx < series.length - 1) {\n        correctedLastIdx++;\n        isInvalidValue = series[correctedLastIdx][1] === null;\n      }\n\n      if (correctedFirstIdx!==firstIdx) {\n        firstIdx = correctedFirstIdx;\n      }\n      if (correctedLastIdx !== lastIdx) {\n        lastIdx = correctedLastIdx;\n      }\n\n      boundaryIds[seriesIdx-1] = [firstIdx, lastIdx];\n\n      // .slice's end is exclusive, we want to include lastIdx.\n      series = series.slice(firstIdx, lastIdx + 1);\n    } else {\n      series = rolledSeries[seriesIdx];\n      boundaryIds[seriesIdx-1] = [0, series.length-1];\n    }\n\n    var seriesName = this.attr_(\"labels\")[seriesIdx];\n    var seriesExtremes = this.dataHandler_.getExtremeYValues(series,\n        dateWindow, this.getBooleanOption(\"stepPlot\", seriesName));\n\n    var seriesPoints = this.dataHandler_.seriesToPoints(series,\n        seriesName, boundaryIds[seriesIdx-1][0]);\n\n    if (this.getBooleanOption(\"stackedGraph\")) {\n      axisIdx = this.attributes_.axisForSeries(seriesName);\n      if (cumulativeYval[axisIdx] === undefined) {\n        cumulativeYval[axisIdx] = [];\n      }\n      Dygraph.stackPoints_(seriesPoints, cumulativeYval[axisIdx], seriesExtremes,\n                           this.getBooleanOption(\"stackedGraphNaNFill\"));\n    }\n\n    extremes[seriesName] = seriesExtremes;\n    points[seriesIdx] = seriesPoints;\n  }\n\n  return { points: points, extremes: extremes, boundaryIds: boundaryIds };\n};\n\n/**\n * Update the graph with new data. This method is called when the viewing area\n * has changed. If the underlying data or options have changed, predraw_ will\n * be called before drawGraph_ is called.\n *\n * @private\n */\nDygraph.prototype.drawGraph_ = function() {\n  var start = new Date();\n\n  // This is used to set the second parameter to drawCallback, below.\n  var is_initial_draw = this.is_initial_draw_;\n  this.is_initial_draw_ = false;\n\n  this.layout_.removeAllDatasets();\n  this.setColors_();\n  this.attrs_.pointSize = 0.5 * this.getNumericOption('highlightCircleSize');\n\n  var packed = this.gatherDatasets_(this.rolledSeries_, this.dateWindow_);\n  var points = packed.points;\n  var extremes = packed.extremes;\n  this.boundaryIds_ = packed.boundaryIds;\n\n  this.setIndexByName_ = {};\n  var labels = this.attr_(\"labels\");\n  var dataIdx = 0;\n  for (var i = 1; i < points.length; i++) {\n    if (!this.visibility()[i - 1]) continue;\n    this.layout_.addDataset(labels[i], points[i]);\n    this.datasetIndex_[i] = dataIdx++;\n  }\n  for (var i = 0; i < labels.length; i++) {\n    this.setIndexByName_[labels[i]] = i;\n  }\n\n  this.computeYAxisRanges_(extremes);\n  this.layout_.setYAxes(this.axes_);\n\n  this.addXTicks_();\n\n  // Tell PlotKit to use this new data and render itself\n  this.layout_.evaluate();\n  this.renderGraph_(is_initial_draw);\n\n  if (this.getStringOption(\"timingName\")) {\n    var end = new Date();\n    console.log(this.getStringOption(\"timingName\") + \" - drawGraph: \" + (end - start) + \"ms\");\n  }\n};\n\n/**\n * This does the work of drawing the chart. It assumes that the layout and axis\n * scales have already been set (e.g. by predraw_).\n *\n * @private\n */\nDygraph.prototype.renderGraph_ = function(is_initial_draw) {\n  this.cascadeEvents_('clearChart');\n  this.plotter_.clear();\n\n  const underlayCallback = this.getFunctionOption('underlayCallback');\n  if (underlayCallback) {\n    // NOTE: we pass the dygraph object to this callback twice to avoid breaking\n    // users who expect a deprecated form of this callback.\n    underlayCallback.call(this,\n        this.hidden_ctx_, this.layout_.getPlotArea(), this, this);\n  }\n\n  var e = {\n    canvas: this.hidden_,\n    drawingContext: this.hidden_ctx_\n  };\n  this.cascadeEvents_('willDrawChart', e);\n  this.plotter_.render();\n  this.cascadeEvents_('didDrawChart', e);\n  this.lastRow_ = -1;  // because plugins/legend.js clears the legend\n\n  // TODO(danvk): is this a performance bottleneck when panning?\n  // The interaction canvas should already be empty in that situation.\n  this.canvas_.getContext('2d').clearRect(0, 0, this.width_, this.height_);\n\n  const drawCallback = this.getFunctionOption(\"drawCallback\");\n  if (drawCallback !== null) {\n    drawCallback.call(this, this, is_initial_draw);\n  }\n  if (is_initial_draw) {\n    this.readyFired_ = true;\n    while (this.readyFns_.length > 0) {\n      var fn = this.readyFns_.pop();\n      fn(this);\n    }\n  }\n};\n\n/**\n * @private\n * Determine properties of the y-axes which are independent of the data\n * currently being displayed. This includes things like the number of axes and\n * the style of the axes. It does not include the range of each axis and its\n * tick marks.\n * This fills in this.axes_.\n * axes_ = [ { options } ]\n *   indices are into the axes_ array.\n */\nDygraph.prototype.computeYAxes_ = function() {\n  var axis, index, opts, v;\n\n  // this.axes_ doesn't match this.attributes_.axes_.options. It's used for\n  // data computation as well as options storage.\n  // Go through once and add all the axes.\n  this.axes_ = [];\n\n  for (axis = 0; axis < this.attributes_.numAxes(); axis++) {\n    // Add a new axis, making a copy of its per-axis options.\n    opts = { g : this };\n    utils.update(opts, this.attributes_.axisOptions(axis));\n    this.axes_[axis] = opts;\n  }\n\n  for (axis = 0; axis < this.axes_.length; axis++) {\n    if (axis === 0) {\n      opts = this.optionsViewForAxis_('y' + (axis ? '2' : ''));\n      v = opts(\"valueRange\");\n      if (v) this.axes_[axis].valueRange = v;\n    } else {  // To keep old behavior\n      var axes = this.user_attrs_.axes;\n      if (axes && axes.y2) {\n        v = axes.y2.valueRange;\n        if (v) this.axes_[axis].valueRange = v;\n      }\n    }\n  }\n};\n\n/**\n * Returns the number of y-axes on the chart.\n * @return {number} the number of axes.\n */\nDygraph.prototype.numAxes = function() {\n  return this.attributes_.numAxes();\n};\n\n/**\n * @private\n * Returns axis properties for the given series.\n * @param {string} setName The name of the series for which to get axis\n * properties, e.g. 'Y1'.\n * @return {Object} The axis properties.\n */\nDygraph.prototype.axisPropertiesForSeries = function(series) {\n  // TODO(danvk): handle errors.\n  return this.axes_[this.attributes_.axisForSeries(series)];\n};\n\n/**\n * @private\n * Determine the value range and tick marks for each axis.\n * @param {Object} extremes A mapping from seriesName -> [low, high]\n * This fills in the valueRange and ticks fields in each entry of this.axes_.\n */\nDygraph.prototype.computeYAxisRanges_ = function(extremes) {\n  var isNullUndefinedOrNaN = function(num) {\n    return isNaN(parseFloat(num));\n  };\n  var numAxes = this.attributes_.numAxes();\n  var ypadCompat, span, series, ypad;\n\n  var p_axis;\n\n  // Compute extreme values, a span and tick marks for each axis.\n  for (var i = 0; i < numAxes; i++) {\n    var axis = this.axes_[i];\n    var logscale = this.attributes_.getForAxis(\"logscale\", i);\n    var includeZero = this.attributes_.getForAxis(\"includeZero\", i);\n    var independentTicks = this.attributes_.getForAxis(\"independentTicks\", i);\n    series = this.attributes_.seriesForAxis(i);\n\n    // Add some padding. This supports two Y padding operation modes:\n    //\n    // - backwards compatible (yRangePad not set):\n    //   10% padding for automatic Y ranges, but not for user-supplied\n    //   ranges, and move a close-to-zero edge to zero, since drawing at the edge\n    //   results in invisible lines. Unfortunately lines drawn at the edge of a\n    //   user-supplied range will still be invisible. If logscale is\n    //   set, add a variable amount of padding at the top but\n    //   none at the bottom.\n    //\n    // - new-style (yRangePad set by the user):\n    //   always add the specified Y padding.\n    //\n    ypadCompat = true;\n    ypad = 0.1; // add 10%\n    const yRangePad = this.getNumericOption('yRangePad');\n    if (yRangePad !== null) {\n      ypadCompat = false;\n      // Convert pixel padding to ratio\n      ypad = yRangePad / this.plotter_.area.h;\n    }\n\n    if (series.length === 0) {\n      // If no series are defined or visible then use a reasonable default\n      axis.extremeRange = [0, 1];\n    } else {\n      // Calculate the extremes of extremes.\n      var minY = Infinity;  // extremes[series[0]][0];\n      var maxY = -Infinity;  // extremes[series[0]][1];\n      var extremeMinY, extremeMaxY;\n\n      for (var j = 0; j < series.length; j++) {\n        // this skips invisible series\n        if (!extremes.hasOwnProperty(series[j])) continue;\n\n        // Only use valid extremes to stop null data series' from corrupting the scale.\n        extremeMinY = extremes[series[j]][0];\n        if (extremeMinY !== null) {\n          minY = Math.min(extremeMinY, minY);\n        }\n        extremeMaxY = extremes[series[j]][1];\n        if (extremeMaxY !== null) {\n          maxY = Math.max(extremeMaxY, maxY);\n        }\n      }\n\n      // Include zero if requested by the user.\n      if (includeZero && !logscale) {\n        if (minY > 0) minY = 0;\n        if (maxY < 0) maxY = 0;\n      }\n\n      // Ensure we have a valid scale, otherwise default to [0, 1] for safety.\n      if (minY == Infinity) minY = 0;\n      if (maxY == -Infinity) maxY = 1;\n\n      span = maxY - minY;\n      // special case: if we have no sense of scale, center on the sole value.\n      if (span === 0) {\n        if (maxY !== 0) {\n          span = Math.abs(maxY);\n        } else {\n          // ... and if the sole value is zero, use range 0-1.\n          maxY = 1;\n          span = 1;\n        }\n      }\n\n      var maxAxisY = maxY, minAxisY = minY;\n      if (ypadCompat) {\n        if (logscale) {\n          maxAxisY = maxY + ypad * span;\n          minAxisY = minY;\n        } else {\n          maxAxisY = maxY + ypad * span;\n          minAxisY = minY - ypad * span;\n\n          // Backwards-compatible behavior: Move the span to start or end at zero if it's\n          // close to zero.\n          if (minAxisY < 0 && minY >= 0) minAxisY = 0;\n          if (maxAxisY > 0 && maxY <= 0) maxAxisY = 0;\n        }\n      }\n      axis.extremeRange = [minAxisY, maxAxisY];\n    }\n    if (axis.valueRange) {\n      // This is a user-set value range for this axis.\n      var y0 = isNullUndefinedOrNaN(axis.valueRange[0]) ? axis.extremeRange[0] : axis.valueRange[0];\n      var y1 = isNullUndefinedOrNaN(axis.valueRange[1]) ? axis.extremeRange[1] : axis.valueRange[1];\n      axis.computedValueRange = [y0, y1];\n    } else {\n      axis.computedValueRange = axis.extremeRange;\n    }\n    if (!ypadCompat) {\n      // When using yRangePad, adjust the upper/lower bounds to add\n      // padding unless the user has zoomed/panned the Y axis range.\n\n      y0 = axis.computedValueRange[0];\n      y1 = axis.computedValueRange[1];\n\n      // special case #781: if we have no sense of scale, center on the sole value.\n      if (y0 === y1) {\n        if(y0 === 0) {\n          y1 = 1;\n        } else {\n          var delta = Math.abs(y0 / 10);\n          y0 -= delta;\n          y1 += delta;\n        }\n      }\n\n      if (logscale) {\n        var y0pct = ypad / (2 * ypad - 1);\n        var y1pct = (ypad - 1) / (2 * ypad - 1);\n        axis.computedValueRange[0] = utils.logRangeFraction(y0, y1, y0pct);\n        axis.computedValueRange[1] = utils.logRangeFraction(y0, y1, y1pct);\n      } else {\n        span = y1 - y0;\n        axis.computedValueRange[0] = y0 - span * ypad;\n        axis.computedValueRange[1] = y1 + span * ypad;\n      }\n    }\n\n    if (independentTicks) {\n      axis.independentTicks = independentTicks;\n      var opts = this.optionsViewForAxis_('y' + (i ? '2' : ''));\n      var ticker = opts('ticker');\n      axis.ticks = ticker(axis.computedValueRange[0],\n              axis.computedValueRange[1],\n              this.plotter_.area.h,\n              opts,\n              this);\n      // Define the first independent axis as primary axis.\n      if (!p_axis) p_axis = axis;\n    }\n  }\n  if (p_axis === undefined) {\n    throw (\"Configuration Error: At least one axis has to have the \\\"independentTicks\\\" option activated.\");\n  }\n  // Add ticks. By default, all axes inherit the tick positions of the\n  // primary axis. However, if an axis is specifically marked as having\n  // independent ticks, then that is permissible as well.\n  for (var i = 0; i < numAxes; i++) {\n    var axis = this.axes_[i];\n\n    if (!axis.independentTicks) {\n      var opts = this.optionsViewForAxis_('y' + (i ? '2' : ''));\n      var ticker = opts('ticker');\n      var p_ticks = p_axis.ticks;\n      var p_scale = p_axis.computedValueRange[1] - p_axis.computedValueRange[0];\n      var scale = axis.computedValueRange[1] - axis.computedValueRange[0];\n      var tick_values = [];\n      for (var k = 0; k < p_ticks.length; k++) {\n        var y_frac = (p_ticks[k].v - p_axis.computedValueRange[0]) / p_scale;\n        var y_val = axis.computedValueRange[0] + y_frac * scale;\n        tick_values.push(y_val);\n      }\n\n      axis.ticks = ticker(axis.computedValueRange[0],\n                          axis.computedValueRange[1],\n                          this.plotter_.area.h,\n                          opts,\n                          this,\n                          tick_values);\n    }\n  }\n};\n\n/**\n * Detects the type of the str (date or numeric) and sets the various\n * formatting attributes in this.attrs_ based on this type.\n * @param {string} str An x value.\n * @private\n */\nDygraph.prototype.detectTypeFromString_ = function(str) {\n  var isDate = false;\n  var dashPos = str.indexOf('-');  // could be 2006-01-01 _or_ 1.0e-2\n  if ((dashPos > 0 && (str[dashPos-1] != 'e' && str[dashPos-1] != 'E')) ||\n      str.indexOf('/') >= 0 ||\n      isNaN(parseFloat(str))) {\n    isDate = true;\n  }\n\n  this.setXAxisOptions_(isDate);\n};\n\nDygraph.prototype.setXAxisOptions_ = function(isDate) {\n  if (isDate) {\n    this.attrs_.xValueParser = utils.dateParser;\n    this.attrs_.axes.x.valueFormatter = utils.dateValueFormatter;\n    this.attrs_.axes.x.ticker = DygraphTickers.dateTicker;\n    this.attrs_.axes.x.axisLabelFormatter = utils.dateAxisLabelFormatter;\n  } else {\n    /** @private (shut up, jsdoc!) */\n    this.attrs_.xValueParser = function(x) { return parseFloat(x); };\n    // TODO(danvk): use Dygraph.numberValueFormatter here?\n    /** @private (shut up, jsdoc!) */\n    this.attrs_.axes.x.valueFormatter = function(x) { return x; };\n    this.attrs_.axes.x.ticker = DygraphTickers.numericTicks;\n    this.attrs_.axes.x.axisLabelFormatter = this.attrs_.axes.x.valueFormatter;\n  }\n};\n\n/**\n * @private\n * Parses a string in a special csv format.  We expect a csv file where each\n * line is a date point, and the first field in each line is the date string.\n * We also expect that all remaining fields represent series.\n * if the errorBars attribute is set, then interpret the fields as:\n * date, series1, stddev1, series2, stddev2, ...\n * @param {[Object]} data See above.\n *\n * @return [Object] An array with one entry for each row. These entries\n * are an array of cells in that row. The first entry is the parsed x-value for\n * the row. The second, third, etc. are the y-values. These can take on one of\n * three forms, depending on the CSV and constructor parameters:\n * 1. numeric value\n * 2. [ value, stddev ]\n * 3. [ low value, center value, high value ]\n */\nDygraph.prototype.parseCSV_ = function(data) {\n  var ret = [];\n  var line_delimiter = utils.detectLineDelimiter(data);\n  var lines = data.split(line_delimiter || \"\\n\");\n  var vals, j;\n\n  // Use the default delimiter or fall back to a tab if that makes sense.\n  var delim = this.getStringOption('delimiter');\n  if (lines[0].indexOf(delim) == -1 && lines[0].indexOf('\\t') >= 0) {\n    delim = '\\t';\n  }\n\n  var start = 0;\n  if (!('labels' in this.user_attrs_)) {\n    // User hasn't explicitly set labels, so they're (presumably) in the CSV.\n    start = 1;\n    this.attrs_.labels = lines[0].split(delim);  // NOTE: _not_ user_attrs_.\n    this.attributes_.reparseSeries();\n  }\n  var line_no = 0;\n\n  var xParser;\n  var defaultParserSet = false;  // attempt to auto-detect x value type\n  var expectedCols = this.attr_(\"labels\").length;\n  var outOfOrder = false;\n  for (var i = start; i < lines.length; i++) {\n    var line = lines[i];\n    line_no = i;\n    if (line.length === 0) continue;  // skip blank lines\n    if (line[0] == '#') continue;    // skip comment lines\n    var inFields = line.split(delim);\n    if (inFields.length < 2) continue;\n\n    var fields = [];\n    if (!defaultParserSet) {\n      this.detectTypeFromString_(inFields[0]);\n      xParser = this.getFunctionOption(\"xValueParser\");\n      defaultParserSet = true;\n    }\n    fields[0] = xParser(inFields[0], this);\n\n    // If fractions are expected, parse the numbers as \"A/B\"\n    if (this.fractions_) {\n      for (j = 1; j < inFields.length; j++) {\n        // TODO(danvk): figure out an appropriate way to flag parse errors.\n        vals = inFields[j].split(\"/\");\n        if (vals.length != 2) {\n          console.error('Expected fractional \"num/den\" values in CSV data ' +\n                        \"but found a value '\" + inFields[j] + \"' on line \" +\n                        (1 + i) + \" ('\" + line + \"') which is not of this form.\");\n          fields[j] = [0, 0];\n        } else {\n          fields[j] = [utils.parseFloat_(vals[0], i, line),\n                       utils.parseFloat_(vals[1], i, line)];\n        }\n      }\n    } else if (this.getBooleanOption(\"errorBars\")) {\n      // If there are sigma-based high/low bands, values are (value, stddev) pairs\n      if (inFields.length % 2 != 1) {\n        console.error('Expected alternating (value, stdev.) pairs in CSV data ' +\n                      'but line ' + (1 + i) + ' has an odd number of values (' +\n                      (inFields.length - 1) + \"): '\" + line + \"'\");\n      }\n      for (j = 1; j < inFields.length; j += 2) {\n        fields[(j + 1) / 2] = [utils.parseFloat_(inFields[j], i, line),\n                               utils.parseFloat_(inFields[j + 1], i, line)];\n      }\n    } else if (this.getBooleanOption(\"customBars\")) {\n      // Custom high/low bands are a low;centre;high tuple\n      for (j = 1; j < inFields.length; j++) {\n        var val = inFields[j];\n        if (/^ *$/.test(val)) {\n          fields[j] = [null, null, null];\n        } else {\n          vals = val.split(\";\");\n          if (vals.length == 3) {\n            fields[j] = [ utils.parseFloat_(vals[0], i, line),\n                          utils.parseFloat_(vals[1], i, line),\n                          utils.parseFloat_(vals[2], i, line) ];\n          } else {\n            console.warn('When using customBars, values must be either blank ' +\n                         'or \"low;center;high\" tuples (got \"' + val +\n                         '\" on line ' + (1+i) + ')');\n          }\n        }\n      }\n    } else {\n      // Values are just numbers\n      for (j = 1; j < inFields.length; j++) {\n        fields[j] = utils.parseFloat_(inFields[j], i, line);\n      }\n    }\n    if (ret.length > 0 && fields[0] < ret[ret.length - 1][0]) {\n      outOfOrder = true;\n    }\n\n    if (fields.length != expectedCols) {\n      console.error(\"Number of columns in line \" + i + \" (\" + fields.length +\n                    \") does not agree with number of labels (\" + expectedCols +\n                    \") \" + line);\n    }\n\n    // If the user specified the 'labels' option and none of the cells of the\n    // first row parsed correctly, then they probably double-specified the\n    // labels. We go with the values set in the option, discard this row and\n    // log a warning to the JS console.\n    if (i === 0 && this.attr_('labels')) {\n      var all_null = true;\n      for (j = 0; all_null && j < fields.length; j++) {\n        if (fields[j]) all_null = false;\n      }\n      if (all_null) {\n        console.warn(\"The dygraphs 'labels' option is set, but the first row \" +\n                     \"of CSV data ('\" + line + \"') appears to also contain \" +\n                     \"labels. Will drop the CSV labels and use the option \" +\n                     \"labels.\");\n        continue;\n      }\n    }\n    ret.push(fields);\n  }\n\n  if (outOfOrder) {\n    console.warn(\"CSV is out of order; order it correctly to speed loading.\");\n    ret.sort(function(a,b) { return a[0] - b[0]; });\n  }\n\n  return ret;\n};\n\n// In native format, all values must be dates or numbers.\n// This check isn't perfect but will catch most mistaken uses of strings.\nfunction validateNativeFormat(data) {\n  const firstRow = data[0];\n  const firstX = firstRow[0];\n  if (typeof firstX !== 'number' && !utils.isDateLike(firstX)) {\n    throw new Error(`Expected number or date but got ${typeof firstX}: ${firstX}.`);\n  }\n  for (let i = 1; i < firstRow.length; i++) {\n    const val = firstRow[i];\n    if (val === null || val === undefined) continue;\n    if (typeof val === 'number') continue;\n    if (utils.isArrayLike(val)) continue;  // e.g. errorBars or customBars\n    throw new Error(`Expected number or array but got ${typeof val}: ${val}.`);\n  }\n}\n\n/**\n * The user has provided their data as a pre-packaged JS array. If the x values\n * are numeric, this is the same as dygraphs' internal format. If the x values\n * are dates, we need to convert them from Date objects to ms since epoch.\n * @param {!Array} data\n * @return {Object} data with numeric x values.\n * @private\n */\nDygraph.prototype.parseArray_ = function(data) {\n  // Peek at the first x value to see if it's numeric.\n  if (data.length === 0) {\n    data = [[0]];\n  }\n  if (data[0].length === 0) {\n    console.error(\"Data set cannot contain an empty row\");\n    return null;\n  }\n\n  validateNativeFormat(data);\n\n  var i;\n  if (this.attr_(\"labels\") === null) {\n    console.warn(\"Using default labels. Set labels explicitly via 'labels' \" +\n                 \"in the options parameter\");\n    this.attrs_.labels = [ \"X\" ];\n    for (i = 1; i < data[0].length; i++) {\n      this.attrs_.labels.push(\"Y\" + i); // Not user_attrs_.\n    }\n    this.attributes_.reparseSeries();\n  } else {\n    var num_labels = this.attr_(\"labels\");\n    if (num_labels.length != data[0].length) {\n      console.error(\"Mismatch between number of labels (\" + num_labels + \")\" +\n                    \" and number of columns in array (\" + data[0].length + \")\");\n      return null;\n    }\n  }\n\n  if (utils.isDateLike(data[0][0])) {\n    // Some intelligent defaults for a date x-axis.\n    this.attrs_.axes.x.valueFormatter = utils.dateValueFormatter;\n    this.attrs_.axes.x.ticker = DygraphTickers.dateTicker;\n    this.attrs_.axes.x.axisLabelFormatter = utils.dateAxisLabelFormatter;\n\n    // Assume they're all dates.\n    var parsedData = utils.clone(data);\n    for (i = 0; i < data.length; i++) {\n      if (parsedData[i].length === 0) {\n        console.error(\"Row \" + (1 + i) + \" of data is empty\");\n        return null;\n      }\n      if (parsedData[i][0] === null ||\n          typeof(parsedData[i][0].getTime) != 'function' ||\n          isNaN(parsedData[i][0].getTime())) {\n        console.error(\"x value in row \" + (1 + i) + \" is not a Date\");\n        return null;\n      }\n      parsedData[i][0] = parsedData[i][0].getTime();\n    }\n    return parsedData;\n  } else {\n    // Some intelligent defaults for a numeric x-axis.\n    /** @private (shut up, jsdoc!) */\n    this.attrs_.axes.x.valueFormatter = function(x) { return x; };\n    this.attrs_.axes.x.ticker = DygraphTickers.numericTicks;\n    this.attrs_.axes.x.axisLabelFormatter = utils.numberAxisLabelFormatter;\n    return data;\n  }\n};\n\n/**\n * Parses a DataTable object from gviz.\n * The data is expected to have a first column that is either a date or a\n * number. All subsequent columns must be numbers. If there is a clear mismatch\n * between this.xValueParser_ and the type of the first column, it will be\n * fixed. Fills out rawData_.\n * @param {!google.visualization.DataTable} data See above.\n * @private\n */\nDygraph.prototype.parseDataTable_ = function(data) {\n  var shortTextForAnnotationNum = function(num) {\n    // converts [0-9]+ [A-Z][a-z]*\n    // example: 0=A, 1=B, 25=Z, 26=Aa, 27=Ab\n    // and continues like.. Ba Bb .. Za .. Zz..Aaa...Zzz Aaaa Zzzz\n    var shortText = String.fromCharCode(65 /* A */ + num % 26);\n    num = Math.floor(num / 26);\n    while ( num > 0 ) {\n      shortText = String.fromCharCode(65 /* A */ + (num - 1) % 26 ) + shortText.toLowerCase();\n      num = Math.floor((num - 1) / 26);\n    }\n    return shortText;\n  };\n\n  var cols = data.getNumberOfColumns();\n  var rows = data.getNumberOfRows();\n\n  var indepType = data.getColumnType(0);\n  if (indepType == 'date' || indepType == 'datetime') {\n    this.attrs_.xValueParser = utils.dateParser;\n    this.attrs_.axes.x.valueFormatter = utils.dateValueFormatter;\n    this.attrs_.axes.x.ticker = DygraphTickers.dateTicker;\n    this.attrs_.axes.x.axisLabelFormatter = utils.dateAxisLabelFormatter;\n  } else if (indepType == 'number') {\n    this.attrs_.xValueParser = function(x) { return parseFloat(x); };\n    this.attrs_.axes.x.valueFormatter = function(x) { return x; };\n    this.attrs_.axes.x.ticker = DygraphTickers.numericTicks;\n    this.attrs_.axes.x.axisLabelFormatter = this.attrs_.axes.x.valueFormatter;\n  } else {\n    throw new Error(\n          \"only 'date', 'datetime' and 'number' types are supported \" +\n          \"for column 1 of DataTable input (Got '\" + indepType + \"')\");\n  }\n\n  // Array of the column indices which contain data (and not annotations).\n  var colIdx = [];\n  var annotationCols = {};  // data index -> [annotation cols]\n  var hasAnnotations = false;\n  var i, j;\n  for (i = 1; i < cols; i++) {\n    var type = data.getColumnType(i);\n    if (type == 'number') {\n      colIdx.push(i);\n    } else if (type == 'string' && this.getBooleanOption('displayAnnotations')) {\n      // This is OK -- it's an annotation column.\n      var dataIdx = colIdx[colIdx.length - 1];\n      if (!annotationCols.hasOwnProperty(dataIdx)) {\n        annotationCols[dataIdx] = [i];\n      } else {\n        annotationCols[dataIdx].push(i);\n      }\n      hasAnnotations = true;\n    } else {\n      throw new Error(\n          \"Only 'number' is supported as a dependent type with Gviz.\" +\n          \" 'string' is only supported if displayAnnotations is true\");\n    }\n  }\n\n  // Read column labels\n  // TODO(danvk): add support back for errorBars\n  var labels = [data.getColumnLabel(0)];\n  for (i = 0; i < colIdx.length; i++) {\n    labels.push(data.getColumnLabel(colIdx[i]));\n    if (this.getBooleanOption(\"errorBars\")) i += 1;\n  }\n  this.attrs_.labels = labels;\n  cols = labels.length;\n\n  var ret = [];\n  var outOfOrder = false;\n  var annotations = [];\n  for (i = 0; i < rows; i++) {\n    var row = [];\n    if (typeof(data.getValue(i, 0)) === 'undefined' ||\n        data.getValue(i, 0) === null) {\n      console.warn(\"Ignoring row \" + i +\n                   \" of DataTable because of undefined or null first column.\");\n      continue;\n    }\n\n    if (indepType == 'date' || indepType == 'datetime') {\n      row.push(data.getValue(i, 0).getTime());\n    } else {\n      row.push(data.getValue(i, 0));\n    }\n    if (!this.getBooleanOption(\"errorBars\")) {\n      for (j = 0; j < colIdx.length; j++) {\n        var col = colIdx[j];\n        row.push(data.getValue(i, col));\n        if (hasAnnotations &&\n            annotationCols.hasOwnProperty(col) &&\n            data.getValue(i, annotationCols[col][0]) !== null) {\n          var ann = {};\n          ann.series = data.getColumnLabel(col);\n          ann.xval = row[0];\n          ann.shortText = shortTextForAnnotationNum(annotations.length);\n          ann.text = '';\n          for (var k = 0; k < annotationCols[col].length; k++) {\n            if (k) ann.text += \"\\n\";\n            ann.text += data.getValue(i, annotationCols[col][k]);\n          }\n          annotations.push(ann);\n        }\n      }\n\n      // Strip out infinities, which give dygraphs problems later on.\n      for (j = 0; j < row.length; j++) {\n        if (!isFinite(row[j])) row[j] = null;\n      }\n    } else {\n      for (j = 0; j < cols - 1; j++) {\n        row.push([ data.getValue(i, 1 + 2 * j), data.getValue(i, 2 + 2 * j) ]);\n      }\n    }\n    if (ret.length > 0 && row[0] < ret[ret.length - 1][0]) {\n      outOfOrder = true;\n    }\n    ret.push(row);\n  }\n\n  if (outOfOrder) {\n    console.warn(\"DataTable is out of order; order it correctly to speed loading.\");\n    ret.sort(function(a,b) { return a[0] - b[0]; });\n  }\n  this.rawData_ = ret;\n\n  if (annotations.length > 0) {\n    this.setAnnotations(annotations, true);\n  }\n  this.attributes_.reparseSeries();\n};\n\n/**\n * Signals to plugins that the chart data has updated.\n * This happens after the data has updated but before the chart has redrawn.\n * @private\n */\nDygraph.prototype.cascadeDataDidUpdateEvent_ = function() {\n  // TODO(danvk): there are some issues checking xAxisRange() and using\n  // toDomCoords from handlers of this event. The visible range should be set\n  // when the chart is drawn, not derived from the data.\n  this.cascadeEvents_('dataDidUpdate', {});\n};\n\n/**\n * Get the CSV data. If it's in a function, call that function. If it's in a\n * file, do an XMLHttpRequest to get it.\n * @private\n */\nDygraph.prototype.start_ = function() {\n  var data = this.file_;\n\n  // Functions can return references of all other types.\n  if (typeof data == 'function') {\n    data = data();\n  }\n\n  const datatype = utils.typeArrayLike(data);\n  if (datatype == 'array') {\n    this.rawData_ = this.parseArray_(data);\n    this.cascadeDataDidUpdateEvent_();\n    this.predraw_();\n  } else if (datatype == 'object' &&\n             typeof data.getColumnRange == 'function') {\n    // must be a DataTable from gviz.\n    this.parseDataTable_(data);\n    this.cascadeDataDidUpdateEvent_();\n    this.predraw_();\n  } else if (datatype == 'string') {\n    // Heuristic: a newline means it's CSV data. Otherwise it's an URL.\n    var line_delimiter = utils.detectLineDelimiter(data);\n    if (line_delimiter) {\n      this.loadedEvent_(data);\n    } else {\n      // REMOVE_FOR_IE\n      var req;\n      if (window.XMLHttpRequest) {\n        // Firefox, Opera, IE7, and other browsers will use the native object\n        req = new XMLHttpRequest();\n      } else {\n        // IE 5 and 6 will use the ActiveX control\n        req = new ActiveXObject(\"Microsoft.XMLHTTP\");\n      }\n\n      var caller = this;\n      req.onreadystatechange = function () {\n        if (req.readyState == 4) {\n          if (req.status === 200 ||  // Normal http\n              req.status === 0) {    // Chrome w/ --allow-file-access-from-files\n            caller.loadedEvent_(req.responseText);\n          }\n        }\n      };\n\n      req.open(\"GET\", data, true);\n      req.send(null);\n    }\n  } else {\n    console.error(\"Unknown data format: \" + datatype);\n  }\n};\n\n/**\n * Changes various properties of the graph. These can include:\n * <ul>\n * <li>file: changes the source data for the graph</li>\n * <li>errorBars: changes whether the data contains stddev</li>\n * </ul>\n *\n * There's a huge variety of options that can be passed to this method. For a\n * full list, see http://dygraphs.com/options.html.\n *\n * @param {Object} input_attrs The new properties and values\n * @param {boolean} block_redraw Usually the chart is redrawn after every\n *     call to updateOptions(). If you know better, you can pass true to\n *     explicitly block the redraw. This can be useful for chaining\n *     updateOptions() calls, avoiding the occasional infinite loop and\n *     preventing redraws when it's not necessary (e.g. when updating a\n *     callback).\n */\nDygraph.prototype.updateOptions = function(input_attrs, block_redraw) {\n  if (typeof(block_redraw) == 'undefined') block_redraw = false;\n\n  // copyUserAttrs_ drops the \"file\" parameter as a convenience to us.\n  var file = input_attrs.file;\n  var attrs = Dygraph.copyUserAttrs_(input_attrs);\n  var prevNumAxes = this.attributes_.numAxes();\n\n  // TODO(danvk): this is a mess. Move these options into attr_.\n  if ('rollPeriod' in attrs) {\n    this.rollPeriod_ = attrs.rollPeriod;\n  }\n  if ('dateWindow' in attrs) {\n    this.dateWindow_ = attrs.dateWindow;\n  }\n\n  // TODO(danvk): validate per-series options.\n  // Supported:\n  // strokeWidth\n  // pointSize\n  // drawPoints\n  // highlightCircleSize\n\n  // Check if this set options will require new points.\n  var requiresNewPoints = utils.isPixelChangingOptionList(this.attr_(\"labels\"), attrs);\n\n  utils.updateDeep(this.user_attrs_, attrs);\n\n  this.attributes_.reparseSeries();\n\n  if (prevNumAxes < this.attributes_.numAxes()) this.plotter_.clear();\n  if (file) {\n    // This event indicates that the data is about to change, but hasn't yet.\n    // TODO(danvk): support cancellation of the update via this event.\n    this.cascadeEvents_('dataWillUpdate', {});\n\n    this.file_ = file;\n    if (!block_redraw) this.start_();\n  } else {\n    if (!block_redraw) {\n      if (requiresNewPoints) {\n        this.predraw_();\n      } else {\n        this.renderGraph_(false);\n      }\n    }\n  }\n};\n\n/**\n * Make a copy of input attributes, removing file as a convenience.\n * @private\n */\nDygraph.copyUserAttrs_ = function(attrs) {\n  var my_attrs = {};\n  for (var k in attrs) {\n    if (!attrs.hasOwnProperty(k)) continue;\n    if (k == 'file') continue;\n    if (attrs.hasOwnProperty(k)) my_attrs[k] = attrs[k];\n  }\n  return my_attrs;\n};\n\n/**\n * Resizes the dygraph. If no parameters are specified, resizes to fill the\n * containing div (which has presumably changed size since the dygraph was\n * instantiated). If the width/height are specified, the div will be resized.\n *\n * This is far more efficient than destroying and re-instantiating a\n * Dygraph, since it doesn't have to reparse the underlying data.\n *\n * @param {number} width Width (in pixels)\n * @param {number} height Height (in pixels)\n */\nDygraph.prototype.resize = function(width, height) {\n  if (this.resize_lock) {\n    return;\n  }\n  this.resize_lock = true;\n\n  if ((width === null) != (height === null)) {\n    console.warn(\"Dygraph.resize() should be called with zero parameters or \" +\n                 \"two non-NULL parameters. Pretending it was zero.\");\n    width = height = null;\n  }\n\n  var old_width = this.width_;\n  var old_height = this.height_;\n\n  if (width) {\n    this.maindiv_.style.width = width + \"px\";\n    this.maindiv_.style.height = height + \"px\";\n    this.width_ = width;\n    this.height_ = height;\n  } else {\n    this.width_ = this.maindiv_.clientWidth;\n    this.height_ = this.maindiv_.clientHeight;\n  }\n\n  if (old_width != this.width_ || old_height != this.height_) {\n    // Resizing a canvas erases it, even when the size doesn't change, so\n    // any resize needs to be followed by a redraw.\n    this.resizeElements_();\n    this.predraw_();\n  }\n\n  this.resize_lock = false;\n};\n\n/**\n * Adjusts the number of points in the rolling average. Updates the graph to\n * reflect the new averaging period.\n * @param {number} length Number of points over which to average the data.\n */\nDygraph.prototype.adjustRoll = function(length) {\n  this.rollPeriod_ = length;\n  this.predraw_();\n};\n\n/**\n * Returns a boolean array of visibility statuses.\n */\nDygraph.prototype.visibility = function() {\n  // Do lazy-initialization, so that this happens after we know the number of\n  // data series.\n  if (!this.getOption(\"visibility\")) {\n    this.attrs_.visibility = [];\n  }\n  // TODO(danvk): it looks like this could go into an infinite loop w/ user_attrs.\n  while (this.getOption(\"visibility\").length < this.numColumns() - 1) {\n    this.attrs_.visibility.push(true);\n  }\n  return this.getOption(\"visibility\");\n};\n\n/**\n * Changes the visibility of one or more series.\n *\n * @param {number|number[]|object} num the series index or an array of series indices\n *                                     or a boolean array of visibility states by index\n *                                     or an object mapping series numbers, as keys, to\n *                                     visibility state (boolean values)\n * @param {boolean} value the visibility state expressed as a boolean\n */\nDygraph.prototype.setVisibility = function(num, value) {\n  var x = this.visibility();\n  var numIsObject = false;\n\n  if (!Array.isArray(num)) {\n    if (num !== null && typeof num === 'object') {\n      numIsObject = true;\n    } else {\n      num = [num];\n    }\n  }\n\n  if (numIsObject) {\n    for (var i in num) {\n      if (num.hasOwnProperty(i)) {\n        if (i < 0 || i >= x.length) {\n          console.warn(\"Invalid series number in setVisibility: \" + i);\n        } else {\n          x[i] = num[i];\n        }\n      }\n    }\n  } else {\n    for (var i = 0; i < num.length; i++) {\n      if (typeof num[i] === 'boolean') {\n        if (i >= x.length) {\n          console.warn(\"Invalid series number in setVisibility: \" + i);\n        } else {\n          x[i] = num[i];\n        }\n      } else {\n        if (num[i] < 0 || num[i] >= x.length) {\n          console.warn(\"Invalid series number in setVisibility: \" + num[i]);\n        } else {\n          x[num[i]] = value;\n        }\n      }\n    }\n  }\n\n  this.predraw_();\n};\n\n/**\n * How large of an area will the dygraph render itself in?\n * This is used for testing.\n * @return A {width: w, height: h} object.\n * @private\n */\nDygraph.prototype.size = function() {\n  return { width: this.width_, height: this.height_ };\n};\n\n/**\n * Update the list of annotations and redraw the chart.\n * See dygraphs.com/annotations.html for more info on how to use annotations.\n * @param ann {Array} An array of annotation objects.\n * @param suppressDraw {Boolean} Set to \"true\" to block chart redraw (optional).\n */\nDygraph.prototype.setAnnotations = function(ann, suppressDraw) {\n  // Only add the annotation CSS rule once we know it will be used.\n  this.annotations_ = ann;\n  if (!this.layout_) {\n    console.warn(\"Tried to setAnnotations before dygraph was ready. \" +\n                 \"Try setting them in a ready() block. See \" +\n                 \"dygraphs.com/tests/annotation.html\");\n    return;\n  }\n\n  this.layout_.setAnnotations(this.annotations_);\n  if (!suppressDraw) {\n    this.predraw_();\n  }\n};\n\n/**\n * Return the list of annotations.\n */\nDygraph.prototype.annotations = function() {\n  return this.annotations_;\n};\n\n/**\n * Get the list of label names for this graph. The first column is the\n * x-axis, so the data series names start at index 1.\n *\n * Returns null when labels have not yet been defined.\n */\nDygraph.prototype.getLabels = function() {\n  var labels = this.attr_(\"labels\");\n  return labels ? labels.slice() : null;\n};\n\n/**\n * Get the index of a series (column) given its name. The first column is the\n * x-axis, so the data series start with index 1.\n */\nDygraph.prototype.indexFromSetName = function(name) {\n  return this.setIndexByName_[name];\n};\n\n/**\n * Find the row number corresponding to the given x-value.\n * Returns null if there is no such x-value in the data.\n * If there are multiple rows with the same x-value, this will return the\n * first one.\n * @param {number} xVal The x-value to look for (e.g. millis since epoch).\n * @return {?number} The row number, which you can pass to getValue(), or null.\n */\nDygraph.prototype.getRowForX = function(xVal) {\n  var low = 0,\n      high = this.numRows() - 1;\n\n  while (low <= high) {\n    var idx = (high + low) >> 1;\n    var x = this.getValue(idx, 0);\n    if (x < xVal) {\n      low = idx + 1;\n    } else if (x > xVal) {\n      high = idx - 1;\n    } else if (low != idx) {  // equal, but there may be an earlier match.\n      high = idx;\n    } else {\n      return idx;\n    }\n  }\n\n  return null;\n};\n\n/**\n * Trigger a callback when the dygraph has drawn itself and is ready to be\n * manipulated. This is primarily useful when dygraphs has to do an XHR for the\n * data (i.e. a URL is passed as the data source) and the chart is drawn\n * asynchronously. If the chart has already drawn, the callback will fire\n * immediately.\n *\n * This is a good place to call setAnnotation().\n *\n * @param {function(!Dygraph)} callback The callback to trigger when the chart\n *     is ready.\n */\nDygraph.prototype.ready = function(callback) {\n  if (this.is_initial_draw_) {\n    this.readyFns_.push(callback);\n  } else {\n    callback.call(this, this);\n  }\n};\n\n/**\n * Add an event handler. This event handler is kept until the graph is\n * destroyed with a call to graph.destroy().\n *\n * @param {!Node} elem The element to add the event to.\n * @param {string} type The type of the event, e.g. 'click' or 'mousemove'.\n * @param {function(Event):(boolean|undefined)} fn The function to call\n *     on the event. The function takes one parameter: the event object.\n * @private\n */\nDygraph.prototype.addAndTrackEvent = function(elem, type, fn) {\n  utils.addEvent(elem, type, fn);\n  this.registeredEvents_.push({elem, type, fn});\n};\n\nDygraph.prototype.removeTrackedEvents_ = function() {\n  if (this.registeredEvents_) {\n    for (var idx = 0; idx < this.registeredEvents_.length; idx++) {\n      var reg = this.registeredEvents_[idx];\n      utils.removeEvent(reg.elem, reg.type, reg.fn);\n    }\n  }\n\n  this.registeredEvents_ = [];\n};\n\n// Installed plugins, in order of precedence (most-general to most-specific).\nDygraph.PLUGINS = [\n  LegendPlugin,\n  AxesPlugin,\n  RangeSelectorPlugin, // Has to be before ChartLabels so that its callbacks are called after ChartLabels' callbacks.\n  ChartLabelsPlugin,\n  AnnotationsPlugin,\n  GridPlugin\n];\n\n// There are many symbols which have historically been available through the\n// Dygraph class. These are exported here for backwards compatibility.\nDygraph.GVizChart = GVizChart;\nDygraph.DASHED_LINE = utils.DASHED_LINE;\nDygraph.DOT_DASH_LINE = utils.DOT_DASH_LINE;\nDygraph.dateAxisLabelFormatter = utils.dateAxisLabelFormatter;\nDygraph.toRGB_ = utils.toRGB_;\nDygraph.findPos = utils.findPos;\nDygraph.pageX = utils.pageX;\nDygraph.pageY = utils.pageY;\nDygraph.dateString_ = utils.dateString_;\nDygraph.defaultInteractionModel = DygraphInteraction.defaultModel;\nDygraph.nonInteractiveModel = Dygraph.nonInteractiveModel_ = DygraphInteraction.nonInteractiveModel_;\nDygraph.Circles = utils.Circles;\n\nDygraph.Plugins = {\n  Legend: LegendPlugin,\n  Axes: AxesPlugin,\n  Annotations: AnnotationsPlugin,\n  ChartLabels: ChartLabelsPlugin,\n  Grid: GridPlugin,\n  RangeSelector: RangeSelectorPlugin\n};\n\nDygraph.DataHandlers = {\n  DefaultHandler,\n  BarsHandler,\n  CustomBarsHandler,\n  DefaultFractionHandler,\n  ErrorBarsHandler,\n  FractionsBarsHandler\n};\n\nDygraph.startPan = DygraphInteraction.startPan;\nDygraph.startZoom = DygraphInteraction.startZoom;\nDygraph.movePan = DygraphInteraction.movePan;\nDygraph.moveZoom = DygraphInteraction.moveZoom;\nDygraph.endPan = DygraphInteraction.endPan;\nDygraph.endZoom = DygraphInteraction.endZoom;\n\nDygraph.numericLinearTicks = DygraphTickers.numericLinearTicks;\nDygraph.numericTicks = DygraphTickers.numericTicks;\nDygraph.dateTicker = DygraphTickers.dateTicker;\nDygraph.Granularity = DygraphTickers.Granularity;\nDygraph.getDateAxis = DygraphTickers.getDateAxis;\nDygraph.floatFormat = utils.floatFormat;\n\nutils.setupDOMready_(Dygraph);\n\nexport default Dygraph;\n","/* Font Face Observer v2.3.0 - © Bram Stein. License: BSD-3-Clause */(function(){function p(a,c){document.addEventListener?a.addEventListener(\"scroll\",c,!1):a.attachEvent(\"scroll\",c)}function u(a){document.body?a():document.addEventListener?document.addEventListener(\"DOMContentLoaded\",function b(){document.removeEventListener(\"DOMContentLoaded\",b);a()}):document.attachEvent(\"onreadystatechange\",function g(){if(\"interactive\"==document.readyState||\"complete\"==document.readyState)document.detachEvent(\"onreadystatechange\",g),a()})};function w(a){this.g=document.createElement(\"div\");this.g.setAttribute(\"aria-hidden\",\"true\");this.g.appendChild(document.createTextNode(a));this.h=document.createElement(\"span\");this.i=document.createElement(\"span\");this.m=document.createElement(\"span\");this.j=document.createElement(\"span\");this.l=-1;this.h.style.cssText=\"max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;\";this.i.style.cssText=\"max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;\";\nthis.j.style.cssText=\"max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;\";this.m.style.cssText=\"display:inline-block;width:200%;height:200%;font-size:16px;max-width:none;\";this.h.appendChild(this.m);this.i.appendChild(this.j);this.g.appendChild(this.h);this.g.appendChild(this.i)}\nfunction x(a,c){a.g.style.cssText=\"max-width:none;min-width:20px;min-height:20px;display:inline-block;overflow:hidden;position:absolute;width:auto;margin:0;padding:0;top:-999px;white-space:nowrap;font-synthesis:none;font:\"+c+\";\"}function B(a){var c=a.g.offsetWidth,b=c+100;a.j.style.width=b+\"px\";a.i.scrollLeft=b;a.h.scrollLeft=a.h.scrollWidth+100;return a.l!==c?(a.l=c,!0):!1}function C(a,c){function b(){var e=g;B(e)&&null!==e.g.parentNode&&c(e.l)}var g=a;p(a.h,b);p(a.i,b);B(a)};function D(a,c,b){c=c||{};b=b||window;this.family=a;this.style=c.style||\"normal\";this.weight=c.weight||\"normal\";this.stretch=c.stretch||\"normal\";this.context=b}var E=null,F=null,G=null,H=null;function I(a){null===F&&(M(a)&&/Apple/.test(window.navigator.vendor)?(a=/AppleWebKit\\/([0-9]+)(?:\\.([0-9]+))(?:\\.([0-9]+))/.exec(window.navigator.userAgent),F=!!a&&603>parseInt(a[1],10)):F=!1);return F}function M(a){null===H&&(H=!!a.document.fonts);return H}\nfunction N(a,c){var b=a.style,g=a.weight;if(null===G){var e=document.createElement(\"div\");try{e.style.font=\"condensed 100px sans-serif\"}catch(q){}G=\"\"!==e.style.font}return[b,g,G?a.stretch:\"\",\"100px\",c].join(\" \")}\nD.prototype.load=function(a,c){var b=this,g=a||\"BESbswy\",e=0,q=c||3E3,J=(new Date).getTime();return new Promise(function(K,L){if(M(b.context)&&!I(b.context)){var O=new Promise(function(r,t){function h(){(new Date).getTime()-J>=q?t(Error(\"\"+q+\"ms timeout exceeded\")):b.context.document.fonts.load(N(b,'\"'+b.family+'\"'),g).then(function(n){1<=n.length?r():setTimeout(h,25)},t)}h()}),P=new Promise(function(r,t){e=setTimeout(function(){t(Error(\"\"+q+\"ms timeout exceeded\"))},q)});Promise.race([P,O]).then(function(){clearTimeout(e);\nK(b)},L)}else u(function(){function r(){var d;if(d=-1!=k&&-1!=l||-1!=k&&-1!=m||-1!=l&&-1!=m)(d=k!=l&&k!=m&&l!=m)||(null===E&&(d=/AppleWebKit\\/([0-9]+)(?:\\.([0-9]+))/.exec(window.navigator.userAgent),E=!!d&&(536>parseInt(d[1],10)||536===parseInt(d[1],10)&&11>=parseInt(d[2],10))),d=E&&(k==y&&l==y&&m==y||k==z&&l==z&&m==z||k==A&&l==A&&m==A)),d=!d;d&&(null!==f.parentNode&&f.parentNode.removeChild(f),clearTimeout(e),K(b))}function t(){if((new Date).getTime()-J>=q)null!==f.parentNode&&f.parentNode.removeChild(f),\nL(Error(\"\"+q+\"ms timeout exceeded\"));else{var d=b.context.document.hidden;if(!0===d||void 0===d)k=h.g.offsetWidth,l=n.g.offsetWidth,m=v.g.offsetWidth,r();e=setTimeout(t,50)}}var h=new w(g),n=new w(g),v=new w(g),k=-1,l=-1,m=-1,y=-1,z=-1,A=-1,f=document.createElement(\"div\");f.dir=\"ltr\";x(h,N(b,\"sans-serif\"));x(n,N(b,\"serif\"));x(v,N(b,\"monospace\"));f.appendChild(h.g);f.appendChild(n.g);f.appendChild(v.g);b.context.document.body.appendChild(f);y=h.g.offsetWidth;z=n.g.offsetWidth;A=v.g.offsetWidth;t();\nC(h,function(d){k=d;r()});x(h,N(b,'\"'+b.family+'\",sans-serif'));C(n,function(d){l=d;r()});x(n,N(b,'\"'+b.family+'\",serif'));C(v,function(d){m=d;r()});x(v,N(b,'\"'+b.family+'\",monospace'))})})};\"object\"===typeof module?module.exports=D:(window.FontFaceObserver=D,window.FontFaceObserver.prototype.load=D.prototype.load);}());\n","function getEventCoordinates(canvas, e) {\n    var rect = canvas.getBoundingClientRect();\n    var x = e.clientX - rect.left;\n    var y = e.clientY - rect.top;\n\n    return { x, y };\n}\n\nfunction between(v, min, max) { return v >= min && v <= max }\n\nfunction isPointInTag(x, y, tag) {\n    return between(x, tag.x, tag.x + tag.w) && between(y, tag.y, tag.y + tag.h);\n}\n\nexport function getSelectedTag(event, canvas, tags) {\n    var { x, y } = getEventCoordinates(canvas, event);\n\n    for (var i = 0; i < tags.length; i++) {\n        if (isPointInTag(x, y, tags[i])) {\n            return tags[i];\n        }\n    }\n}\n/**\n * Draws a tag on the graph using the provided ctx\n * @param {CanvasRenderingContext2D} ctx The context for the graph's canvas.\n * @param {datagraph.TagConfiguration} tag The tag to be drawn on the graph's canvas.\n * @param {number} domX The x coordinate on the canvas/div that represents the tag's xValue.\n * @param {number} domY The y coordinate on the canvas/div that represents the bottom of the graph.\n */\nexport function drawTag(ctx, tag, domX, domY) {\n    tag.h = tag.tagHeight + tag.pinHeight;\n    tag.w = tag.tagWidth;\n    tag.x = domX - (tag.w / 2.0);\n    tag.y = domY - tag.h;\n\n    //! Start clearing 1 px to the left of actual tag\n    //! so that there is a small gap between tags\n    ctx.clearRect(tag.x - 1, tag.y, tag.w + 2, tag.tagHeight);\n\n    ctx.fillStyle = tag.backgroundColor;\n\n    //! Draw pin\n    ctx.fillRect(domX, domY - tag.pinHeight, tag.pinWidth, tag.pinHeight);\n    //! Draw tag\n    ctx.fillRect(tag.x, tag.y, tag.w, tag.tagHeight);\n\n    //! Draw icon\n    ctx.fillStyle = tag.color;\n    ctx.textAlign = \"center\";\n    ctx.font = tag.font;\n    ctx.fillText(tag.text, domX, domY - tag.pinHeight - (tag.tagHeight * 0.25), tag.tagWidth);\n}","/**\n * Draws a line on the graph using the provided ctx\n * @param {CanvasRenderingContext2D} ctx The context for the graph's canvas.\n * @param {datagraph.ExtraLineConfiguration} line The line to be drawn on the graph's canvas.\n * @param {[number, number]} start The coordinates of the line's starting point on the canvas/div.\n * @param {[number, number]} end The coordinates of the line's ending point on the canvas/div.\n */\nexport function drawExtraLine(ctx, line, start, end) {\n    ctx.setLineDash(line.strokePattern);\n    ctx.strokeStyle = line.color;\n    ctx.lineWidth = line.strokeWidth;\n\n    let roundedY = Math.round(start[1]) - 0.5\n\n    ctx.beginPath();\n    ctx.moveTo(start[0], roundedY);\n    ctx.lineTo(end[0], roundedY);\n    ctx.stroke();\n}","/**\n * Draws a circle centered on (cx, cy) with the given context\n * \n * @param {CanvasRenderingContext2D} ctx The canvas context to draw on.\n * @param {number} cx The canvas x coordinate the center the circle on.\n * @param {number} cy The canvas y coordinate the center the circle on.\n * @param {datagraph.CircleConfiguration} config Styling options for the circle.\n */\nexport function drawCircleAtPoint(ctx, cx, cy, config) {\n    ctx.beginPath();\n    ctx.arc(cx, cy, config.radius, 0, Math.PI * 2);\n    if (config.fillColor !== null) {\n        ctx.fillStyle = config.fillColor;\n        ctx.fill();\n    }\n\n    if (config.strokeColor !== null) {\n        ctx.strokeStyle = config.strokeColor;\n        ctx.lineWidth = config.strokeWidth;\n        ctx.setLineDash(config.strokePattern);\n        ctx.stroke();\n    }\n}","import Dygraph from 'dygraphs';\nimport FontFaceObserver from 'fontfaceobserver';\nimport { getSelectedTag, drawTag } from './utils/tag_utils';\nimport { drawExtraLine } from './utils/extra_line_utils';\nimport { drawCircleAtPoint } from './utils/circle_utils';\n\n//! ========== CONSTANTS ==========\n\n/** Index of the graph's container's css rule */\nconst chartDivRuleIndex = 1;\n\n/** Index of the graph's legend's css rule */\nconst legendDivRuleIndex = 2;\n\n/** Index of the x-axis labels' css rule */\nconst xAxisLabelRuleIndex = 3;\n\n/** Index of the y-axis labels' css rule */\nconst yAxisLabelRuleIndex = 4;\n\n//! ========== GLOBALS ==========\n\n/**\n * The graph to be displayed.\n * \n * @type {Dygraph}\n */\nlet graph = null;\n\n/**\n * The full range of the y-axis.\n * \n * @type {[number, number]}\n */\nlet fullYRange = [0, 0];\n\n/**\n * List of currently circled points and their circle's configuration.\n * @type {{x: number, y: number, config: datagraph.CircleConfiguration}[]}\n */\nlet circledPoints = [];\n\n//! ========== INTERACTION MODEL DELEGATES ==========\n/**\n * Function to be called in graph's interaction model mouseup event.\n * \n * Held as a delegate here to avoid stale capture issues when using values from Flutter state in the hanlder itself.\n */\nlet mouseupDelegate = null;\n\n//! ========== INTEROP FUNCTIONS ==========\n/**\n* Initializes the graph with the provided data and configuration.\n* \n* After initialization, `click` and `mousemove` event handlers are added to the graph's canvas\n* to handle Tag hover and clicks.\n* @param {number[][]} data The data that will be displayed in the graph. Each data point must be represented in the format: [x, y1, y2, y3, ...]\n* @param {datagraph.GraphConfiguration} config Configuration for many aspects of the graph.\n* @returns {void}\n*/\nfunction initGraph(data, config) {\n  graph = new Dygraph(\n    //! Div Element for Graph\n    document.getElementById(\"graph\"),\n    //! Data\n    data,\n    //! Options\n    buildOptions(config)\n  );\n\n  graph.ready(async (g) => {\n    var fontAwesomeObserver = new FontFaceObserver('Font Awesome 6 Free', { weight: 900 });\n    try {\n      await fontAwesomeObserver.load();\n    } catch (err) { }\n    updateYRange(config.minY, config.maxY, config.reverseScale, config.yRangePad);\n  });\n}\n\n/**\n* Updates the options used by the graph. \n* \n* Used to alter configuration after graph has been initialized.\n* @param {datagraph.GraphConfiguration} config Configuration for many aspects of the graph.\n*/\nfunction updateConfig(config) {\n  graph.updateOptions(buildOptions(config));\n  updateYRange(config.minY, config.maxY, config.reverseScale);\n}\n\n/**\n* Updates the data presented by the graph. \n* \n* Used to alter data after graph has been initialized.\n* @param {number[][]} data The data that will be displayed in the graph. Each data point must be represented in the format: [x, y1, y2, y3, ...]\n*/\nfunction updateData(data) {\n  graph.updateOptions({ file: data });\n}\n\n/**\n * Focuses the graph on the specified x and y-axis ranges.\n * @param {{min: number, max: number} | null} xRange \n * @param {{min: number, max: number} | null} yRange \n */\nfunction zoom(xRange, yRange) {\n  graph.updateOptions({\n    ...(xRange != null && { dateWindow: [xRange.min, xRange.max] }),\n    ...(yRange != null && { valueRange: [yRange.min, yRange.max] }),\n  });\n}\n\n/**\n * Draws a circle centered on the provided `x` and `y` coordinates.\n * @param {number} x The x coordinate for the circle to be centered on.\n * @param {number} y The y coordinate for the circle to be centered on.\n * @param {number} persist Whether the circle should persist until manually cleared or automatically clear when the user zooms or pans\n * @param {datagraph.CircleConfiguration} config Styling options for the circle.\n */\nfunction circlePoint(x, y, persist, config) {\n  let [cx, cy] = graph.toDomCoords(x, y);\n\n  drawCircleAtPoint(graph.hidden_ctx_, cx, cy, config);\n\n  if (persist) circledPoints.push({ x: x, y: y, config: config });\n}\n\n/**\n * Clears the circle from point centered at `(x, y)`\n * \n * Only clears circles drawn with persist set to true.\n * @param {number} x x-axis value for center of point.\n * @param {number} y y-axis value for center of point.\n */\nfunction clearCircledPoint(x, y) {\n  let i = circledPoints.findIndex((e) => (e.x == x && e.y == y));\n\n  if (i != -1) circledPoints.splice(i, 1);\n\n  graph.updateOptions({});\n}\n\n/** Clears all circles drawn with persist set to true. */\nfunction clearAllCircledPoints() {\n  circledPoints = [];\n\n  graph.updateOptions({});\n}\n\n//! ========== INTEROP FUNCTION EXPORTS ==========\nwindow.initGraph = initGraph;\nwindow.updateConfig = updateConfig;\nwindow.updateData = updateData;\nwindow.zoom = zoom;\nwindow.cancelZoom = function () { g.clearZoomRect_() };\n\nwindow.circlePoint = circlePoint;\nwindow.clearCircledPoint = clearCircledPoint;\nwindow.clearAllCircledPoints = clearAllCircledPoints;\n\nwindow.dispose = function () {\n  console.log('destroying graph!')\n  graph.destroy();\n};\n\n// Pseudo getters for axis range values.\nwindow.yAxisExtremes = function () { return fullYRange; }\nwindow.visibleYAxisRange = function () { return graph.yAxisRange(); }\nwindow.xAxisExtremes = function () { return graph.xAxisExtremes(); }\nwindow.visibleXAxisRange = function () { return graph.xAxisRange(); }\n\n//! ========== GRAPH/CONFIG UTILITY FUNCTIONS ==========\n/**\n * Finds the new full range of y-axis from either config or axis extremes.\n * @param {number | null} minY The minY value provided in config.\n * @param {number | null} maxY The maxY value provided in config.\n * @param {boolean} reverseScale The reverseScale value provided in config.\n */\nfunction updateYRange(minY, maxY, reverseScale) {\n  if (minY != null && maxY != null) {\n    fullYRange = [minY, maxY];\n  } else {\n    let [lower, upper] = graph.yAxisExtremes()[0];\n\n    fullYRange = [minY ?? (reverseScale ? upper : lower), maxY ?? (reverseScale ? lower : upper)];\n  }\n\n  graph.updateOptions({ valueRange: fullYRange });\n}\n\n/**\n * Applies styling options from config to items that require CSS rule manipulation.\n * @param {datagraph.GraphConfiguration} config \n */\nfunction applyCssStyles(config) {\n  const stylesheet = document.styleSheets[1];\n\n  let chartDivRule = stylesheet.cssRules[chartDivRuleIndex];\n  let legendDivRule = stylesheet.cssRules[legendDivRuleIndex];\n  let yAxisLabelRule = stylesheet.cssRules[yAxisLabelRuleIndex];\n  let xAxisLabelRule = stylesheet.cssRules[xAxisLabelRuleIndex];\n\n  chartDivRule.style.backgroundColor = config.backgroundColor ?? 'white';\n\n  if (config.legendConfig != null) {\n    let c = config.legendConfig;\n    legendDivRule.style.backgroundColor = c.backgroundColor;\n    legendDivRule.style.color = c.color;\n    legendDivRule.style.padding = c.padding;\n    legendDivRule.style.border = c.border;\n    legendDivRule.style.borderRadius = c.borderRadius;\n\n    if (c.type !== 'follow') {\n      legendDivRule.style.left = c.left;\n      legendDivRule.style.top = c.top;\n      legendDivRule.style.right = c.right;\n      legendDivRule.style.bottom = c.bottom;\n    }\n  }\n\n  yAxisLabelRule.style.color = config.yAxisConfig?.axisLabelColor ?? 'black';\n  xAxisLabelRule.style.color = config.xAxisConfig?.axisLabelColor ?? 'black';\n}\n\n/**\n* Builds Dygraph Options object from config.\n* @param {datagraph.GraphConfiguration} config Configuration for many aspects of the graph.\n* @returns {import(\"dygraphs\").dygraphs.Options} \n*/\nfunction buildOptions(config) {\n  let tags = config.tags;\n  let labels = [config.xLabel];\n  let series = {};\n\n  config.series.forEach((e) => {\n    labels.push(e.name);\n    series[e.name] = {\n      color: e.color,\n      strokeWidth: e.strokeWidth,\n      strokeBorderWidth: e.strokeBorderWidth,\n      strokeBorderColor: e.strokeBorderColor,\n      strokePattern: e.strokePattern,\n      drawPoints: e.drawPoints,\n      pointSize: e.pointSize,\n      highlightCircleSize: e.highlightCircleSize,\n    };\n  });\n\n  mouseupDelegate = config.mouseupHandler;\n\n  applyCssStyles(config);\n\n  return {\n    //! ========== GENERIC CONFIG ========== //\n    labelsDiv: document.getElementById('legend'),\n    labels: labels,\n    rightGap: config.rightGap ?? 0,\n    xRangePad: config.xRangePad,\n    legend: config.legendConfig?.type,\n    labelsSeparateLines: config.legendConfig?.labelsSeparateLines,\n    highlightSeriesOpts: config.highlightSeriesOpts == null ? null : {\n      color: config.highlightSeriesOpts?.color,\n      strokeWidth: config.highlightSeriesOpts?.strokeWidth,\n      strokeBorderWidth: config.highlightSeriesOpts?.strokeBorderWidth,\n      strokeBorderColor: config.highlightSeriesOpts?.strokeBorderColor,\n      strokePattern: config.highlightSeriesOpts?.strokePattern,\n      drawPoints: config.highlightSeriesOpts?.drawPoints,\n      pointSize: config.highlightSeriesOpts?.pointSize,\n      highlightCircleSize: config.highlightSeriesOpts?.highlightCircleSize,\n    },\n    highlightSeriesBackgroundColor: config.highlightSeriesBackgroundColor,\n    highlightSeriesBackgroundAlpha: config.highlightSeriesBackgroundAlpha,\n    valueFormatter: (v, opt, series, g, row, col) => config.valueFormatter?.call(v, series) ?? v,\n    interactionModel: {\n      ...Dygraph.defaultInteractionModel,\n      dblclick(e, g, ctx) {\n        g.resetZoom();\n        g.updateOptions({ valueRange: fullYRange });\n      },\n      mouseup(e, g, ctx) {\n        try {\n          mouseupDelegate?.call(e, g, ctx);\n        } catch (_) { }\n      }\n    },\n    //! ========== AXIS CONFIG ========== //\n    axes: {\n      y: config.yAxisConfig == null ? undefined : {\n        axisLabelFontSize: config.yAxisConfig?.axisLabelFontSize,\n        axisLabelWidth: config.yAxisConfig?.axisLabelWidth,\n        axisLineColor: config.yAxisConfig?.axisLineColor,\n        axisLineWidth: config.yAxisConfig?.axisLineWidth,\n        gridLineColor: config.yAxisConfig?.gridLineColor,\n        gridLinePattern: config.yAxisConfig?.gridLinePattern,\n        gridLineWidth: config.yAxisConfig?.gridLineWidth,\n        ...(config.yAxisConfig?.ticker != null && { ticker: (a, b, pixels, opts, dygraph, vals) => config.yAxisConfig?.ticker?.call(a, b, pixels) }),\n        ...(config.yAxisConfig?.labelFormatter != null && { axisLabelFormatter: (v, g, opts, graph) => config.yAxisConfig?.labelFormatter?.call(v, g) }),\n        ...(config.yAxisConfig?.valueFormatter != null && { valueFormatter: (v, opts, series, graph, row, col) => config.yAxisConfig?.valueFormatter?.call(v, series) }),\n      },\n      x: config.xAxisConfig == null ? undefined : {\n        axisLabelFontSize: config.xAxisConfig?.axisLabelFontSize ?? 14,\n        axisLabelWidth: config.xAxisConfig?.axisLabelWidth,\n        axisLineColor: config.xAxisConfig?.axisLineColor,\n        axisLineWidth: config.xAxisConfig?.axisLineWidth,\n        gridLineColor: config.xAxisConfig?.gridLineColor,\n        gridLinePattern: config.xAxisConfig?.gridLinePattern,\n        gridLineWidth: config.xAxisConfig?.gridLineWidth,\n        ...(config.xAxisConfig?.ticker != null && { ticker: (a, b, pixels, opts, dygraph, vals) => config.xAxisConfig?.ticker?.call(a, b, pixels) }),\n        ...(config.xAxisConfig?.labelFormatter != null && { axisLabelFormatter: (v, g, opts, graph) => config.xAxisConfig?.labelFormatter?.call(v, g) }),\n        ...(config.xAxisConfig?.valueFormatter != null && { valueFormatter: (v, opts, series, graph, row, col) => config.xAxisConfig?.valueFormatter?.call(v, series) }),\n      },\n    },\n    //! ========== SERIES ========== //\n    series: series,\n    //! ========== CALLBACKS ========== //\n    clickCallback: function (e, x, points) {\n      let tag = getSelectedTag(e, graph.canvas_, config.tags);\n      if (tag == null) {\n        config.clickCallback?.call(e, x, points);\n      } else {\n        tag.onTap?.call(tag.xValue);\n      }\n\n    },\n    pointClickCallback: (e, point) => config.pointClickCallback?.call(e, point),\n    highlightCallback: function (e, x, points, row, series) {\n      graph.canvas_.style.cursor = getSelectedTag(e, graph.canvas_, config.tags) == null ? \"default\" : \"pointer\";\n\n      config.highlightCallback?.call(e, x, points, row, series);\n    },\n    unhighlightCallback: (e) => config.unhighlightCallback?.call(e),\n    drawCallback: function (g, initial) {\n      circledPoints.forEach((e) => {\n        let [cx, cy] = g.toDomCoords(e.x, e.y);\n        drawCircleAtPoint(g.hidden_ctx_, cx, cy, e.config);\n      });\n\n      config.drawCallback?.call(g, initial);\n    },\n    zoomCallback: (minX, maxX, yRanges) => config.zoomCallback?.call(minX, maxX, yRanges),\n    underlayCallback: function (ctx, area, g) {\n      ctx.clearRect(0, 0, area.w, area.h);\n      let [xMin, xMax] = g.xAxisRange();\n\n      //! Draw extra lines\n      config.extraLines.forEach((line) => {\n        drawExtraLine(ctx, line, g.toDomCoords(xMin, line.yValue), g.toDomCoords(xMax, line.yValue));\n      });\n\n      ctx.setLineDash([]);\n\n      //! Draw tags\n      let domY = g.toDomYCoord(g.yAxisRange()[0])\n      tags.forEach((e) => {\n        if (e.xValue < xMin || e.xValue > xMax) return;\n\n        drawTag(ctx, e, g.toDomXCoord(e.xValue), domY);\n      });\n\n      config.underlayCallback?.call(ctx, area, g);\n    }\n  };\n}"],"names":["utils.binarySearch","utils.DateAccessorsUTC","utils.DateAccessorsLocal","addEvent","idx","_isNode","property","g","DygraphTickers.Granularity","handler","cb","utils.update","utils.log10","annotations","utils.isCanvasSupported","utils.isArrayLike","utils.createIterator","utils.Circles","utils.toRGB_","i","ctx","pathBack","utils.isOK","utils.dragGetX_","utils.dragGetY_","utils.LOG_SCALE","utils.VERTICAL","utils.HORIZONTAL","utils.findPos","utils.pageX","utils.pageY","event","utils.removeEvent","utils.dateAxisLabelFormatter","utils.dateValueFormatter","DygraphTickers.dateTicker","utils.numberValueFormatter","utils.numberAxisLabelFormatter","DygraphTickers.numericTicks","a","x","y","getAxisOption","axes","pixelRatioOption","utils.getContextPixelRatio","utils.createCanvas","utils.getContext","utils.cancelEvent","utils.addEvent","Dygraph","require","utils.updateDeep","axis","utils.logRangeFraction","utils.isNodeContainedBy","nullOut","utils.hsvToRGB","context","utils.repeatAndCleanup","step","utils.isValidPoint","utils.dateParser","utils.detectLineDelimiter","utils.parseFloat_","utils.isDateLike","utils.clone","utils.typeArrayLike","utils.isPixelChangingOptionList","LegendPlugin","AxesPlugin","RangeSelectorPlugin","ChartLabelsPlugin","AnnotationsPlugin","GridPlugin","utils.DASHED_LINE","utils.DOT_DASH_LINE","utils.dateString_","DygraphTickers.numericLinearTicks","DygraphTickers.getDateAxis","utils.floatFormat","utils.setupDOMready_","series","graph"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23]}